
SRI Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000322  00800100  00003d34  00003dc8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003d34  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001ea  00800422  00800422  000040ea  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000040ea  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000003e8  00000000  00000000  00004146  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000048cd  00000000  00000000  0000452e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001448  00000000  00000000  00008dfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000016ce  00000000  00000000  0000a243  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000d24  00000000  00000000  0000b914  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000e9c  00000000  00000000  0000c638  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002f05  00000000  00000000  0000d4d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000003a8  00000000  00000000  000103d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bc 00 	jmp	0x178	; 0x178 <__ctors_end>
       4:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       8:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      10:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      14:	0c 94 86 03 	jmp	0x70c	; 0x70c <__vector_5>
      18:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      1c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      20:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      24:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      28:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      2c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      30:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      34:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      38:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      3c:	0c 94 52 12 	jmp	0x24a4	; 0x24a4 <__vector_15>
      40:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      44:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      48:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      4c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      50:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__vector_20>
      54:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      58:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      5c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      60:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      64:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      68:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      6c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      70:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      74:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      78:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      7c:	52 01       	movw	r10, r4
      7e:	4a 01       	movw	r8, r20
      80:	86 01       	movw	r16, r12
      82:	a4 01       	movw	r20, r8
      84:	35 01       	movw	r6, r10
      86:	38 01       	movw	r6, r16
      88:	a4 01       	movw	r20, r8
      8a:	83 01       	movw	r16, r6
      8c:	a4 01       	movw	r20, r8
      8e:	a4 01       	movw	r20, r8
      90:	a4 01       	movw	r20, r8
      92:	a4 01       	movw	r20, r8
      94:	a2 01       	movw	r20, r4
      96:	a4 01       	movw	r20, r8
      98:	a4 01       	movw	r20, r8
      9a:	a4 01       	movw	r20, r8
      9c:	5a 01       	movw	r10, r20
      9e:	3b 01       	movw	r6, r22
      a0:	42 01       	movw	r8, r4
      a2:	47 01       	movw	r8, r14
      a4:	63 01       	movw	r12, r6
      a6:	68 01       	movw	r12, r16
      a8:	5d 01       	movw	r10, r26
      aa:	9f 01       	movw	r18, r30
      ac:	96 01       	movw	r18, r12
      ae:	8b 18       	sub	r8, r11
      b0:	98 18       	sub	r9, r8
      b2:	a9 18       	sub	r10, r9
      b4:	13 19       	sub	r17, r3
      b6:	67 19       	sub	r22, r7
      b8:	78 19       	sub	r23, r8
      ba:	88 19       	sub	r24, r8
      bc:	9e 19       	sub	r25, r14
      be:	ac 19       	sub	r26, r12
      c0:	00 1a       	sub	r0, r16
      c2:	4d 1a       	sub	r4, r29
      c4:	a3 1a       	sub	r10, r19
      c6:	3d 1b       	sub	r19, r29
      c8:	4a 1b       	sub	r20, r26
      ca:	4a 1b       	sub	r20, r26
      cc:	4a 1b       	sub	r20, r26
      ce:	4a 1b       	sub	r20, r26
      d0:	4a 1b       	sub	r20, r26
      d2:	4a 1b       	sub	r20, r26
      d4:	4a 1b       	sub	r20, r26
      d6:	4a 1b       	sub	r20, r26
      d8:	4a 1b       	sub	r20, r26
      da:	4a 1b       	sub	r20, r26
      dc:	4a 1b       	sub	r20, r26
      de:	4a 1b       	sub	r20, r26
      e0:	4a 1b       	sub	r20, r26
      e2:	4a 1b       	sub	r20, r26
      e4:	4a 1b       	sub	r20, r26
      e6:	4a 1b       	sub	r20, r26
      e8:	4a 1b       	sub	r20, r26
      ea:	4a 1b       	sub	r20, r26
      ec:	4a 1b       	sub	r20, r26
      ee:	4a 1b       	sub	r20, r26
      f0:	f2 17       	cp	r31, r18
      f2:	3f 18       	sub	r3, r15
      f4:	4a 1b       	sub	r20, r26
      f6:	4a 1b       	sub	r20, r26
      f8:	4a 1b       	sub	r20, r26
      fa:	4a 1b       	sub	r20, r26
      fc:	4a 1b       	sub	r20, r26
      fe:	4a 1b       	sub	r20, r26
     100:	4a 1b       	sub	r20, r26
     102:	4a 1b       	sub	r20, r26
     104:	4a 1b       	sub	r20, r26
     106:	4a 1b       	sub	r20, r26
     108:	4a 1b       	sub	r20, r26
     10a:	4a 1b       	sub	r20, r26
     10c:	4a 1b       	sub	r20, r26
     10e:	4a 1b       	sub	r20, r26
     110:	4a 1b       	sub	r20, r26
     112:	4a 1b       	sub	r20, r26
     114:	4a 1b       	sub	r20, r26
     116:	4a 1b       	sub	r20, r26
     118:	4a 1b       	sub	r20, r26
     11a:	4a 1b       	sub	r20, r26
     11c:	4a 1b       	sub	r20, r26
     11e:	4a 1b       	sub	r20, r26
     120:	4a 1b       	sub	r20, r26
     122:	4a 1b       	sub	r20, r26
     124:	4a 1b       	sub	r20, r26
     126:	4a 1b       	sub	r20, r26
     128:	4a 1b       	sub	r20, r26
     12a:	4a 1b       	sub	r20, r26
     12c:	4a 1b       	sub	r20, r26
     12e:	4a 1b       	sub	r20, r26
     130:	4a 1b       	sub	r20, r26
     132:	4a 1b       	sub	r20, r26
     134:	4a 1b       	sub	r20, r26
     136:	4a 1b       	sub	r20, r26
     138:	4a 1b       	sub	r20, r26
     13a:	4a 1b       	sub	r20, r26
     13c:	4a 1b       	sub	r20, r26
     13e:	4a 1b       	sub	r20, r26
     140:	4a 1b       	sub	r20, r26
     142:	4a 1b       	sub	r20, r26
     144:	4a 1b       	sub	r20, r26
     146:	4a 1b       	sub	r20, r26
     148:	4a 1b       	sub	r20, r26
     14a:	4a 1b       	sub	r20, r26
     14c:	4a 1b       	sub	r20, r26
     14e:	4a 1b       	sub	r20, r26
     150:	4a 1b       	sub	r20, r26
     152:	4a 1b       	sub	r20, r26
     154:	4a 1b       	sub	r20, r26
     156:	4a 1b       	sub	r20, r26
     158:	4a 1b       	sub	r20, r26
     15a:	4a 1b       	sub	r20, r26
     15c:	4a 1b       	sub	r20, r26
     15e:	4a 1b       	sub	r20, r26
     160:	4a 1b       	sub	r20, r26
     162:	4a 1b       	sub	r20, r26
     164:	4a 1b       	sub	r20, r26
     166:	4a 1b       	sub	r20, r26
     168:	4a 1b       	sub	r20, r26
     16a:	4a 1b       	sub	r20, r26
     16c:	4a 1b       	sub	r20, r26
     16e:	4a 1b       	sub	r20, r26
     170:	4a 1b       	sub	r20, r26
     172:	4a 1b       	sub	r20, r26
     174:	4a 1b       	sub	r20, r26
     176:	ba 18       	sub	r11, r10

00000178 <__ctors_end>:
     178:	11 24       	eor	r1, r1
     17a:	1f be       	out	0x3f, r1	; 63
     17c:	cf ef       	ldi	r28, 0xFF	; 255
     17e:	d0 e1       	ldi	r29, 0x10	; 16
     180:	de bf       	out	0x3e, r29	; 62
     182:	cd bf       	out	0x3d, r28	; 61

00000184 <__do_copy_data>:
     184:	14 e0       	ldi	r17, 0x04	; 4
     186:	a0 e0       	ldi	r26, 0x00	; 0
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	e4 e3       	ldi	r30, 0x34	; 52
     18c:	fd e3       	ldi	r31, 0x3D	; 61
     18e:	02 c0       	rjmp	.+4      	; 0x194 <__do_copy_data+0x10>
     190:	05 90       	lpm	r0, Z+
     192:	0d 92       	st	X+, r0
     194:	a2 32       	cpi	r26, 0x22	; 34
     196:	b1 07       	cpc	r27, r17
     198:	d9 f7       	brne	.-10     	; 0x190 <__do_copy_data+0xc>

0000019a <__do_clear_bss>:
     19a:	26 e0       	ldi	r18, 0x06	; 6
     19c:	a2 e2       	ldi	r26, 0x22	; 34
     19e:	b4 e0       	ldi	r27, 0x04	; 4
     1a0:	01 c0       	rjmp	.+2      	; 0x1a4 <.do_clear_bss_start>

000001a2 <.do_clear_bss_loop>:
     1a2:	1d 92       	st	X+, r1

000001a4 <.do_clear_bss_start>:
     1a4:	ac 30       	cpi	r26, 0x0C	; 12
     1a6:	b2 07       	cpc	r27, r18
     1a8:	e1 f7       	brne	.-8      	; 0x1a2 <.do_clear_bss_loop>
     1aa:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <main>
     1ae:	0c 94 98 1e 	jmp	0x3d30	; 0x3d30 <_exit>

000001b2 <__bad_interrupt>:
     1b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b6 <resetBTProtocol>:
     1b6:	10 92 2a 04 	sts	0x042A, r1
     1ba:	80 e0       	ldi	r24, 0x00	; 0
     1bc:	08 95       	ret

000001be <prelucreazaDatele>:
     1be:	0f 93       	push	r16
     1c0:	cf 93       	push	r28
     1c2:	df 93       	push	r29
     1c4:	80 91 34 04 	lds	r24, 0x0434
     1c8:	9f ef       	ldi	r25, 0xFF	; 255
     1ca:	98 0f       	add	r25, r24
     1cc:	96 30       	cpi	r25, 0x06	; 6
     1ce:	08 f0       	brcs	.+2      	; 0x1d2 <prelucreazaDatele+0x14>
     1d0:	41 c0       	rjmp	.+130    	; 0x254 <prelucreazaDatele+0x96>
     1d2:	c0 91 35 04 	lds	r28, 0x0435
     1d6:	d0 91 36 04 	lds	r29, 0x0436
     1da:	90 91 2f 04 	lds	r25, 0x042F
     1de:	93 30       	cpi	r25, 0x03	; 3
     1e0:	19 f4       	brne	.+6      	; 0x1e8 <prelucreazaDatele+0x2a>
     1e2:	80 e0       	ldi	r24, 0x00	; 0
     1e4:	0e 94 12 10 	call	0x2024	; 0x2024 <toggleDebuggingOff>
     1e8:	90 91 34 04 	lds	r25, 0x0434
     1ec:	93 30       	cpi	r25, 0x03	; 3
     1ee:	b1 f0       	breq	.+44     	; 0x21c <prelucreazaDatele+0x5e>
     1f0:	28 f4       	brcc	.+10     	; 0x1fc <prelucreazaDatele+0x3e>
     1f2:	91 30       	cpi	r25, 0x01	; 1
     1f4:	49 f0       	breq	.+18     	; 0x208 <prelucreazaDatele+0x4a>
     1f6:	92 30       	cpi	r25, 0x02	; 2
     1f8:	61 f0       	breq	.+24     	; 0x212 <prelucreazaDatele+0x54>
     1fa:	23 c0       	rjmp	.+70     	; 0x242 <prelucreazaDatele+0x84>
     1fc:	95 30       	cpi	r25, 0x05	; 5
     1fe:	99 f0       	breq	.+38     	; 0x226 <prelucreazaDatele+0x68>
     200:	b8 f0       	brcs	.+46     	; 0x230 <prelucreazaDatele+0x72>
     202:	96 30       	cpi	r25, 0x06	; 6
     204:	d1 f0       	breq	.+52     	; 0x23a <prelucreazaDatele+0x7c>
     206:	1d c0       	rjmp	.+58     	; 0x242 <prelucreazaDatele+0x84>
     208:	6d 2f       	mov	r22, r29
     20a:	8c 2f       	mov	r24, r28
     20c:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
     210:	18 c0       	rjmp	.+48     	; 0x242 <prelucreazaDatele+0x84>
     212:	6d 2f       	mov	r22, r29
     214:	8c 2f       	mov	r24, r28
     216:	0e 94 7f 05 	call	0xafe	; 0xafe <goBack>
     21a:	13 c0       	rjmp	.+38     	; 0x242 <prelucreazaDatele+0x84>
     21c:	6d 2f       	mov	r22, r29
     21e:	8c 2f       	mov	r24, r28
     220:	0e 94 b0 05 	call	0xb60	; 0xb60 <goFrontLeft>
     224:	0e c0       	rjmp	.+28     	; 0x242 <prelucreazaDatele+0x84>
     226:	6d 2f       	mov	r22, r29
     228:	8c 2f       	mov	r24, r28
     22a:	0e 94 0f 06 	call	0xc1e	; 0xc1e <goBackLeft>
     22e:	09 c0       	rjmp	.+18     	; 0x242 <prelucreazaDatele+0x84>
     230:	6d 2f       	mov	r22, r29
     232:	8c 2f       	mov	r24, r28
     234:	0e 94 de 05 	call	0xbbc	; 0xbbc <goFrontRight>
     238:	04 c0       	rjmp	.+8      	; 0x242 <prelucreazaDatele+0x84>
     23a:	6d 2f       	mov	r22, r29
     23c:	8c 2f       	mov	r24, r28
     23e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <goBackRight>
     242:	80 91 2f 04 	lds	r24, 0x042F
     246:	83 30       	cpi	r24, 0x03	; 3
     248:	09 f0       	breq	.+2      	; 0x24c <prelucreazaDatele+0x8e>
     24a:	7e c0       	rjmp	.+252    	; 0x348 <prelucreazaDatele+0x18a>
     24c:	81 e0       	ldi	r24, 0x01	; 1
     24e:	0e 94 12 10 	call	0x2024	; 0x2024 <toggleDebuggingOff>
     252:	7a c0       	rjmp	.+244    	; 0x348 <prelucreazaDatele+0x18a>
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	fc 01       	movw	r30, r24
     258:	37 97       	sbiw	r30, 0x07	; 7
     25a:	e9 31       	cpi	r30, 0x19	; 25
     25c:	f1 05       	cpc	r31, r1
     25e:	08 f0       	brcs	.+2      	; 0x262 <prelucreazaDatele+0xa4>
     260:	73 c0       	rjmp	.+230    	; 0x348 <prelucreazaDatele+0x18a>
     262:	e2 5c       	subi	r30, 0xC2	; 194
     264:	ff 4f       	sbci	r31, 0xFF	; 255
     266:	0c 94 93 1b 	jmp	0x3726	; 0x3726 <__tablejump2__>
     26a:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <initFindPlaces1>
     26e:	6c c0       	rjmp	.+216    	; 0x348 <prelucreazaDatele+0x18a>
     270:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <checkFreeParallelParkingPlace>
     274:	69 c0       	rjmp	.+210    	; 0x348 <prelucreazaDatele+0x18a>
     276:	60 91 36 04 	lds	r22, 0x0436
     27a:	80 91 35 04 	lds	r24, 0x0435
     27e:	0e 94 56 15 	call	0x2aac	; 0x2aac <ledAction>
     282:	62 c0       	rjmp	.+196    	; 0x348 <prelucreazaDatele+0x18a>
     284:	80 91 35 04 	lds	r24, 0x0435
     288:	0e 94 46 08 	call	0x108c	; 0x108c <toggleSensorSend>
     28c:	5d c0       	rjmp	.+186    	; 0x348 <prelucreazaDatele+0x18a>
     28e:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
     292:	5a c0       	rjmp	.+180    	; 0x348 <prelucreazaDatele+0x18a>
     294:	41 e0       	ldi	r20, 0x01	; 1
     296:	60 91 36 04 	lds	r22, 0x0436
     29a:	80 91 35 04 	lds	r24, 0x0435
     29e:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
     2a2:	52 c0       	rjmp	.+164    	; 0x348 <prelucreazaDatele+0x18a>
     2a4:	40 e0       	ldi	r20, 0x00	; 0
     2a6:	60 91 36 04 	lds	r22, 0x0436
     2aa:	80 91 35 04 	lds	r24, 0x0435
     2ae:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
     2b2:	4a c0       	rjmp	.+148    	; 0x348 <prelucreazaDatele+0x18a>
     2b4:	0e 94 61 15 	call	0x2ac2	; 0x2ac2 <initAndStartStateMachineTest1>
     2b8:	47 c0       	rjmp	.+142    	; 0x348 <prelucreazaDatele+0x18a>
     2ba:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	0e 94 cb 13 	call	0x2796	; 0x2796 <resetTimerQueue>
     2c4:	41 c0       	rjmp	.+130    	; 0x348 <prelucreazaDatele+0x18a>
     2c6:	80 91 35 04 	lds	r24, 0x0435
     2ca:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <getAverageSpeed>
     2ce:	3c c0       	rjmp	.+120    	; 0x348 <prelucreazaDatele+0x18a>
     2d0:	80 91 3f 04 	lds	r24, 0x043F
     2d4:	83 30       	cpi	r24, 0x03	; 3
     2d6:	c0 f1       	brcs	.+112    	; 0x348 <prelucreazaDatele+0x18a>
     2d8:	60 91 35 04 	lds	r22, 0x0435
     2dc:	86 2f       	mov	r24, r22
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	a0 e0       	ldi	r26, 0x00	; 0
     2e2:	b0 e0       	ldi	r27, 0x00	; 0
     2e4:	ba 2f       	mov	r27, r26
     2e6:	a9 2f       	mov	r26, r25
     2e8:	98 2f       	mov	r25, r24
     2ea:	88 27       	eor	r24, r24
     2ec:	20 91 36 04 	lds	r18, 0x0436
     2f0:	bc 01       	movw	r22, r24
     2f2:	cd 01       	movw	r24, r26
     2f4:	62 0f       	add	r22, r18
     2f6:	71 1d       	adc	r23, r1
     2f8:	81 1d       	adc	r24, r1
     2fa:	91 1d       	adc	r25, r1
     2fc:	40 91 37 04 	lds	r20, 0x0437
     300:	0e 94 6d 15 	call	0x2ada	; 0x2ada <initParcurgereDistanta>
     304:	21 c0       	rjmp	.+66     	; 0x348 <prelucreazaDatele+0x18a>
     306:	0e 94 da 16 	call	0x2db4	; 0x2db4 <initParalelParking>
     30a:	1e c0       	rjmp	.+60     	; 0x348 <prelucreazaDatele+0x18a>
     30c:	80 91 3f 04 	lds	r24, 0x043F
     310:	84 30       	cpi	r24, 0x04	; 4
     312:	d0 f0       	brcs	.+52     	; 0x348 <prelucreazaDatele+0x18a>
     314:	00 91 38 04 	lds	r16, 0x0438
     318:	20 91 37 04 	lds	r18, 0x0437
     31c:	40 91 36 04 	lds	r20, 0x0436
     320:	60 91 35 04 	lds	r22, 0x0435
     324:	82 e0       	ldi	r24, 0x02	; 2
     326:	0e 94 70 06 	call	0xce0	; 0xce0 <rotireSmechera>
     32a:	0e c0       	rjmp	.+28     	; 0x348 <prelucreazaDatele+0x18a>
     32c:	80 91 3f 04 	lds	r24, 0x043F
     330:	81 30       	cpi	r24, 0x01	; 1
     332:	51 f4       	brne	.+20     	; 0x348 <prelucreazaDatele+0x18a>
     334:	80 91 35 04 	lds	r24, 0x0435
     338:	0e 94 55 10 	call	0x20aa	; 0x20aa <setSettings>
     33c:	05 c0       	rjmp	.+10     	; 0x348 <prelucreazaDatele+0x18a>
     33e:	0e 94 35 10 	call	0x206a	; 0x206a <getSettings>
     342:	02 c0       	rjmp	.+4      	; 0x348 <prelucreazaDatele+0x18a>
     344:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <sendSensors>
     348:	df 91       	pop	r29
     34a:	cf 91       	pop	r28
     34c:	0f 91       	pop	r16
     34e:	08 95       	ret

00000350 <BTTransmitStr>:
     350:	fc 01       	movw	r30, r24
     352:	01 90       	ld	r0, Z+
     354:	00 20       	and	r0, r0
     356:	e9 f7       	brne	.-6      	; 0x352 <BTTransmitStr+0x2>
     358:	31 97       	sbiw	r30, 0x01	; 1
     35a:	e8 1b       	sub	r30, r24
     35c:	f9 0b       	sbc	r31, r25
     35e:	2e 2f       	mov	r18, r30
     360:	3a ea       	ldi	r19, 0xAA	; 170
     362:	30 93 c6 00 	sts	0x00C6, r19
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     366:	ab ed       	ldi	r26, 0xDB	; 219
     368:	b5 e0       	ldi	r27, 0x05	; 5
     36a:	11 97       	sbiw	r26, 0x01	; 1
     36c:	f1 f7       	brne	.-4      	; 0x36a <BTTransmitStr+0x1a>
     36e:	00 c0       	rjmp	.+0      	; 0x370 <BTTransmitStr+0x20>
     370:	00 00       	nop
     372:	37 e1       	ldi	r19, 0x17	; 23
     374:	30 93 c6 00 	sts	0x00C6, r19
     378:	ab ed       	ldi	r26, 0xDB	; 219
     37a:	b5 e0       	ldi	r27, 0x05	; 5
     37c:	11 97       	sbiw	r26, 0x01	; 1
     37e:	f1 f7       	brne	.-4      	; 0x37c <BTTransmitStr+0x2c>
     380:	00 c0       	rjmp	.+0      	; 0x382 <BTTransmitStr+0x32>
     382:	00 00       	nop
     384:	e0 93 c6 00 	sts	0x00C6, r30
     388:	eb ed       	ldi	r30, 0xDB	; 219
     38a:	f5 e0       	ldi	r31, 0x05	; 5
     38c:	31 97       	sbiw	r30, 0x01	; 1
     38e:	f1 f7       	brne	.-4      	; 0x38c <BTTransmitStr+0x3c>
     390:	00 c0       	rjmp	.+0      	; 0x392 <BTTransmitStr+0x42>
     392:	00 00       	nop
     394:	22 23       	and	r18, r18
     396:	89 f0       	breq	.+34     	; 0x3ba <BTTransmitStr+0x6a>
     398:	38 2f       	mov	r19, r24
     39a:	e8 2f       	mov	r30, r24
     39c:	f9 2f       	mov	r31, r25
     39e:	a6 ec       	ldi	r26, 0xC6	; 198
     3a0:	b0 e0       	ldi	r27, 0x00	; 0
     3a2:	81 91       	ld	r24, Z+
     3a4:	8c 93       	st	X, r24
     3a6:	8b ed       	ldi	r24, 0xDB	; 219
     3a8:	95 e0       	ldi	r25, 0x05	; 5
     3aa:	01 97       	sbiw	r24, 0x01	; 1
     3ac:	f1 f7       	brne	.-4      	; 0x3aa <BTTransmitStr+0x5a>
     3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <BTTransmitStr+0x60>
     3b0:	00 00       	nop
     3b2:	8e 2f       	mov	r24, r30
     3b4:	83 1b       	sub	r24, r19
     3b6:	82 17       	cp	r24, r18
     3b8:	a0 f3       	brcs	.-24     	; 0x3a2 <BTTransmitStr+0x52>
     3ba:	85 e5       	ldi	r24, 0x55	; 85
     3bc:	80 93 c6 00 	sts	0x00C6, r24
     3c0:	ab ed       	ldi	r26, 0xDB	; 219
     3c2:	b5 e0       	ldi	r27, 0x05	; 5
     3c4:	11 97       	sbiw	r26, 0x01	; 1
     3c6:	f1 f7       	brne	.-4      	; 0x3c4 <BTTransmitStr+0x74>
     3c8:	00 c0       	rjmp	.+0      	; 0x3ca <BTTransmitStr+0x7a>
     3ca:	00 00       	nop
     3cc:	08 95       	ret

000003ce <BTTransmitMsg>:
     3ce:	cf 93       	push	r28
     3d0:	df 93       	push	r29
     3d2:	70 e0       	ldi	r23, 0x00	; 0
     3d4:	61 15       	cp	r22, r1
     3d6:	71 05       	cpc	r23, r1
     3d8:	91 f0       	breq	.+36     	; 0x3fe <BTTransmitMsg+0x30>
     3da:	e8 2f       	mov	r30, r24
     3dc:	f9 2f       	mov	r31, r25
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	a6 ec       	ldi	r26, 0xC6	; 198
     3e4:	b0 e0       	ldi	r27, 0x00	; 0
     3e6:	21 91       	ld	r18, Z+
     3e8:	2c 93       	st	X, r18
     3ea:	cb ed       	ldi	r28, 0xDB	; 219
     3ec:	d5 e0       	ldi	r29, 0x05	; 5
     3ee:	21 97       	sbiw	r28, 0x01	; 1
     3f0:	f1 f7       	brne	.-4      	; 0x3ee <BTTransmitMsg+0x20>
     3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <BTTransmitMsg+0x26>
     3f4:	00 00       	nop
     3f6:	01 96       	adiw	r24, 0x01	; 1
     3f8:	86 17       	cp	r24, r22
     3fa:	97 07       	cpc	r25, r23
     3fc:	a0 f3       	brcs	.-24     	; 0x3e6 <BTTransmitMsg+0x18>
     3fe:	df 91       	pop	r29
     400:	cf 91       	pop	r28
     402:	08 95       	ret

00000404 <reTransmit>:
     404:	cf 93       	push	r28
     406:	df 93       	push	r29
     408:	00 d0       	rcall	.+0      	; 0x40a <reTransmit+0x6>
     40a:	00 d0       	rcall	.+0      	; 0x40c <reTransmit+0x8>
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
     410:	82 e0       	ldi	r24, 0x02	; 2
     412:	91 e0       	ldi	r25, 0x01	; 1
     414:	9f 93       	push	r25
     416:	8f 93       	push	r24
     418:	0e 94 b3 1b 	call	0x3766	; 0x3766 <printf>
     41c:	8a ea       	ldi	r24, 0xAA	; 170
     41e:	89 83       	std	Y+1, r24	; 0x01
     420:	86 e1       	ldi	r24, 0x16	; 22
     422:	8a 83       	std	Y+2, r24	; 0x02
     424:	1b 82       	std	Y+3, r1	; 0x03
     426:	85 e5       	ldi	r24, 0x55	; 85
     428:	8c 83       	std	Y+4, r24	; 0x04
     42a:	64 e0       	ldi	r22, 0x04	; 4
     42c:	ce 01       	movw	r24, r28
     42e:	01 96       	adiw	r24, 0x01	; 1
     430:	0e 94 e7 01 	call	0x3ce	; 0x3ce <BTTransmitMsg>
     434:	0f 90       	pop	r0
     436:	0f 90       	pop	r0
     438:	0f 90       	pop	r0
     43a:	0f 90       	pop	r0
     43c:	0f 90       	pop	r0
     43e:	0f 90       	pop	r0
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	08 95       	ret

00000446 <BTProtocolReadByte>:
     446:	f8 94       	cli
     448:	90 91 2a 04 	lds	r25, 0x042A
     44c:	92 30       	cpi	r25, 0x02	; 2
     44e:	f9 f0       	breq	.+62     	; 0x48e <BTProtocolReadByte+0x48>
     450:	28 f4       	brcc	.+10     	; 0x45c <BTProtocolReadByte+0x16>
     452:	99 23       	and	r25, r25
     454:	41 f0       	breq	.+16     	; 0x466 <BTProtocolReadByte+0x20>
     456:	91 30       	cpi	r25, 0x01	; 1
     458:	69 f0       	breq	.+26     	; 0x474 <BTProtocolReadByte+0x2e>
     45a:	4a c0       	rjmp	.+148    	; 0x4f0 <BTProtocolReadByte+0xaa>
     45c:	93 30       	cpi	r25, 0x03	; 3
     45e:	49 f1       	breq	.+82     	; 0x4b2 <BTProtocolReadByte+0x6c>
     460:	94 30       	cpi	r25, 0x04	; 4
     462:	c9 f1       	breq	.+114    	; 0x4d6 <BTProtocolReadByte+0x90>
     464:	45 c0       	rjmp	.+138    	; 0x4f0 <BTProtocolReadByte+0xaa>
     466:	8a 3a       	cpi	r24, 0xAA	; 170
     468:	09 f0       	breq	.+2      	; 0x46c <BTProtocolReadByte+0x26>
     46a:	42 c0       	rjmp	.+132    	; 0x4f0 <BTProtocolReadByte+0xaa>
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	80 93 2a 04 	sts	0x042A, r24
     472:	3e c0       	rjmp	.+124    	; 0x4f0 <BTProtocolReadByte+0xaa>
     474:	81 32       	cpi	r24, 0x21	; 33
     476:	30 f4       	brcc	.+12     	; 0x484 <BTProtocolReadByte+0x3e>
     478:	92 e0       	ldi	r25, 0x02	; 2
     47a:	90 93 2a 04 	sts	0x042A, r25
     47e:	80 93 34 04 	sts	0x0434, r24
     482:	36 c0       	rjmp	.+108    	; 0x4f0 <BTProtocolReadByte+0xaa>
     484:	10 92 2a 04 	sts	0x042A, r1
     488:	0e 94 02 02 	call	0x404	; 0x404 <reTransmit>
     48c:	31 c0       	rjmp	.+98     	; 0x4f0 <BTProtocolReadByte+0xaa>
     48e:	81 11       	cpse	r24, r1
     490:	04 c0       	rjmp	.+8      	; 0x49a <BTProtocolReadByte+0x54>
     492:	84 e0       	ldi	r24, 0x04	; 4
     494:	80 93 2a 04 	sts	0x042A, r24
     498:	2b c0       	rjmp	.+86     	; 0x4f0 <BTProtocolReadByte+0xaa>
     49a:	93 e0       	ldi	r25, 0x03	; 3
     49c:	90 93 2a 04 	sts	0x042A, r25
     4a0:	80 93 3f 04 	sts	0x043F, r24
     4a4:	10 92 2f 04 	sts	0x042F, r1
     4a8:	83 33       	cpi	r24, 0x33	; 51
     4aa:	10 f1       	brcs	.+68     	; 0x4f0 <BTProtocolReadByte+0xaa>
     4ac:	10 92 2a 04 	sts	0x042A, r1
     4b0:	1f c0       	rjmp	.+62     	; 0x4f0 <BTProtocolReadByte+0xaa>
     4b2:	e0 91 2f 04 	lds	r30, 0x042F
     4b6:	91 e0       	ldi	r25, 0x01	; 1
     4b8:	9e 0f       	add	r25, r30
     4ba:	90 93 2f 04 	sts	0x042F, r25
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	eb 5c       	subi	r30, 0xCB	; 203
     4c2:	fb 4f       	sbci	r31, 0xFB	; 251
     4c4:	80 83       	st	Z, r24
     4c6:	80 91 3f 04 	lds	r24, 0x043F
     4ca:	98 17       	cp	r25, r24
     4cc:	88 f0       	brcs	.+34     	; 0x4f0 <BTProtocolReadByte+0xaa>
     4ce:	84 e0       	ldi	r24, 0x04	; 4
     4d0:	80 93 2a 04 	sts	0x042A, r24
     4d4:	0d c0       	rjmp	.+26     	; 0x4f0 <BTProtocolReadByte+0xaa>
     4d6:	85 35       	cpi	r24, 0x55	; 85
     4d8:	19 f0       	breq	.+6      	; 0x4e0 <BTProtocolReadByte+0x9a>
     4da:	0e 94 02 02 	call	0x404	; 0x404 <reTransmit>
     4de:	06 c0       	rjmp	.+12     	; 0x4ec <BTProtocolReadByte+0xa6>
     4e0:	8b ed       	ldi	r24, 0xDB	; 219
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
     4e8:	0e 94 df 00 	call	0x1be	; 0x1be <prelucreazaDatele>
     4ec:	10 92 2a 04 	sts	0x042A, r1
     4f0:	78 94       	sei
     4f2:	08 95       	ret

000004f4 <__vector_20>:
     4f4:	1f 92       	push	r1
     4f6:	0f 92       	push	r0
     4f8:	0f b6       	in	r0, 0x3f	; 63
     4fa:	0f 92       	push	r0
     4fc:	11 24       	eor	r1, r1
     4fe:	2f 93       	push	r18
     500:	3f 93       	push	r19
     502:	4f 93       	push	r20
     504:	5f 93       	push	r21
     506:	6f 93       	push	r22
     508:	7f 93       	push	r23
     50a:	8f 93       	push	r24
     50c:	9f 93       	push	r25
     50e:	af 93       	push	r26
     510:	bf 93       	push	r27
     512:	ef 93       	push	r30
     514:	ff 93       	push	r31
     516:	80 91 c6 00 	lds	r24, 0x00C6
     51a:	0e 94 23 02 	call	0x446	; 0x446 <BTProtocolReadByte>
     51e:	ff 91       	pop	r31
     520:	ef 91       	pop	r30
     522:	bf 91       	pop	r27
     524:	af 91       	pop	r26
     526:	9f 91       	pop	r25
     528:	8f 91       	pop	r24
     52a:	7f 91       	pop	r23
     52c:	6f 91       	pop	r22
     52e:	5f 91       	pop	r21
     530:	4f 91       	pop	r20
     532:	3f 91       	pop	r19
     534:	2f 91       	pop	r18
     536:	0f 90       	pop	r0
     538:	0f be       	out	0x3f, r0	; 63
     53a:	0f 90       	pop	r0
     53c:	1f 90       	pop	r1
     53e:	18 95       	reti

00000540 <BTTransmitMsgU>:
     540:	cf 93       	push	r28
     542:	df 93       	push	r29
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	61 15       	cp	r22, r1
     548:	71 05       	cpc	r23, r1
     54a:	91 f0       	breq	.+36     	; 0x570 <BTTransmitMsgU+0x30>
     54c:	e8 2f       	mov	r30, r24
     54e:	f9 2f       	mov	r31, r25
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	a6 ec       	ldi	r26, 0xC6	; 198
     556:	b0 e0       	ldi	r27, 0x00	; 0
     558:	21 91       	ld	r18, Z+
     55a:	2c 93       	st	X, r18
     55c:	cb ed       	ldi	r28, 0xDB	; 219
     55e:	d5 e0       	ldi	r29, 0x05	; 5
     560:	21 97       	sbiw	r28, 0x01	; 1
     562:	f1 f7       	brne	.-4      	; 0x560 <BTTransmitMsgU+0x20>
     564:	00 c0       	rjmp	.+0      	; 0x566 <BTTransmitMsgU+0x26>
     566:	00 00       	nop
     568:	01 96       	adiw	r24, 0x01	; 1
     56a:	86 17       	cp	r24, r22
     56c:	97 07       	cpc	r25, r23
     56e:	a0 f3       	brcs	.-24     	; 0x558 <BTTransmitMsgU+0x18>
     570:	df 91       	pop	r29
     572:	cf 91       	pop	r28
     574:	08 95       	ret

00000576 <sendCarStartedSignal>:
     576:	cf 93       	push	r28
     578:	df 93       	push	r29
     57a:	00 d0       	rcall	.+0      	; 0x57c <sendCarStartedSignal+0x6>
     57c:	00 d0       	rcall	.+0      	; 0x57e <sendCarStartedSignal+0x8>
     57e:	cd b7       	in	r28, 0x3d	; 61
     580:	de b7       	in	r29, 0x3e	; 62
     582:	8a ea       	ldi	r24, 0xAA	; 170
     584:	89 83       	std	Y+1, r24	; 0x01
     586:	80 e2       	ldi	r24, 0x20	; 32
     588:	8a 83       	std	Y+2, r24	; 0x02
     58a:	1b 82       	std	Y+3, r1	; 0x03
     58c:	85 e5       	ldi	r24, 0x55	; 85
     58e:	8c 83       	std	Y+4, r24	; 0x04
     590:	64 e0       	ldi	r22, 0x04	; 4
     592:	ce 01       	movw	r24, r28
     594:	01 96       	adiw	r24, 0x01	; 1
     596:	0e 94 a0 02 	call	0x540	; 0x540 <BTTransmitMsgU>
     59a:	0f 90       	pop	r0
     59c:	0f 90       	pop	r0
     59e:	0f 90       	pop	r0
     5a0:	0f 90       	pop	r0
     5a2:	df 91       	pop	r29
     5a4:	cf 91       	pop	r28
     5a6:	08 95       	ret

000005a8 <initBTProtocol>:
     5a8:	89 e1       	ldi	r24, 0x19	; 25
     5aa:	80 93 c4 00 	sts	0x00C4, r24
     5ae:	e1 ec       	ldi	r30, 0xC1	; 193
     5b0:	f0 e0       	ldi	r31, 0x00	; 0
     5b2:	80 81       	ld	r24, Z
     5b4:	80 68       	ori	r24, 0x80	; 128
     5b6:	80 83       	st	Z, r24
     5b8:	80 81       	ld	r24, Z
     5ba:	80 61       	ori	r24, 0x10	; 16
     5bc:	80 83       	st	Z, r24
     5be:	80 81       	ld	r24, Z
     5c0:	88 60       	ori	r24, 0x08	; 8
     5c2:	80 83       	st	Z, r24
     5c4:	10 92 2a 04 	sts	0x042A, r1
     5c8:	08 95       	ret

000005ca <countTimeForEncoders>:
     5ca:	80 91 00 01 	lds	r24, 0x0100
     5ce:	80 ff       	sbrs	r24, 0
     5d0:	22 c0       	rjmp	.+68     	; 0x616 <countTimeForEncoders+0x4c>
     5d2:	80 91 23 04 	lds	r24, 0x0423
     5d6:	90 91 24 04 	lds	r25, 0x0424
     5da:	a0 91 25 04 	lds	r26, 0x0425
     5de:	b0 91 26 04 	lds	r27, 0x0426
     5e2:	02 96       	adiw	r24, 0x02	; 2
     5e4:	a1 1d       	adc	r26, r1
     5e6:	b1 1d       	adc	r27, r1
     5e8:	80 93 23 04 	sts	0x0423, r24
     5ec:	90 93 24 04 	sts	0x0424, r25
     5f0:	a0 93 25 04 	sts	0x0425, r26
     5f4:	b0 93 26 04 	sts	0x0426, r27
     5f8:	80 91 22 04 	lds	r24, 0x0422
     5fc:	8f 5f       	subi	r24, 0xFF	; 255
     5fe:	80 93 22 04 	sts	0x0422, r24
     602:	80 91 22 04 	lds	r24, 0x0422
     606:	83 70       	andi	r24, 0x03	; 3
     608:	31 f0       	breq	.+12     	; 0x616 <countTimeForEncoders+0x4c>
     60a:	90 91 00 01 	lds	r25, 0x0100
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	89 27       	eor	r24, r25
     612:	80 93 00 01 	sts	0x0100, r24
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	08 95       	ret

0000061a <sendDistAndTimePeriodically>:
     61a:	0f 93       	push	r16
     61c:	1f 93       	push	r17
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	cd b7       	in	r28, 0x3d	; 61
     624:	de b7       	in	r29, 0x3e	; 62
     626:	64 97       	sbiw	r28, 0x14	; 20
     628:	0f b6       	in	r0, 0x3f	; 63
     62a:	f8 94       	cli
     62c:	de bf       	out	0x3e, r29	; 62
     62e:	0f be       	out	0x3f, r0	; 63
     630:	cd bf       	out	0x3d, r28	; 61
     632:	80 91 00 01 	lds	r24, 0x0100
     636:	81 ff       	sbrs	r24, 1
     638:	5d c0       	rjmp	.+186    	; 0x6f4 <sendDistAndTimePeriodically+0xda>
     63a:	90 91 00 01 	lds	r25, 0x0100
     63e:	82 e0       	ldi	r24, 0x02	; 2
     640:	89 27       	eor	r24, r25
     642:	80 93 00 01 	sts	0x0100, r24
     646:	80 91 40 04 	lds	r24, 0x0440
     64a:	90 91 41 04 	lds	r25, 0x0441
     64e:	a0 91 42 04 	lds	r26, 0x0442
     652:	b0 91 43 04 	lds	r27, 0x0443
     656:	40 91 46 04 	lds	r20, 0x0446
     65a:	50 91 47 04 	lds	r21, 0x0447
     65e:	60 91 48 04 	lds	r22, 0x0448
     662:	70 91 49 04 	lds	r23, 0x0449
     666:	84 0f       	add	r24, r20
     668:	95 1f       	adc	r25, r21
     66a:	a6 1f       	adc	r26, r22
     66c:	b7 1f       	adc	r27, r23
     66e:	ac 01       	movw	r20, r24
     670:	bd 01       	movw	r22, r26
     672:	44 0f       	add	r20, r20
     674:	55 1f       	adc	r21, r21
     676:	66 1f       	adc	r22, r22
     678:	77 1f       	adc	r23, r23
     67a:	44 0f       	add	r20, r20
     67c:	55 1f       	adc	r21, r21
     67e:	66 1f       	adc	r22, r22
     680:	77 1f       	adc	r23, r23
     682:	8a 01       	movw	r16, r20
     684:	9b 01       	movw	r18, r22
     686:	00 0f       	add	r16, r16
     688:	11 1f       	adc	r17, r17
     68a:	22 1f       	adc	r18, r18
     68c:	33 1f       	adc	r19, r19
     68e:	00 0f       	add	r16, r16
     690:	11 1f       	adc	r17, r17
     692:	22 1f       	adc	r18, r18
     694:	33 1f       	adc	r19, r19
     696:	40 0f       	add	r20, r16
     698:	51 1f       	adc	r21, r17
     69a:	62 1f       	adc	r22, r18
     69c:	73 1f       	adc	r23, r19
     69e:	84 0f       	add	r24, r20
     6a0:	95 1f       	adc	r25, r21
     6a2:	a6 1f       	adc	r26, r22
     6a4:	b7 1f       	adc	r27, r23
     6a6:	ac 01       	movw	r20, r24
     6a8:	bd 01       	movw	r22, r26
     6aa:	76 95       	lsr	r23
     6ac:	67 95       	ror	r22
     6ae:	57 95       	ror	r21
     6b0:	47 95       	ror	r20
     6b2:	76 95       	lsr	r23
     6b4:	67 95       	ror	r22
     6b6:	57 95       	ror	r21
     6b8:	47 95       	ror	r20
     6ba:	80 91 23 04 	lds	r24, 0x0423
     6be:	90 91 24 04 	lds	r25, 0x0424
     6c2:	a0 91 25 04 	lds	r26, 0x0425
     6c6:	b0 91 26 04 	lds	r27, 0x0426
     6ca:	2a ea       	ldi	r18, 0xAA	; 170
     6cc:	29 83       	std	Y+1, r18	; 0x01
     6ce:	22 e1       	ldi	r18, 0x12	; 18
     6d0:	2a 83       	std	Y+2, r18	; 0x02
     6d2:	28 e0       	ldi	r18, 0x08	; 8
     6d4:	2b 83       	std	Y+3, r18	; 0x03
     6d6:	7c 83       	std	Y+4, r23	; 0x04
     6d8:	6d 83       	std	Y+5, r22	; 0x05
     6da:	5e 83       	std	Y+6, r21	; 0x06
     6dc:	4f 83       	std	Y+7, r20	; 0x07
     6de:	b8 87       	std	Y+8, r27	; 0x08
     6e0:	a9 87       	std	Y+9, r26	; 0x09
     6e2:	9a 87       	std	Y+10, r25	; 0x0a
     6e4:	8b 87       	std	Y+11, r24	; 0x0b
     6e6:	85 e5       	ldi	r24, 0x55	; 85
     6e8:	8c 87       	std	Y+12, r24	; 0x0c
     6ea:	6c e0       	ldi	r22, 0x0C	; 12
     6ec:	ce 01       	movw	r24, r28
     6ee:	01 96       	adiw	r24, 0x01	; 1
     6f0:	0e 94 a0 02 	call	0x540	; 0x540 <BTTransmitMsgU>
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	64 96       	adiw	r28, 0x14	; 20
     6f8:	0f b6       	in	r0, 0x3f	; 63
     6fa:	f8 94       	cli
     6fc:	de bf       	out	0x3e, r29	; 62
     6fe:	0f be       	out	0x3f, r0	; 63
     700:	cd bf       	out	0x3d, r28	; 61
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	1f 91       	pop	r17
     708:	0f 91       	pop	r16
     70a:	08 95       	ret

0000070c <__vector_5>:
     70c:	1f 92       	push	r1
     70e:	0f 92       	push	r0
     710:	0f b6       	in	r0, 0x3f	; 63
     712:	0f 92       	push	r0
     714:	11 24       	eor	r1, r1
     716:	2f 93       	push	r18
     718:	3f 93       	push	r19
     71a:	4f 93       	push	r20
     71c:	5f 93       	push	r21
     71e:	6f 93       	push	r22
     720:	7f 93       	push	r23
     722:	8f 93       	push	r24
     724:	9f 93       	push	r25
     726:	af 93       	push	r26
     728:	bf 93       	push	r27
     72a:	ef 93       	push	r30
     72c:	ff 93       	push	r31
     72e:	83 b1       	in	r24, 0x03	; 3
     730:	90 91 45 04 	lds	r25, 0x0445
     734:	81 70       	andi	r24, 0x01	; 1
     736:	98 17       	cp	r25, r24
     738:	b9 f0       	breq	.+46     	; 0x768 <__vector_5+0x5c>
     73a:	83 b1       	in	r24, 0x03	; 3
     73c:	81 70       	andi	r24, 0x01	; 1
     73e:	80 93 45 04 	sts	0x0445, r24
     742:	80 91 40 04 	lds	r24, 0x0440
     746:	90 91 41 04 	lds	r25, 0x0441
     74a:	a0 91 42 04 	lds	r26, 0x0442
     74e:	b0 91 43 04 	lds	r27, 0x0443
     752:	01 96       	adiw	r24, 0x01	; 1
     754:	a1 1d       	adc	r26, r1
     756:	b1 1d       	adc	r27, r1
     758:	80 93 40 04 	sts	0x0440, r24
     75c:	90 93 41 04 	sts	0x0441, r25
     760:	a0 93 42 04 	sts	0x0442, r26
     764:	b0 93 43 04 	sts	0x0443, r27
     768:	93 b1       	in	r25, 0x03	; 3
     76a:	80 91 44 04 	lds	r24, 0x0444
     76e:	90 78       	andi	r25, 0x80	; 128
     770:	98 17       	cp	r25, r24
     772:	b9 f0       	breq	.+46     	; 0x7a2 <__vector_5+0x96>
     774:	83 b1       	in	r24, 0x03	; 3
     776:	80 78       	andi	r24, 0x80	; 128
     778:	80 93 44 04 	sts	0x0444, r24
     77c:	80 91 46 04 	lds	r24, 0x0446
     780:	90 91 47 04 	lds	r25, 0x0447
     784:	a0 91 48 04 	lds	r26, 0x0448
     788:	b0 91 49 04 	lds	r27, 0x0449
     78c:	01 96       	adiw	r24, 0x01	; 1
     78e:	a1 1d       	adc	r26, r1
     790:	b1 1d       	adc	r27, r1
     792:	80 93 46 04 	sts	0x0446, r24
     796:	90 93 47 04 	sts	0x0447, r25
     79a:	a0 93 48 04 	sts	0x0448, r26
     79e:	b0 93 49 04 	sts	0x0449, r27
     7a2:	80 91 00 01 	lds	r24, 0x0100
     7a6:	83 70       	andi	r24, 0x03	; 3
     7a8:	71 f4       	brne	.+28     	; 0x7c6 <__vector_5+0xba>
     7aa:	85 e0       	ldi	r24, 0x05	; 5
     7ac:	80 93 00 01 	sts	0x0100, r24
     7b0:	10 92 22 04 	sts	0x0422, r1
     7b4:	21 e0       	ldi	r18, 0x01	; 1
     7b6:	40 e4       	ldi	r20, 0x40	; 64
     7b8:	5d e0       	ldi	r21, 0x0D	; 13
     7ba:	63 e0       	ldi	r22, 0x03	; 3
     7bc:	70 e0       	ldi	r23, 0x00	; 0
     7be:	85 ee       	ldi	r24, 0xE5	; 229
     7c0:	92 e0       	ldi	r25, 0x02	; 2
     7c2:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     7c6:	80 91 00 01 	lds	r24, 0x0100
     7ca:	83 60       	ori	r24, 0x03	; 3
     7cc:	80 93 00 01 	sts	0x0100, r24
     7d0:	10 92 22 04 	sts	0x0422, r1
     7d4:	ff 91       	pop	r31
     7d6:	ef 91       	pop	r30
     7d8:	bf 91       	pop	r27
     7da:	af 91       	pop	r26
     7dc:	9f 91       	pop	r25
     7de:	8f 91       	pop	r24
     7e0:	7f 91       	pop	r23
     7e2:	6f 91       	pop	r22
     7e4:	5f 91       	pop	r21
     7e6:	4f 91       	pop	r20
     7e8:	3f 91       	pop	r19
     7ea:	2f 91       	pop	r18
     7ec:	0f 90       	pop	r0
     7ee:	0f be       	out	0x3f, r0	; 63
     7f0:	0f 90       	pop	r0
     7f2:	1f 90       	pop	r1
     7f4:	18 95       	reti

000007f6 <getAverageSpeed>:
     7f6:	ff 92       	push	r15
     7f8:	0f 93       	push	r16
     7fa:	1f 93       	push	r17
     7fc:	cf 93       	push	r28
     7fe:	df 93       	push	r29
     800:	cd b7       	in	r28, 0x3d	; 61
     802:	de b7       	in	r29, 0x3e	; 62
     804:	c4 56       	subi	r28, 0x64	; 100
     806:	d1 09       	sbc	r29, r1
     808:	0f b6       	in	r0, 0x3f	; 63
     80a:	f8 94       	cli
     80c:	de bf       	out	0x3e, r29	; 62
     80e:	0f be       	out	0x3f, r0	; 63
     810:	cd bf       	out	0x3d, r28	; 61
     812:	f8 2e       	mov	r15, r24
     814:	00 91 23 04 	lds	r16, 0x0423
     818:	10 91 24 04 	lds	r17, 0x0424
     81c:	20 91 25 04 	lds	r18, 0x0425
     820:	30 91 26 04 	lds	r19, 0x0426
     824:	80 91 40 04 	lds	r24, 0x0440
     828:	90 91 41 04 	lds	r25, 0x0441
     82c:	a0 91 42 04 	lds	r26, 0x0442
     830:	b0 91 43 04 	lds	r27, 0x0443
     834:	40 91 46 04 	lds	r20, 0x0446
     838:	50 91 47 04 	lds	r21, 0x0447
     83c:	60 91 48 04 	lds	r22, 0x0448
     840:	70 91 49 04 	lds	r23, 0x0449
     844:	3f 93       	push	r19
     846:	2f 93       	push	r18
     848:	1f 93       	push	r17
     84a:	0f 93       	push	r16
     84c:	8a 01       	movw	r16, r20
     84e:	9b 01       	movw	r18, r22
     850:	08 0f       	add	r16, r24
     852:	19 1f       	adc	r17, r25
     854:	2a 1f       	adc	r18, r26
     856:	3b 1f       	adc	r19, r27
     858:	d9 01       	movw	r26, r18
     85a:	c8 01       	movw	r24, r16
     85c:	88 0f       	add	r24, r24
     85e:	99 1f       	adc	r25, r25
     860:	aa 1f       	adc	r26, r26
     862:	bb 1f       	adc	r27, r27
     864:	88 0f       	add	r24, r24
     866:	99 1f       	adc	r25, r25
     868:	aa 1f       	adc	r26, r26
     86a:	bb 1f       	adc	r27, r27
     86c:	ac 01       	movw	r20, r24
     86e:	bd 01       	movw	r22, r26
     870:	44 0f       	add	r20, r20
     872:	55 1f       	adc	r21, r21
     874:	66 1f       	adc	r22, r22
     876:	77 1f       	adc	r23, r23
     878:	44 0f       	add	r20, r20
     87a:	55 1f       	adc	r21, r21
     87c:	66 1f       	adc	r22, r22
     87e:	77 1f       	adc	r23, r23
     880:	84 0f       	add	r24, r20
     882:	95 1f       	adc	r25, r21
     884:	a6 1f       	adc	r26, r22
     886:	b7 1f       	adc	r27, r23
     888:	08 0f       	add	r16, r24
     88a:	19 1f       	adc	r17, r25
     88c:	2a 1f       	adc	r18, r26
     88e:	3b 1f       	adc	r19, r27
     890:	b9 01       	movw	r22, r18
     892:	a8 01       	movw	r20, r16
     894:	76 95       	lsr	r23
     896:	67 95       	ror	r22
     898:	57 95       	ror	r21
     89a:	47 95       	ror	r20
     89c:	76 95       	lsr	r23
     89e:	67 95       	ror	r22
     8a0:	57 95       	ror	r21
     8a2:	47 95       	ror	r20
     8a4:	7f 93       	push	r23
     8a6:	6f 93       	push	r22
     8a8:	5f 93       	push	r21
     8aa:	4f 93       	push	r20
     8ac:	83 e2       	ldi	r24, 0x23	; 35
     8ae:	91 e0       	ldi	r25, 0x01	; 1
     8b0:	9f 93       	push	r25
     8b2:	8f 93       	push	r24
     8b4:	8e 01       	movw	r16, r28
     8b6:	0f 5f       	subi	r16, 0xFF	; 255
     8b8:	1f 4f       	sbci	r17, 0xFF	; 255
     8ba:	1f 93       	push	r17
     8bc:	0f 93       	push	r16
     8be:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
     8c2:	c8 01       	movw	r24, r16
     8c4:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     8c8:	8d e0       	ldi	r24, 0x0D	; 13
     8ca:	93 e0       	ldi	r25, 0x03	; 3
     8cc:	0e 94 20 11 	call	0x2240	; 0x2240 <existsEntryInTimerQueue>
     8d0:	0f b6       	in	r0, 0x3f	; 63
     8d2:	f8 94       	cli
     8d4:	de bf       	out	0x3e, r29	; 62
     8d6:	0f be       	out	0x3f, r0	; 63
     8d8:	cd bf       	out	0x3d, r28	; 61
     8da:	81 11       	cpse	r24, r1
     8dc:	0a c0       	rjmp	.+20     	; 0x8f2 <getAverageSpeed+0xfc>
     8de:	21 e0       	ldi	r18, 0x01	; 1
     8e0:	48 e2       	ldi	r20, 0x28	; 40
     8e2:	56 e4       	ldi	r21, 0x46	; 70
     8e4:	6f e0       	ldi	r22, 0x0F	; 15
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	8d e0       	ldi	r24, 0x0D	; 13
     8ea:	93 e0       	ldi	r25, 0x03	; 3
     8ec:	0e 94 9d 10 	call	0x213a	; 0x213a <addEntryToTimerQueue>
     8f0:	04 c0       	rjmp	.+8      	; 0x8fa <getAverageSpeed+0x104>
     8f2:	8d e0       	ldi	r24, 0x0D	; 13
     8f4:	93 e0       	ldi	r25, 0x03	; 3
     8f6:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
     8fa:	ff 20       	and	r15, r15
     8fc:	c1 f0       	breq	.+48     	; 0x92e <getAverageSpeed+0x138>
     8fe:	10 92 40 04 	sts	0x0440, r1
     902:	10 92 41 04 	sts	0x0441, r1
     906:	10 92 42 04 	sts	0x0442, r1
     90a:	10 92 43 04 	sts	0x0443, r1
     90e:	10 92 46 04 	sts	0x0446, r1
     912:	10 92 47 04 	sts	0x0447, r1
     916:	10 92 48 04 	sts	0x0448, r1
     91a:	10 92 49 04 	sts	0x0449, r1
     91e:	10 92 23 04 	sts	0x0423, r1
     922:	10 92 24 04 	sts	0x0424, r1
     926:	10 92 25 04 	sts	0x0425, r1
     92a:	10 92 26 04 	sts	0x0426, r1
     92e:	cc 59       	subi	r28, 0x9C	; 156
     930:	df 4f       	sbci	r29, 0xFF	; 255
     932:	0f b6       	in	r0, 0x3f	; 63
     934:	f8 94       	cli
     936:	de bf       	out	0x3e, r29	; 62
     938:	0f be       	out	0x3f, r0	; 63
     93a:	cd bf       	out	0x3d, r28	; 61
     93c:	df 91       	pop	r29
     93e:	cf 91       	pop	r28
     940:	1f 91       	pop	r17
     942:	0f 91       	pop	r16
     944:	ff 90       	pop	r15
     946:	08 95       	ret

00000948 <resetEncoders>:
     948:	10 92 40 04 	sts	0x0440, r1
     94c:	10 92 41 04 	sts	0x0441, r1
     950:	10 92 42 04 	sts	0x0442, r1
     954:	10 92 43 04 	sts	0x0443, r1
     958:	10 92 46 04 	sts	0x0446, r1
     95c:	10 92 47 04 	sts	0x0447, r1
     960:	10 92 48 04 	sts	0x0448, r1
     964:	10 92 49 04 	sts	0x0449, r1
     968:	10 92 45 04 	sts	0x0445, r1
     96c:	10 92 44 04 	sts	0x0444, r1
     970:	08 95       	ret

00000972 <initEncoders>:
     972:	ec e6       	ldi	r30, 0x6C	; 108
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	80 81       	ld	r24, Z
     978:	81 60       	ori	r24, 0x01	; 1
     97a:	80 83       	st	Z, r24
     97c:	20 98       	cbi	0x04, 0	; 4
     97e:	80 81       	ld	r24, Z
     980:	80 68       	ori	r24, 0x80	; 128
     982:	80 83       	st	Z, r24
     984:	27 98       	cbi	0x04, 7	; 4
     986:	e8 e6       	ldi	r30, 0x68	; 104
     988:	f0 e0       	ldi	r31, 0x00	; 0
     98a:	80 81       	ld	r24, Z
     98c:	82 60       	ori	r24, 0x02	; 2
     98e:	80 83       	st	Z, r24
     990:	0e 94 a4 04 	call	0x948	; 0x948 <resetEncoders>
     994:	08 95       	ret

00000996 <setSendingDistAndTime>:
     996:	88 23       	and	r24, r24
     998:	51 f0       	breq	.+20     	; 0x9ae <setSendingDistAndTime+0x18>
     99a:	21 e0       	ldi	r18, 0x01	; 1
     99c:	40 e2       	ldi	r20, 0x20	; 32
     99e:	51 ea       	ldi	r21, 0xA1	; 161
     9a0:	67 e0       	ldi	r22, 0x07	; 7
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	8d e0       	ldi	r24, 0x0D	; 13
     9a6:	93 e0       	ldi	r25, 0x03	; 3
     9a8:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     9ac:	08 95       	ret
     9ae:	8d e0       	ldi	r24, 0x0D	; 13
     9b0:	93 e0       	ldi	r25, 0x03	; 3
     9b2:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
     9b6:	08 95       	ret

000009b8 <stopEngines>:
     9b8:	17 bc       	out	0x27, r1	; 39
     9ba:	10 92 b3 00 	sts	0x00B3, r1
     9be:	82 b1       	in	r24, 0x02	; 2
     9c0:	80 78       	andi	r24, 0x80	; 128
     9c2:	82 b9       	out	0x02, r24	; 2
     9c4:	8b b1       	in	r24, 0x0b	; 11
     9c6:	88 7f       	andi	r24, 0xF8	; 248
     9c8:	8b b9       	out	0x0b, r24	; 11
     9ca:	8b b1       	in	r24, 0x0b	; 11
     9cc:	80 7e       	andi	r24, 0xE0	; 224
     9ce:	8b b9       	out	0x0b, r24	; 11
     9d0:	8b b1       	in	r24, 0x0b	; 11
     9d2:	80 7f       	andi	r24, 0xF0	; 240
     9d4:	8b b9       	out	0x0b, r24	; 11
     9d6:	8b b1       	in	r24, 0x0b	; 11
     9d8:	80 7c       	andi	r24, 0xC0	; 192
     9da:	8b b9       	out	0x0b, r24	; 11
     9dc:	0e 94 e6 07 	call	0xfcc	; 0xfcc <turnBlinkingOff>
     9e0:	80 91 28 04 	lds	r24, 0x0428
     9e4:	80 ff       	sbrs	r24, 0
     9e6:	04 c0       	rjmp	.+8      	; 0x9f0 <stopEngines+0x38>
     9e8:	8f e3       	ldi	r24, 0x3F	; 63
     9ea:	91 e0       	ldi	r25, 0x01	; 1
     9ec:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     9f0:	80 e0       	ldi	r24, 0x00	; 0
     9f2:	08 95       	ret

000009f4 <checkFreeParallelParkingPlace>:
     9f4:	80 91 28 04 	lds	r24, 0x0428
     9f8:	80 ff       	sbrs	r24, 0
     9fa:	04 c0       	rjmp	.+8      	; 0xa04 <checkFreeParallelParkingPlace+0x10>
     9fc:	8b e4       	ldi	r24, 0x4B	; 75
     9fe:	91 e0       	ldi	r25, 0x01	; 1
     a00:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     a04:	08 95       	ret

00000a06 <initEngines>:
     a06:	17 bc       	out	0x27, r1	; 39
     a08:	10 92 b3 00 	sts	0x00B3, r1
     a0c:	23 9a       	sbi	0x04, 3	; 4
     a0e:	84 b5       	in	r24, 0x24	; 36
     a10:	83 60       	ori	r24, 0x03	; 3
     a12:	84 bd       	out	0x24, r24	; 36
     a14:	84 b5       	in	r24, 0x24	; 36
     a16:	80 64       	ori	r24, 0x40	; 64
     a18:	84 bd       	out	0x24, r24	; 36
     a1a:	84 b5       	in	r24, 0x24	; 36
     a1c:	80 68       	ori	r24, 0x80	; 128
     a1e:	84 bd       	out	0x24, r24	; 36
     a20:	85 b5       	in	r24, 0x25	; 37
     a22:	81 60       	ori	r24, 0x01	; 1
     a24:	85 bd       	out	0x25, r24	; 37
     a26:	57 9a       	sbi	0x0a, 7	; 10
     a28:	e0 eb       	ldi	r30, 0xB0	; 176
     a2a:	f0 e0       	ldi	r31, 0x00	; 0
     a2c:	80 81       	ld	r24, Z
     a2e:	83 60       	ori	r24, 0x03	; 3
     a30:	80 83       	st	Z, r24
     a32:	80 81       	ld	r24, Z
     a34:	80 64       	ori	r24, 0x40	; 64
     a36:	80 83       	st	Z, r24
     a38:	80 81       	ld	r24, Z
     a3a:	80 68       	ori	r24, 0x80	; 128
     a3c:	80 83       	st	Z, r24
     a3e:	e1 eb       	ldi	r30, 0xB1	; 177
     a40:	f0 e0       	ldi	r31, 0x00	; 0
     a42:	80 81       	ld	r24, Z
     a44:	81 60       	ori	r24, 0x01	; 1
     a46:	80 83       	st	Z, r24
     a48:	25 9a       	sbi	0x04, 5	; 4
     a4a:	2d 9a       	sbi	0x05, 5	; 5
     a4c:	24 9a       	sbi	0x04, 4	; 4
     a4e:	2c 9a       	sbi	0x05, 4	; 5
     a50:	53 9a       	sbi	0x0a, 3	; 10
     a52:	55 9a       	sbi	0x0a, 5	; 10
     a54:	8b b1       	in	r24, 0x0b	; 11
     a56:	80 7f       	andi	r24, 0xF0	; 240
     a58:	8b b9       	out	0x0b, r24	; 11
     a5a:	8b b1       	in	r24, 0x0b	; 11
     a5c:	80 7c       	andi	r24, 0xC0	; 192
     a5e:	8b b9       	out	0x0b, r24	; 11
     a60:	52 9a       	sbi	0x0a, 2	; 10
     a62:	54 9a       	sbi	0x0a, 4	; 10
     a64:	8b b1       	in	r24, 0x0b	; 11
     a66:	88 7f       	andi	r24, 0xF8	; 248
     a68:	8b b9       	out	0x0b, r24	; 11
     a6a:	8b b1       	in	r24, 0x0b	; 11
     a6c:	80 7e       	andi	r24, 0xE0	; 224
     a6e:	8b b9       	out	0x0b, r24	; 11
     a70:	08 95       	ret

00000a72 <setEnginesSpeed>:
     a72:	40 95       	com	r20
     a74:	81 11       	cpse	r24, r1
     a76:	0a c0       	rjmp	.+20     	; 0xa8c <setEnginesSpeed+0x1a>
     a78:	66 23       	and	r22, r22
     a7a:	19 f0       	breq	.+6      	; 0xa82 <setEnginesSpeed+0x10>
     a7c:	5b 9a       	sbi	0x0b, 3	; 11
     a7e:	5d 98       	cbi	0x0b, 5	; 11
     a80:	02 c0       	rjmp	.+4      	; 0xa86 <setEnginesSpeed+0x14>
     a82:	5b 98       	cbi	0x0b, 3	; 11
     a84:	5d 9a       	sbi	0x0b, 5	; 11
     a86:	40 93 b3 00 	sts	0x00B3, r20
     a8a:	08 95       	ret
     a8c:	66 23       	and	r22, r22
     a8e:	19 f0       	breq	.+6      	; 0xa96 <setEnginesSpeed+0x24>
     a90:	5a 98       	cbi	0x0b, 2	; 11
     a92:	5c 9a       	sbi	0x0b, 4	; 11
     a94:	02 c0       	rjmp	.+4      	; 0xa9a <setEnginesSpeed+0x28>
     a96:	5a 9a       	sbi	0x0b, 2	; 11
     a98:	5c 98       	cbi	0x0b, 4	; 11
     a9a:	47 bd       	out	0x27, r20	; 39
     a9c:	08 95       	ret

00000a9e <goFront>:
     a9e:	cf 93       	push	r28
     aa0:	df 93       	push	r29
     aa2:	d8 2f       	mov	r29, r24
     aa4:	c6 2f       	mov	r28, r22
     aa6:	46 2f       	mov	r20, r22
     aa8:	60 e0       	ldi	r22, 0x00	; 0
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     ab0:	4c 2f       	mov	r20, r28
     ab2:	60 e0       	ldi	r22, 0x00	; 0
     ab4:	81 e0       	ldi	r24, 0x01	; 1
     ab6:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     aba:	ad 2f       	mov	r26, r29
     abc:	b0 e0       	ldi	r27, 0x00	; 0
     abe:	20 e4       	ldi	r18, 0x40	; 64
     ac0:	32 e4       	ldi	r19, 0x42	; 66
     ac2:	4f e0       	ldi	r20, 0x0F	; 15
     ac4:	50 e0       	ldi	r21, 0x00	; 0
     ac6:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__muluhisi3>
     aca:	ab 01       	movw	r20, r22
     acc:	bc 01       	movw	r22, r24
     ace:	20 e0       	ldi	r18, 0x00	; 0
     ad0:	8c ed       	ldi	r24, 0xDC	; 220
     ad2:	94 e0       	ldi	r25, 0x04	; 4
     ad4:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	a9 01       	movw	r20, r18
     ade:	60 e0       	ldi	r22, 0x00	; 0
     ae0:	70 e0       	ldi	r23, 0x00	; 0
     ae2:	cb 01       	movw	r24, r22
     ae4:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     ae8:	80 91 28 04 	lds	r24, 0x0428
     aec:	80 ff       	sbrs	r24, 0
     aee:	04 c0       	rjmp	.+8      	; 0xaf8 <goFront+0x5a>
     af0:	8e e7       	ldi	r24, 0x7E	; 126
     af2:	91 e0       	ldi	r25, 0x01	; 1
     af4:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     af8:	df 91       	pop	r29
     afa:	cf 91       	pop	r28
     afc:	08 95       	ret

00000afe <goBack>:
     afe:	cf 93       	push	r28
     b00:	df 93       	push	r29
     b02:	d8 2f       	mov	r29, r24
     b04:	c6 2f       	mov	r28, r22
     b06:	46 2f       	mov	r20, r22
     b08:	61 e0       	ldi	r22, 0x01	; 1
     b0a:	80 e0       	ldi	r24, 0x00	; 0
     b0c:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     b10:	4c 2f       	mov	r20, r28
     b12:	61 e0       	ldi	r22, 0x01	; 1
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     b1a:	ad 2f       	mov	r26, r29
     b1c:	b0 e0       	ldi	r27, 0x00	; 0
     b1e:	20 e4       	ldi	r18, 0x40	; 64
     b20:	32 e4       	ldi	r19, 0x42	; 66
     b22:	4f e0       	ldi	r20, 0x0F	; 15
     b24:	50 e0       	ldi	r21, 0x00	; 0
     b26:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__muluhisi3>
     b2a:	ab 01       	movw	r20, r22
     b2c:	bc 01       	movw	r22, r24
     b2e:	20 e0       	ldi	r18, 0x00	; 0
     b30:	8c ed       	ldi	r24, 0xDC	; 220
     b32:	94 e0       	ldi	r25, 0x04	; 4
     b34:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     b38:	20 e0       	ldi	r18, 0x00	; 0
     b3a:	30 e0       	ldi	r19, 0x00	; 0
     b3c:	a9 01       	movw	r20, r18
     b3e:	60 e0       	ldi	r22, 0x00	; 0
     b40:	70 e0       	ldi	r23, 0x00	; 0
     b42:	cb 01       	movw	r24, r22
     b44:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     b48:	16 9a       	sbi	0x02, 6	; 2
     b4a:	80 91 28 04 	lds	r24, 0x0428
     b4e:	80 ff       	sbrs	r24, 0
     b50:	04 c0       	rjmp	.+8      	; 0xb5a <goBack+0x5c>
     b52:	8e e8       	ldi	r24, 0x8E	; 142
     b54:	91 e0       	ldi	r25, 0x01	; 1
     b56:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     b5a:	df 91       	pop	r29
     b5c:	cf 91       	pop	r28
     b5e:	08 95       	ret

00000b60 <goFrontLeft>:
     b60:	cf 93       	push	r28
     b62:	c8 2f       	mov	r28, r24
     b64:	46 2f       	mov	r20, r22
     b66:	60 e0       	ldi	r22, 0x00	; 0
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     b6e:	4a e0       	ldi	r20, 0x0A	; 10
     b70:	60 e0       	ldi	r22, 0x00	; 0
     b72:	81 e0       	ldi	r24, 0x01	; 1
     b74:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     b78:	ac 2f       	mov	r26, r28
     b7a:	b0 e0       	ldi	r27, 0x00	; 0
     b7c:	20 e4       	ldi	r18, 0x40	; 64
     b7e:	32 e4       	ldi	r19, 0x42	; 66
     b80:	4f e0       	ldi	r20, 0x0F	; 15
     b82:	50 e0       	ldi	r21, 0x00	; 0
     b84:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__muluhisi3>
     b88:	ab 01       	movw	r20, r22
     b8a:	bc 01       	movw	r22, r24
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	8c ed       	ldi	r24, 0xDC	; 220
     b90:	94 e0       	ldi	r25, 0x04	; 4
     b92:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     b96:	20 e0       	ldi	r18, 0x00	; 0
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	a9 01       	movw	r20, r18
     b9c:	60 e2       	ldi	r22, 0x20	; 32
     b9e:	71 ea       	ldi	r23, 0xA1	; 161
     ba0:	87 e0       	ldi	r24, 0x07	; 7
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     ba8:	80 91 28 04 	lds	r24, 0x0428
     bac:	80 ff       	sbrs	r24, 0
     bae:	04 c0       	rjmp	.+8      	; 0xbb8 <goFrontLeft+0x58>
     bb0:	8d e9       	ldi	r24, 0x9D	; 157
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     bb8:	cf 91       	pop	r28
     bba:	08 95       	ret

00000bbc <goFrontRight>:
     bbc:	cf 93       	push	r28
     bbe:	df 93       	push	r29
     bc0:	c8 2f       	mov	r28, r24
     bc2:	d6 2f       	mov	r29, r22
     bc4:	4a e0       	ldi	r20, 0x0A	; 10
     bc6:	60 e0       	ldi	r22, 0x00	; 0
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     bce:	4d 2f       	mov	r20, r29
     bd0:	60 e0       	ldi	r22, 0x00	; 0
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     bd8:	ac 2f       	mov	r26, r28
     bda:	b0 e0       	ldi	r27, 0x00	; 0
     bdc:	20 e4       	ldi	r18, 0x40	; 64
     bde:	32 e4       	ldi	r19, 0x42	; 66
     be0:	4f e0       	ldi	r20, 0x0F	; 15
     be2:	50 e0       	ldi	r21, 0x00	; 0
     be4:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__muluhisi3>
     be8:	ab 01       	movw	r20, r22
     bea:	bc 01       	movw	r22, r24
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	8c ed       	ldi	r24, 0xDC	; 220
     bf0:	94 e0       	ldi	r25, 0x04	; 4
     bf2:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     bf6:	20 e2       	ldi	r18, 0x20	; 32
     bf8:	31 ea       	ldi	r19, 0xA1	; 161
     bfa:	47 e0       	ldi	r20, 0x07	; 7
     bfc:	50 e0       	ldi	r21, 0x00	; 0
     bfe:	60 e0       	ldi	r22, 0x00	; 0
     c00:	70 e0       	ldi	r23, 0x00	; 0
     c02:	cb 01       	movw	r24, r22
     c04:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     c08:	80 91 28 04 	lds	r24, 0x0428
     c0c:	80 ff       	sbrs	r24, 0
     c0e:	04 c0       	rjmp	.+8      	; 0xc18 <goFrontRight+0x5c>
     c10:	84 eb       	ldi	r24, 0xB4	; 180
     c12:	91 e0       	ldi	r25, 0x01	; 1
     c14:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     c18:	df 91       	pop	r29
     c1a:	cf 91       	pop	r28
     c1c:	08 95       	ret

00000c1e <goBackLeft>:
     c1e:	cf 93       	push	r28
     c20:	c8 2f       	mov	r28, r24
     c22:	46 2f       	mov	r20, r22
     c24:	61 e0       	ldi	r22, 0x01	; 1
     c26:	80 e0       	ldi	r24, 0x00	; 0
     c28:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     c2c:	4a e0       	ldi	r20, 0x0A	; 10
     c2e:	61 e0       	ldi	r22, 0x01	; 1
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     c36:	ac 2f       	mov	r26, r28
     c38:	b0 e0       	ldi	r27, 0x00	; 0
     c3a:	20 e4       	ldi	r18, 0x40	; 64
     c3c:	32 e4       	ldi	r19, 0x42	; 66
     c3e:	4f e0       	ldi	r20, 0x0F	; 15
     c40:	50 e0       	ldi	r21, 0x00	; 0
     c42:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__muluhisi3>
     c46:	ab 01       	movw	r20, r22
     c48:	bc 01       	movw	r22, r24
     c4a:	20 e0       	ldi	r18, 0x00	; 0
     c4c:	8c ed       	ldi	r24, 0xDC	; 220
     c4e:	94 e0       	ldi	r25, 0x04	; 4
     c50:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     c54:	20 e0       	ldi	r18, 0x00	; 0
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	a9 01       	movw	r20, r18
     c5a:	60 e2       	ldi	r22, 0x20	; 32
     c5c:	71 ea       	ldi	r23, 0xA1	; 161
     c5e:	87 e0       	ldi	r24, 0x07	; 7
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     c66:	16 9a       	sbi	0x02, 6	; 2
     c68:	80 91 28 04 	lds	r24, 0x0428
     c6c:	80 ff       	sbrs	r24, 0
     c6e:	04 c0       	rjmp	.+8      	; 0xc78 <goBackLeft+0x5a>
     c70:	8c ec       	ldi	r24, 0xCC	; 204
     c72:	91 e0       	ldi	r25, 0x01	; 1
     c74:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     c78:	cf 91       	pop	r28
     c7a:	08 95       	ret

00000c7c <goBackRight>:
     c7c:	cf 93       	push	r28
     c7e:	df 93       	push	r29
     c80:	c8 2f       	mov	r28, r24
     c82:	d6 2f       	mov	r29, r22
     c84:	4a e0       	ldi	r20, 0x0A	; 10
     c86:	61 e0       	ldi	r22, 0x01	; 1
     c88:	80 e0       	ldi	r24, 0x00	; 0
     c8a:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     c8e:	4d 2f       	mov	r20, r29
     c90:	61 e0       	ldi	r22, 0x01	; 1
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     c98:	ac 2f       	mov	r26, r28
     c9a:	b0 e0       	ldi	r27, 0x00	; 0
     c9c:	20 e4       	ldi	r18, 0x40	; 64
     c9e:	32 e4       	ldi	r19, 0x42	; 66
     ca0:	4f e0       	ldi	r20, 0x0F	; 15
     ca2:	50 e0       	ldi	r21, 0x00	; 0
     ca4:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__muluhisi3>
     ca8:	ab 01       	movw	r20, r22
     caa:	bc 01       	movw	r22, r24
     cac:	20 e0       	ldi	r18, 0x00	; 0
     cae:	8c ed       	ldi	r24, 0xDC	; 220
     cb0:	94 e0       	ldi	r25, 0x04	; 4
     cb2:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     cb6:	20 e2       	ldi	r18, 0x20	; 32
     cb8:	31 ea       	ldi	r19, 0xA1	; 161
     cba:	47 e0       	ldi	r20, 0x07	; 7
     cbc:	50 e0       	ldi	r21, 0x00	; 0
     cbe:	60 e0       	ldi	r22, 0x00	; 0
     cc0:	70 e0       	ldi	r23, 0x00	; 0
     cc2:	cb 01       	movw	r24, r22
     cc4:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     cc8:	16 9a       	sbi	0x02, 6	; 2
     cca:	80 91 28 04 	lds	r24, 0x0428
     cce:	80 ff       	sbrs	r24, 0
     cd0:	04 c0       	rjmp	.+8      	; 0xcda <goBackRight+0x5e>
     cd2:	82 ee       	ldi	r24, 0xE2	; 226
     cd4:	91 e0       	ldi	r25, 0x01	; 1
     cd6:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     cda:	df 91       	pop	r29
     cdc:	cf 91       	pop	r28
     cde:	08 95       	ret

00000ce0 <rotireSmechera>:
     ce0:	df 92       	push	r13
     ce2:	ef 92       	push	r14
     ce4:	ff 92       	push	r15
     ce6:	0f 93       	push	r16
     ce8:	1f 93       	push	r17
     cea:	cf 93       	push	r28
     cec:	df 93       	push	r29
     cee:	cd b7       	in	r28, 0x3d	; 61
     cf0:	de b7       	in	r29, 0x3e	; 62
     cf2:	c4 56       	subi	r28, 0x64	; 100
     cf4:	d1 09       	sbc	r29, r1
     cf6:	0f b6       	in	r0, 0x3f	; 63
     cf8:	f8 94       	cli
     cfa:	de bf       	out	0x3e, r29	; 62
     cfc:	0f be       	out	0x3f, r0	; 63
     cfe:	cd bf       	out	0x3d, r28	; 61
     d00:	d8 2e       	mov	r13, r24
     d02:	e6 2e       	mov	r14, r22
     d04:	f4 2e       	mov	r15, r20
     d06:	12 2f       	mov	r17, r18
     d08:	40 2f       	mov	r20, r16
     d0a:	62 2f       	mov	r22, r18
     d0c:	80 e0       	ldi	r24, 0x00	; 0
     d0e:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     d12:	4f 2d       	mov	r20, r15
     d14:	6e 2d       	mov	r22, r14
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     d1c:	ad 2d       	mov	r26, r13
     d1e:	b0 e0       	ldi	r27, 0x00	; 0
     d20:	20 e4       	ldi	r18, 0x40	; 64
     d22:	32 e4       	ldi	r19, 0x42	; 66
     d24:	4f e0       	ldi	r20, 0x0F	; 15
     d26:	50 e0       	ldi	r21, 0x00	; 0
     d28:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__muluhisi3>
     d2c:	ab 01       	movw	r20, r22
     d2e:	bc 01       	movw	r22, r24
     d30:	20 e0       	ldi	r18, 0x00	; 0
     d32:	8c ed       	ldi	r24, 0xDC	; 220
     d34:	94 e0       	ldi	r25, 0x04	; 4
     d36:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     d3a:	11 11       	cpse	r17, r1
     d3c:	0d c0       	rjmp	.+26     	; 0xd58 <rotireSmechera+0x78>
     d3e:	81 e0       	ldi	r24, 0x01	; 1
     d40:	e8 12       	cpse	r14, r24
     d42:	18 c0       	rjmp	.+48     	; 0xd74 <rotireSmechera+0x94>
     d44:	20 e0       	ldi	r18, 0x00	; 0
     d46:	30 e0       	ldi	r19, 0x00	; 0
     d48:	a9 01       	movw	r20, r18
     d4a:	60 e2       	ldi	r22, 0x20	; 32
     d4c:	71 ea       	ldi	r23, 0xA1	; 161
     d4e:	87 e0       	ldi	r24, 0x07	; 7
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     d56:	51 c0       	rjmp	.+162    	; 0xdfa <rotireSmechera+0x11a>
     d58:	11 30       	cpi	r17, 0x01	; 1
     d5a:	79 f5       	brne	.+94     	; 0xdba <rotireSmechera+0xda>
     d5c:	e1 10       	cpse	r14, r1
     d5e:	2d c0       	rjmp	.+90     	; 0xdba <rotireSmechera+0xda>
     d60:	20 e2       	ldi	r18, 0x20	; 32
     d62:	31 ea       	ldi	r19, 0xA1	; 161
     d64:	47 e0       	ldi	r20, 0x07	; 7
     d66:	50 e0       	ldi	r21, 0x00	; 0
     d68:	60 e0       	ldi	r22, 0x00	; 0
     d6a:	70 e0       	ldi	r23, 0x00	; 0
     d6c:	cb 01       	movw	r24, r22
     d6e:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     d72:	43 c0       	rjmp	.+134    	; 0xdfa <rotireSmechera+0x11a>
     d74:	e1 10       	cpse	r14, r1
     d76:	21 c0       	rjmp	.+66     	; 0xdba <rotireSmechera+0xda>
     d78:	0f 15       	cp	r16, r15
     d7a:	50 f4       	brcc	.+20     	; 0xd90 <rotireSmechera+0xb0>
     d7c:	20 e2       	ldi	r18, 0x20	; 32
     d7e:	31 ea       	ldi	r19, 0xA1	; 161
     d80:	47 e0       	ldi	r20, 0x07	; 7
     d82:	50 e0       	ldi	r21, 0x00	; 0
     d84:	60 e0       	ldi	r22, 0x00	; 0
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	cb 01       	movw	r24, r22
     d8a:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     d8e:	35 c0       	rjmp	.+106    	; 0xdfa <rotireSmechera+0x11a>
     d90:	f0 16       	cp	r15, r16
     d92:	50 f4       	brcc	.+20     	; 0xda8 <rotireSmechera+0xc8>
     d94:	20 e0       	ldi	r18, 0x00	; 0
     d96:	30 e0       	ldi	r19, 0x00	; 0
     d98:	a9 01       	movw	r20, r18
     d9a:	60 e2       	ldi	r22, 0x20	; 32
     d9c:	71 ea       	ldi	r23, 0xA1	; 161
     d9e:	87 e0       	ldi	r24, 0x07	; 7
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     da6:	29 c0       	rjmp	.+82     	; 0xdfa <rotireSmechera+0x11a>
     da8:	20 e0       	ldi	r18, 0x00	; 0
     daa:	30 e0       	ldi	r19, 0x00	; 0
     dac:	a9 01       	movw	r20, r18
     dae:	60 e0       	ldi	r22, 0x00	; 0
     db0:	70 e0       	ldi	r23, 0x00	; 0
     db2:	cb 01       	movw	r24, r22
     db4:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     db8:	20 c0       	rjmp	.+64     	; 0xdfa <rotireSmechera+0x11a>
     dba:	f0 16       	cp	r15, r16
     dbc:	50 f4       	brcc	.+20     	; 0xdd2 <rotireSmechera+0xf2>
     dbe:	20 e0       	ldi	r18, 0x00	; 0
     dc0:	30 e0       	ldi	r19, 0x00	; 0
     dc2:	a9 01       	movw	r20, r18
     dc4:	60 e2       	ldi	r22, 0x20	; 32
     dc6:	71 ea       	ldi	r23, 0xA1	; 161
     dc8:	87 e0       	ldi	r24, 0x07	; 7
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     dd0:	14 c0       	rjmp	.+40     	; 0xdfa <rotireSmechera+0x11a>
     dd2:	0f 15       	cp	r16, r15
     dd4:	50 f4       	brcc	.+20     	; 0xdea <rotireSmechera+0x10a>
     dd6:	20 e2       	ldi	r18, 0x20	; 32
     dd8:	31 ea       	ldi	r19, 0xA1	; 161
     dda:	47 e0       	ldi	r20, 0x07	; 7
     ddc:	50 e0       	ldi	r21, 0x00	; 0
     dde:	60 e0       	ldi	r22, 0x00	; 0
     de0:	70 e0       	ldi	r23, 0x00	; 0
     de2:	cb 01       	movw	r24, r22
     de4:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     de8:	08 c0       	rjmp	.+16     	; 0xdfa <rotireSmechera+0x11a>
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	a9 01       	movw	r20, r18
     df0:	60 e0       	ldi	r22, 0x00	; 0
     df2:	70 e0       	ldi	r23, 0x00	; 0
     df4:	cb 01       	movw	r24, r22
     df6:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     dfa:	80 91 28 04 	lds	r24, 0x0428
     dfe:	80 ff       	sbrs	r24, 0
     e00:	1b c0       	rjmp	.+54     	; 0xe38 <rotireSmechera+0x158>
     e02:	1f 92       	push	r1
     e04:	0f 93       	push	r16
     e06:	1f 92       	push	r1
     e08:	1f 93       	push	r17
     e0a:	1f 92       	push	r1
     e0c:	ff 92       	push	r15
     e0e:	1f 92       	push	r1
     e10:	ef 92       	push	r14
     e12:	89 ef       	ldi	r24, 0xF9	; 249
     e14:	91 e0       	ldi	r25, 0x01	; 1
     e16:	9f 93       	push	r25
     e18:	8f 93       	push	r24
     e1a:	8e 01       	movw	r16, r28
     e1c:	0f 5f       	subi	r16, 0xFF	; 255
     e1e:	1f 4f       	sbci	r17, 0xFF	; 255
     e20:	1f 93       	push	r17
     e22:	0f 93       	push	r16
     e24:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
     e28:	c8 01       	movw	r24, r16
     e2a:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     e2e:	0f b6       	in	r0, 0x3f	; 63
     e30:	f8 94       	cli
     e32:	de bf       	out	0x3e, r29	; 62
     e34:	0f be       	out	0x3f, r0	; 63
     e36:	cd bf       	out	0x3d, r28	; 61
     e38:	cc 59       	subi	r28, 0x9C	; 156
     e3a:	df 4f       	sbci	r29, 0xFF	; 255
     e3c:	0f b6       	in	r0, 0x3f	; 63
     e3e:	f8 94       	cli
     e40:	de bf       	out	0x3e, r29	; 62
     e42:	0f be       	out	0x3f, r0	; 63
     e44:	cd bf       	out	0x3d, r28	; 61
     e46:	df 91       	pop	r29
     e48:	cf 91       	pop	r28
     e4a:	1f 91       	pop	r17
     e4c:	0f 91       	pop	r16
     e4e:	ff 90       	pop	r15
     e50:	ef 90       	pop	r14
     e52:	df 90       	pop	r13
     e54:	08 95       	ret

00000e56 <rotirePeLoc>:
     e56:	cf 93       	push	r28
     e58:	df 93       	push	r29
     e5a:	d8 2f       	mov	r29, r24
     e5c:	c6 2f       	mov	r28, r22
     e5e:	41 11       	cpse	r20, r1
     e60:	1c c0       	rjmp	.+56     	; 0xe9a <rotirePeLoc+0x44>
     e62:	46 2f       	mov	r20, r22
     e64:	61 e0       	ldi	r22, 0x01	; 1
     e66:	81 e0       	ldi	r24, 0x01	; 1
     e68:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     e6c:	4c 2f       	mov	r20, r28
     e6e:	60 e0       	ldi	r22, 0x00	; 0
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     e76:	80 91 28 04 	lds	r24, 0x0428
     e7a:	80 ff       	sbrs	r24, 0
     e7c:	04 c0       	rjmp	.+8      	; 0xe86 <rotirePeLoc+0x30>
     e7e:	87 e1       	ldi	r24, 0x17	; 23
     e80:	92 e0       	ldi	r25, 0x02	; 2
     e82:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     e86:	20 e0       	ldi	r18, 0x00	; 0
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	a9 01       	movw	r20, r18
     e8c:	60 e2       	ldi	r22, 0x20	; 32
     e8e:	71 ea       	ldi	r23, 0xA1	; 161
     e90:	87 e0       	ldi	r24, 0x07	; 7
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     e98:	1b c0       	rjmp	.+54     	; 0xed0 <rotirePeLoc+0x7a>
     e9a:	46 2f       	mov	r20, r22
     e9c:	60 e0       	ldi	r22, 0x00	; 0
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     ea4:	4c 2f       	mov	r20, r28
     ea6:	61 e0       	ldi	r22, 0x01	; 1
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	0e 94 39 05 	call	0xa72	; 0xa72 <setEnginesSpeed>
     eae:	80 91 28 04 	lds	r24, 0x0428
     eb2:	80 ff       	sbrs	r24, 0
     eb4:	04 c0       	rjmp	.+8      	; 0xebe <rotirePeLoc+0x68>
     eb6:	8e e2       	ldi	r24, 0x2E	; 46
     eb8:	92 e0       	ldi	r25, 0x02	; 2
     eba:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
     ebe:	20 e2       	ldi	r18, 0x20	; 32
     ec0:	31 ea       	ldi	r19, 0xA1	; 161
     ec2:	47 e0       	ldi	r20, 0x07	; 7
     ec4:	50 e0       	ldi	r21, 0x00	; 0
     ec6:	60 e0       	ldi	r22, 0x00	; 0
     ec8:	70 e0       	ldi	r23, 0x00	; 0
     eca:	cb 01       	movw	r24, r22
     ecc:	0e 94 b7 07 	call	0xf6e	; 0xf6e <doBlinkLeds>
     ed0:	ad 2f       	mov	r26, r29
     ed2:	b0 e0       	ldi	r27, 0x00	; 0
     ed4:	20 e4       	ldi	r18, 0x40	; 64
     ed6:	32 e4       	ldi	r19, 0x42	; 66
     ed8:	4f e0       	ldi	r20, 0x0F	; 15
     eda:	50 e0       	ldi	r21, 0x00	; 0
     edc:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__muluhisi3>
     ee0:	ab 01       	movw	r20, r22
     ee2:	bc 01       	movw	r22, r24
     ee4:	20 e0       	ldi	r18, 0x00	; 0
     ee6:	8c ed       	ldi	r24, 0xDC	; 220
     ee8:	94 e0       	ldi	r25, 0x04	; 4
     eea:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     eee:	df 91       	pop	r29
     ef0:	cf 91       	pop	r28
     ef2:	08 95       	ret

00000ef4 <blinkLeftLeds>:
     ef4:	92 b1       	in	r25, 0x02	; 2
     ef6:	80 e2       	ldi	r24, 0x20	; 32
     ef8:	89 27       	eor	r24, r25
     efa:	82 b9       	out	0x02, r24	; 2
     efc:	80 e0       	ldi	r24, 0x00	; 0
     efe:	08 95       	ret

00000f00 <blinkRightLeds>:
     f00:	92 b1       	in	r25, 0x02	; 2
     f02:	80 e1       	ldi	r24, 0x10	; 16
     f04:	89 27       	eor	r24, r25
     f06:	82 b9       	out	0x02, r24	; 2
     f08:	80 e0       	ldi	r24, 0x00	; 0
     f0a:	08 95       	ret

00000f0c <blinkNeons>:
     f0c:	80 91 27 04 	lds	r24, 0x0427
     f10:	25 e2       	ldi	r18, 0x25	; 37
     f12:	82 9f       	mul	r24, r18
     f14:	21 2d       	mov	r18, r1
     f16:	11 24       	eor	r1, r1
     f18:	98 2f       	mov	r25, r24
     f1a:	92 1b       	sub	r25, r18
     f1c:	96 95       	lsr	r25
     f1e:	92 0f       	add	r25, r18
     f20:	96 95       	lsr	r25
     f22:	96 95       	lsr	r25
     f24:	29 2f       	mov	r18, r25
     f26:	22 0f       	add	r18, r18
     f28:	22 0f       	add	r18, r18
     f2a:	22 0f       	add	r18, r18
     f2c:	29 1b       	sub	r18, r25
     f2e:	82 1b       	sub	r24, r18
     f30:	8d 7f       	andi	r24, 0xFD	; 253
     f32:	11 f4       	brne	.+4      	; 0xf38 <blinkNeons+0x2c>
     f34:	17 98       	cbi	0x02, 7	; 2
     f36:	03 c0       	rjmp	.+6      	; 0xf3e <blinkNeons+0x32>
     f38:	81 30       	cpi	r24, 0x01	; 1
     f3a:	09 f4       	brne	.+2      	; 0xf3e <blinkNeons+0x32>
     f3c:	17 9a       	sbi	0x02, 7	; 2
     f3e:	80 91 27 04 	lds	r24, 0x0427
     f42:	8f 5f       	subi	r24, 0xFF	; 255
     f44:	80 93 27 04 	sts	0x0427, r24
     f48:	80 e0       	ldi	r24, 0x00	; 0
     f4a:	08 95       	ret

00000f4c <initLights>:
     f4c:	0c 9a       	sbi	0x01, 4	; 1
     f4e:	0d 9a       	sbi	0x01, 5	; 1
     f50:	14 9a       	sbi	0x02, 4	; 2
     f52:	15 9a       	sbi	0x02, 5	; 2
     f54:	0e 9a       	sbi	0x01, 6	; 1
     f56:	0f 9a       	sbi	0x01, 7	; 1
     f58:	17 9a       	sbi	0x02, 7	; 2
     f5a:	21 e0       	ldi	r18, 0x01	; 1
     f5c:	40 e9       	ldi	r20, 0x90	; 144
     f5e:	50 ed       	ldi	r21, 0xD0	; 208
     f60:	63 e0       	ldi	r22, 0x03	; 3
     f62:	70 e0       	ldi	r23, 0x00	; 0
     f64:	86 e8       	ldi	r24, 0x86	; 134
     f66:	97 e0       	ldi	r25, 0x07	; 7
     f68:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     f6c:	08 95       	ret

00000f6e <doBlinkLeds>:
     f6e:	cf 92       	push	r12
     f70:	df 92       	push	r13
     f72:	ef 92       	push	r14
     f74:	ff 92       	push	r15
     f76:	69 01       	movw	r12, r18
     f78:	7a 01       	movw	r14, r20
     f7a:	61 15       	cp	r22, r1
     f7c:	71 05       	cpc	r23, r1
     f7e:	81 05       	cpc	r24, r1
     f80:	91 05       	cpc	r25, r1
     f82:	31 f4       	brne	.+12     	; 0xf90 <doBlinkLeds+0x22>
     f84:	8a e7       	ldi	r24, 0x7A	; 122
     f86:	97 e0       	ldi	r25, 0x07	; 7
     f88:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
     f8c:	14 98       	cbi	0x02, 4	; 2
     f8e:	07 c0       	rjmp	.+14     	; 0xf9e <doBlinkLeds+0x30>
     f90:	21 e0       	ldi	r18, 0x01	; 1
     f92:	ab 01       	movw	r20, r22
     f94:	bc 01       	movw	r22, r24
     f96:	8a e7       	ldi	r24, 0x7A	; 122
     f98:	97 e0       	ldi	r25, 0x07	; 7
     f9a:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     f9e:	c1 14       	cp	r12, r1
     fa0:	d1 04       	cpc	r13, r1
     fa2:	e1 04       	cpc	r14, r1
     fa4:	f1 04       	cpc	r15, r1
     fa6:	31 f4       	brne	.+12     	; 0xfb4 <doBlinkLeds+0x46>
     fa8:	80 e8       	ldi	r24, 0x80	; 128
     faa:	97 e0       	ldi	r25, 0x07	; 7
     fac:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
     fb0:	15 98       	cbi	0x02, 5	; 2
     fb2:	07 c0       	rjmp	.+14     	; 0xfc2 <doBlinkLeds+0x54>
     fb4:	21 e0       	ldi	r18, 0x01	; 1
     fb6:	b7 01       	movw	r22, r14
     fb8:	a6 01       	movw	r20, r12
     fba:	80 e8       	ldi	r24, 0x80	; 128
     fbc:	97 e0       	ldi	r25, 0x07	; 7
     fbe:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
     fc2:	ff 90       	pop	r15
     fc4:	ef 90       	pop	r14
     fc6:	df 90       	pop	r13
     fc8:	cf 90       	pop	r12
     fca:	08 95       	ret

00000fcc <turnBlinkingOff>:
     fcc:	8a e7       	ldi	r24, 0x7A	; 122
     fce:	97 e0       	ldi	r25, 0x07	; 7
     fd0:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
     fd4:	80 e8       	ldi	r24, 0x80	; 128
     fd6:	97 e0       	ldi	r25, 0x07	; 7
     fd8:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
     fdc:	15 98       	cbi	0x02, 5	; 2
     fde:	14 98       	cbi	0x02, 4	; 2
     fe0:	08 95       	ret

00000fe2 <sendSensor>:
     fe2:	ef 92       	push	r14
     fe4:	ff 92       	push	r15
     fe6:	0f 93       	push	r16
     fe8:	1f 93       	push	r17
     fea:	cf 93       	push	r28
     fec:	df 93       	push	r29
     fee:	c0 e0       	ldi	r28, 0x00	; 0
     ff0:	d0 e0       	ldi	r29, 0x00	; 0
     ff2:	0f 2e       	mov	r0, r31
     ff4:	f4 e4       	ldi	r31, 0x44	; 68
     ff6:	ef 2e       	mov	r14, r31
     ff8:	f2 e0       	ldi	r31, 0x02	; 2
     ffa:	ff 2e       	mov	r15, r31
     ffc:	f0 2d       	mov	r31, r0
     ffe:	02 e6       	ldi	r16, 0x62	; 98
    1000:	14 e0       	ldi	r17, 0x04	; 4
    1002:	80 91 95 04 	lds	r24, 0x0495
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	0c 2e       	mov	r0, r28
    100a:	02 c0       	rjmp	.+4      	; 0x1010 <sendSensor+0x2e>
    100c:	95 95       	asr	r25
    100e:	87 95       	ror	r24
    1010:	0a 94       	dec	r0
    1012:	e2 f7       	brpl	.-8      	; 0x100c <sendSensor+0x2a>
    1014:	80 ff       	sbrs	r24, 0
    1016:	22 c0       	rjmp	.+68     	; 0x105c <sendSensor+0x7a>
    1018:	fe 01       	movw	r30, r28
    101a:	ee 0f       	add	r30, r30
    101c:	ff 1f       	adc	r31, r31
    101e:	ee 0f       	add	r30, r30
    1020:	ff 1f       	adc	r31, r31
    1022:	ee 5a       	subi	r30, 0xAE	; 174
    1024:	fb 4f       	sbci	r31, 0xFB	; 251
    1026:	40 81       	ld	r20, Z
    1028:	51 81       	ldd	r21, Z+1	; 0x01
    102a:	62 81       	ldd	r22, Z+2	; 0x02
    102c:	73 81       	ldd	r23, Z+3	; 0x03
    102e:	7f 93       	push	r23
    1030:	6f 93       	push	r22
    1032:	5f 93       	push	r21
    1034:	4f 93       	push	r20
    1036:	df 93       	push	r29
    1038:	cf 93       	push	r28
    103a:	ff 92       	push	r15
    103c:	ef 92       	push	r14
    103e:	1f 93       	push	r17
    1040:	0f 93       	push	r16
    1042:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
    1046:	c8 01       	movw	r24, r16
    1048:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    104c:	8d b7       	in	r24, 0x3d	; 61
    104e:	9e b7       	in	r25, 0x3e	; 62
    1050:	0a 96       	adiw	r24, 0x0a	; 10
    1052:	0f b6       	in	r0, 0x3f	; 63
    1054:	f8 94       	cli
    1056:	9e bf       	out	0x3e, r25	; 62
    1058:	0f be       	out	0x3f, r0	; 63
    105a:	8d bf       	out	0x3d, r24	; 61
    105c:	21 96       	adiw	r28, 0x01	; 1
    105e:	c4 30       	cpi	r28, 0x04	; 4
    1060:	d1 05       	cpc	r29, r1
    1062:	79 f6       	brne	.-98     	; 0x1002 <sendSensor+0x20>
    1064:	80 e0       	ldi	r24, 0x00	; 0
    1066:	df 91       	pop	r29
    1068:	cf 91       	pop	r28
    106a:	1f 91       	pop	r17
    106c:	0f 91       	pop	r16
    106e:	ff 90       	pop	r15
    1070:	ef 90       	pop	r14
    1072:	08 95       	ret

00001074 <getValueOfSensor>:
    1074:	24 e0       	ldi	r18, 0x04	; 4
    1076:	82 9f       	mul	r24, r18
    1078:	c0 01       	movw	r24, r0
    107a:	11 24       	eor	r1, r1
    107c:	fc 01       	movw	r30, r24
    107e:	ee 5a       	subi	r30, 0xAE	; 174
    1080:	fb 4f       	sbci	r31, 0xFB	; 251
    1082:	80 81       	ld	r24, Z
    1084:	91 81       	ldd	r25, Z+1	; 0x01
    1086:	a2 81       	ldd	r26, Z+2	; 0x02
    1088:	b3 81       	ldd	r27, Z+3	; 0x03
    108a:	08 95       	ret

0000108c <toggleSensorSend>:
    108c:	cf 93       	push	r28
    108e:	df 93       	push	r29
    1090:	40 91 95 04 	lds	r20, 0x0495
    1094:	21 e0       	ldi	r18, 0x01	; 1
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	b9 01       	movw	r22, r18
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <toggleSensorSend+0x14>
    109c:	66 0f       	add	r22, r22
    109e:	77 1f       	adc	r23, r23
    10a0:	8a 95       	dec	r24
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <toggleSensorSend+0x10>
    10a4:	cb 01       	movw	r24, r22
    10a6:	84 27       	eor	r24, r20
    10a8:	80 93 95 04 	sts	0x0495, r24
    10ac:	30 91 95 04 	lds	r19, 0x0495
    10b0:	20 91 95 04 	lds	r18, 0x0495
    10b4:	90 91 95 04 	lds	r25, 0x0495
    10b8:	80 91 95 04 	lds	r24, 0x0495
    10bc:	33 fb       	bst	r19, 3
    10be:	33 27       	eor	r19, r19
    10c0:	30 f9       	bld	r19, 0
    10c2:	1f 92       	push	r1
    10c4:	3f 93       	push	r19
    10c6:	22 fb       	bst	r18, 2
    10c8:	22 27       	eor	r18, r18
    10ca:	20 f9       	bld	r18, 0
    10cc:	1f 92       	push	r1
    10ce:	2f 93       	push	r18
    10d0:	96 95       	lsr	r25
    10d2:	91 70       	andi	r25, 0x01	; 1
    10d4:	1f 92       	push	r1
    10d6:	9f 93       	push	r25
    10d8:	81 70       	andi	r24, 0x01	; 1
    10da:	1f 92       	push	r1
    10dc:	8f 93       	push	r24
    10de:	85 e5       	ldi	r24, 0x55	; 85
    10e0:	92 e0       	ldi	r25, 0x02	; 2
    10e2:	9f 93       	push	r25
    10e4:	8f 93       	push	r24
    10e6:	c2 e6       	ldi	r28, 0x62	; 98
    10e8:	d4 e0       	ldi	r29, 0x04	; 4
    10ea:	df 93       	push	r29
    10ec:	cf 93       	push	r28
    10ee:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
    10f2:	ce 01       	movw	r24, r28
    10f4:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    10f8:	30 91 94 04 	lds	r19, 0x0494
    10fc:	20 91 94 04 	lds	r18, 0x0494
    1100:	90 91 94 04 	lds	r25, 0x0494
    1104:	80 91 94 04 	lds	r24, 0x0494
    1108:	33 fb       	bst	r19, 3
    110a:	33 27       	eor	r19, r19
    110c:	30 f9       	bld	r19, 0
    110e:	1f 92       	push	r1
    1110:	3f 93       	push	r19
    1112:	22 fb       	bst	r18, 2
    1114:	22 27       	eor	r18, r18
    1116:	20 f9       	bld	r18, 0
    1118:	1f 92       	push	r1
    111a:	2f 93       	push	r18
    111c:	96 95       	lsr	r25
    111e:	91 70       	andi	r25, 0x01	; 1
    1120:	1f 92       	push	r1
    1122:	9f 93       	push	r25
    1124:	81 70       	andi	r24, 0x01	; 1
    1126:	1f 92       	push	r1
    1128:	8f 93       	push	r24
    112a:	80 e7       	ldi	r24, 0x70	; 112
    112c:	92 e0       	ldi	r25, 0x02	; 2
    112e:	9f 93       	push	r25
    1130:	8f 93       	push	r24
    1132:	df 93       	push	r29
    1134:	cf 93       	push	r28
    1136:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
    113a:	ce 01       	movw	r24, r28
    113c:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    1140:	81 ef       	ldi	r24, 0xF1	; 241
    1142:	97 e0       	ldi	r25, 0x07	; 7
    1144:	0e 94 20 11 	call	0x2240	; 0x2240 <existsEntryInTimerQueue>
    1148:	90 91 95 04 	lds	r25, 0x0495
    114c:	6d b7       	in	r22, 0x3d	; 61
    114e:	7e b7       	in	r23, 0x3e	; 62
    1150:	68 5e       	subi	r22, 0xE8	; 232
    1152:	7f 4f       	sbci	r23, 0xFF	; 255
    1154:	0f b6       	in	r0, 0x3f	; 63
    1156:	f8 94       	cli
    1158:	7e bf       	out	0x3e, r23	; 62
    115a:	0f be       	out	0x3f, r0	; 63
    115c:	6d bf       	out	0x3d, r22	; 61
    115e:	99 23       	and	r25, r25
    1160:	61 f0       	breq	.+24     	; 0x117a <__stack+0x7b>
    1162:	81 11       	cpse	r24, r1
    1164:	15 c0       	rjmp	.+42     	; 0x1190 <__stack+0x91>
    1166:	21 e0       	ldi	r18, 0x01	; 1
    1168:	40 e4       	ldi	r20, 0x40	; 64
    116a:	52 e4       	ldi	r21, 0x42	; 66
    116c:	6f e0       	ldi	r22, 0x0F	; 15
    116e:	70 e0       	ldi	r23, 0x00	; 0
    1170:	81 ef       	ldi	r24, 0xF1	; 241
    1172:	97 e0       	ldi	r25, 0x07	; 7
    1174:	0e 94 9d 10 	call	0x213a	; 0x213a <addEntryToTimerQueue>
    1178:	0f c0       	rjmp	.+30     	; 0x1198 <__stack+0x99>
    117a:	90 91 95 04 	lds	r25, 0x0495
    117e:	91 11       	cpse	r25, r1
    1180:	0b c0       	rjmp	.+22     	; 0x1198 <__stack+0x99>
    1182:	88 23       	and	r24, r24
    1184:	49 f0       	breq	.+18     	; 0x1198 <__stack+0x99>
    1186:	81 ef       	ldi	r24, 0xF1	; 241
    1188:	97 e0       	ldi	r25, 0x07	; 7
    118a:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
    118e:	04 c0       	rjmp	.+8      	; 0x1198 <__stack+0x99>
    1190:	80 91 95 04 	lds	r24, 0x0495
    1194:	88 23       	and	r24, r24
    1196:	b9 f3       	breq	.-18     	; 0x1186 <__stack+0x87>
    1198:	df 91       	pop	r29
    119a:	cf 91       	pop	r28
    119c:	08 95       	ret

0000119e <setSensorsRead>:
    119e:	88 23       	and	r24, r24
    11a0:	69 f0       	breq	.+26     	; 0x11bc <setSensorsRead+0x1e>
    11a2:	8f e0       	ldi	r24, 0x0F	; 15
    11a4:	80 93 94 04 	sts	0x0494, r24
    11a8:	21 e0       	ldi	r18, 0x01	; 1
    11aa:	40 e5       	ldi	r20, 0x50	; 80
    11ac:	53 ec       	ldi	r21, 0xC3	; 195
    11ae:	60 e0       	ldi	r22, 0x00	; 0
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	88 e7       	ldi	r24, 0x78	; 120
    11b4:	9a e0       	ldi	r25, 0x0A	; 10
    11b6:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
    11ba:	08 95       	ret
    11bc:	88 e7       	ldi	r24, 0x78	; 120
    11be:	9a e0       	ldi	r25, 0x0A	; 10
    11c0:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
    11c4:	08 95       	ret

000011c6 <setSensorsSend>:
    11c6:	88 23       	and	r24, r24
    11c8:	51 f0       	breq	.+20     	; 0x11de <setSensorsSend+0x18>
    11ca:	21 e0       	ldi	r18, 0x01	; 1
    11cc:	40 eb       	ldi	r20, 0xB0	; 176
    11ce:	51 e7       	ldi	r21, 0x71	; 113
    11d0:	6b e0       	ldi	r22, 0x0B	; 11
    11d2:	70 e0       	ldi	r23, 0x00	; 0
    11d4:	8a ef       	ldi	r24, 0xFA	; 250
    11d6:	98 e0       	ldi	r25, 0x08	; 8
    11d8:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
    11dc:	08 95       	ret
    11de:	8a ef       	ldi	r24, 0xFA	; 250
    11e0:	98 e0       	ldi	r25, 0x08	; 8
    11e2:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
    11e6:	08 95       	ret

000011e8 <usprintf>:
    11e8:	fc 01       	movw	r30, r24
    11ea:	70 83       	st	Z, r23
    11ec:	61 83       	std	Z+1, r22	; 0x01
    11ee:	52 83       	std	Z+2, r21	; 0x02
    11f0:	43 83       	std	Z+3, r20	; 0x03
    11f2:	08 95       	ret

000011f4 <sendSensors>:
    11f4:	cf 93       	push	r28
    11f6:	df 93       	push	r29
    11f8:	cd b7       	in	r28, 0x3d	; 61
    11fa:	de b7       	in	r29, 0x3e	; 62
    11fc:	64 97       	sbiw	r28, 0x14	; 20
    11fe:	0f b6       	in	r0, 0x3f	; 63
    1200:	f8 94       	cli
    1202:	de bf       	out	0x3e, r29	; 62
    1204:	0f be       	out	0x3f, r0	; 63
    1206:	cd bf       	out	0x3d, r28	; 61
    1208:	8a ea       	ldi	r24, 0xAA	; 170
    120a:	89 83       	std	Y+1, r24	; 0x01
    120c:	83 e1       	ldi	r24, 0x13	; 19
    120e:	8a 83       	std	Y+2, r24	; 0x02
    1210:	80 e1       	ldi	r24, 0x10	; 16
    1212:	8b 83       	std	Y+3, r24	; 0x03
    1214:	40 91 52 04 	lds	r20, 0x0452
    1218:	50 91 53 04 	lds	r21, 0x0453
    121c:	60 91 54 04 	lds	r22, 0x0454
    1220:	70 91 55 04 	lds	r23, 0x0455
    1224:	ce 01       	movw	r24, r28
    1226:	04 96       	adiw	r24, 0x04	; 4
    1228:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <usprintf>
    122c:	40 91 56 04 	lds	r20, 0x0456
    1230:	50 91 57 04 	lds	r21, 0x0457
    1234:	60 91 58 04 	lds	r22, 0x0458
    1238:	70 91 59 04 	lds	r23, 0x0459
    123c:	ce 01       	movw	r24, r28
    123e:	08 96       	adiw	r24, 0x08	; 8
    1240:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <usprintf>
    1244:	40 91 5a 04 	lds	r20, 0x045A
    1248:	50 91 5b 04 	lds	r21, 0x045B
    124c:	60 91 5c 04 	lds	r22, 0x045C
    1250:	70 91 5d 04 	lds	r23, 0x045D
    1254:	ce 01       	movw	r24, r28
    1256:	0c 96       	adiw	r24, 0x0c	; 12
    1258:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <usprintf>
    125c:	40 91 5e 04 	lds	r20, 0x045E
    1260:	50 91 5f 04 	lds	r21, 0x045F
    1264:	60 91 60 04 	lds	r22, 0x0460
    1268:	70 91 61 04 	lds	r23, 0x0461
    126c:	ce 01       	movw	r24, r28
    126e:	40 96       	adiw	r24, 0x10	; 16
    1270:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <usprintf>
    1274:	85 e5       	ldi	r24, 0x55	; 85
    1276:	8c 8b       	std	Y+20, r24	; 0x14
    1278:	64 e1       	ldi	r22, 0x14	; 20
    127a:	ce 01       	movw	r24, r28
    127c:	01 96       	adiw	r24, 0x01	; 1
    127e:	0e 94 a0 02 	call	0x540	; 0x540 <BTTransmitMsgU>
    1282:	80 e0       	ldi	r24, 0x00	; 0
    1284:	64 96       	adiw	r28, 0x14	; 20
    1286:	0f b6       	in	r0, 0x3f	; 63
    1288:	f8 94       	cli
    128a:	de bf       	out	0x3e, r29	; 62
    128c:	0f be       	out	0x3f, r0	; 63
    128e:	cd bf       	out	0x3d, r28	; 61
    1290:	df 91       	pop	r29
    1292:	cf 91       	pop	r28
    1294:	08 95       	ret

00001296 <initSensors>:
    1296:	aa e7       	ldi	r26, 0x7A	; 122
    1298:	b0 e0       	ldi	r27, 0x00	; 0
    129a:	8c 91       	ld	r24, X
    129c:	87 60       	ori	r24, 0x07	; 7
    129e:	8c 93       	st	X, r24
    12a0:	ec e7       	ldi	r30, 0x7C	; 124
    12a2:	f0 e0       	ldi	r31, 0x00	; 0
    12a4:	80 81       	ld	r24, Z
    12a6:	80 64       	ori	r24, 0x40	; 64
    12a8:	80 83       	st	Z, r24
    12aa:	80 81       	ld	r24, Z
    12ac:	8f 77       	andi	r24, 0x7F	; 127
    12ae:	80 83       	st	Z, r24
    12b0:	80 81       	ld	r24, Z
    12b2:	80 62       	ori	r24, 0x20	; 32
    12b4:	80 83       	st	Z, r24
    12b6:	8c 91       	ld	r24, X
    12b8:	80 68       	ori	r24, 0x80	; 128
    12ba:	8c 93       	st	X, r24
    12bc:	10 92 95 04 	sts	0x0495, r1
    12c0:	10 92 94 04 	sts	0x0494, r1
    12c4:	08 95       	ret

000012c6 <startADCConversionForSensor>:
    12c6:	ec e7       	ldi	r30, 0x7C	; 124
    12c8:	f0 e0       	ldi	r31, 0x00	; 0
    12ca:	90 81       	ld	r25, Z
    12cc:	90 7e       	andi	r25, 0xE0	; 224
    12ce:	90 83       	st	Z, r25
    12d0:	90 81       	ld	r25, Z
    12d2:	89 2b       	or	r24, r25
    12d4:	80 83       	st	Z, r24
    12d6:	ea e7       	ldi	r30, 0x7A	; 122
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	80 81       	ld	r24, Z
    12dc:	80 64       	ori	r24, 0x40	; 64
    12de:	80 83       	st	Z, r24
    12e0:	08 95       	ret

000012e2 <getCurrentValueOfSensor>:
    12e2:	0e 94 63 09 	call	0x12c6	; 0x12c6 <startADCConversionForSensor>
    12e6:	ea e7       	ldi	r30, 0x7A	; 122
    12e8:	f0 e0       	ldi	r31, 0x00	; 0
    12ea:	80 81       	ld	r24, Z
    12ec:	86 fd       	sbrc	r24, 6
    12ee:	fd cf       	rjmp	.-6      	; 0x12ea <getCurrentValueOfSensor+0x8>
    12f0:	20 91 78 00 	lds	r18, 0x0078
    12f4:	22 95       	swap	r18
    12f6:	26 95       	lsr	r18
    12f8:	26 95       	lsr	r18
    12fa:	23 70       	andi	r18, 0x03	; 3
    12fc:	80 91 79 00 	lds	r24, 0x0079
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	88 0f       	add	r24, r24
    1304:	99 1f       	adc	r25, r25
    1306:	88 0f       	add	r24, r24
    1308:	99 1f       	adc	r25, r25
    130a:	82 2b       	or	r24, r18
    130c:	08 95       	ret

0000130e <getValueOfSensor3>:
    130e:	8f 92       	push	r8
    1310:	9f 92       	push	r9
    1312:	af 92       	push	r10
    1314:	bf 92       	push	r11
    1316:	cf 92       	push	r12
    1318:	df 92       	push	r13
    131a:	ef 92       	push	r14
    131c:	ff 92       	push	r15
    131e:	0f 93       	push	r16
    1320:	1f 93       	push	r17
    1322:	cf 93       	push	r28
    1324:	df 93       	push	r29
    1326:	cd b7       	in	r28, 0x3d	; 61
    1328:	de b7       	in	r29, 0x3e	; 62
    132a:	2e 97       	sbiw	r28, 0x0e	; 14
    132c:	0f b6       	in	r0, 0x3f	; 63
    132e:	f8 94       	cli
    1330:	de bf       	out	0x3e, r29	; 62
    1332:	0f be       	out	0x3f, r0	; 63
    1334:	cd bf       	out	0x3d, r28	; 61
    1336:	18 2f       	mov	r17, r24
    1338:	9e 01       	movw	r18, r28
    133a:	2f 5f       	subi	r18, 0xFF	; 255
    133c:	3f 4f       	sbci	r19, 0xFF	; 255
    133e:	79 01       	movw	r14, r18
    1340:	6e 01       	movw	r12, r28
    1342:	3f e0       	ldi	r19, 0x0F	; 15
    1344:	c3 0e       	add	r12, r19
    1346:	d1 1c       	adc	r13, r1
    1348:	81 2f       	mov	r24, r17
    134a:	0e 94 71 09 	call	0x12e2	; 0x12e2 <getCurrentValueOfSensor>
    134e:	f7 01       	movw	r30, r14
    1350:	81 93       	st	Z+, r24
    1352:	91 93       	st	Z+, r25
    1354:	7f 01       	movw	r14, r30
    1356:	ec 15       	cp	r30, r12
    1358:	fd 05       	cpc	r31, r13
    135a:	b1 f7       	brne	.-20     	; 0x1348 <getValueOfSensor3+0x3a>
    135c:	21 e0       	ldi	r18, 0x01	; 1
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	80 e0       	ldi	r24, 0x00	; 0
    1362:	01 e0       	ldi	r16, 0x01	; 1
    1364:	f1 2c       	mov	r15, r1
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	d1 2c       	mov	r13, r1
    136a:	e1 2c       	mov	r14, r1
    136c:	32 c0       	rjmp	.+100    	; 0x13d2 <getValueOfSensor3+0xc4>
    136e:	48 2f       	mov	r20, r24
    1370:	50 e0       	ldi	r21, 0x00	; 0
    1372:	fa 01       	movw	r30, r20
    1374:	ee 0f       	add	r30, r30
    1376:	ff 1f       	adc	r31, r31
    1378:	aa 24       	eor	r10, r10
    137a:	a3 94       	inc	r10
    137c:	b1 2c       	mov	r11, r1
    137e:	ac 0e       	add	r10, r28
    1380:	bd 1e       	adc	r11, r29
    1382:	ea 0d       	add	r30, r10
    1384:	fb 1d       	adc	r31, r11
    1386:	60 81       	ld	r22, Z
    1388:	71 81       	ldd	r23, Z+1	; 0x01
    138a:	4a 01       	movw	r8, r20
    138c:	ef ef       	ldi	r30, 0xFF	; 255
    138e:	8e 1a       	sub	r8, r30
    1390:	9e 0a       	sbc	r9, r30
    1392:	d4 01       	movw	r26, r8
    1394:	aa 0f       	add	r26, r26
    1396:	bb 1f       	adc	r27, r27
    1398:	aa 0d       	add	r26, r10
    139a:	bb 1d       	adc	r27, r11
    139c:	0d 90       	ld	r0, X+
    139e:	bc 91       	ld	r27, X
    13a0:	a0 2d       	mov	r26, r0
    13a2:	a6 17       	cp	r26, r22
    13a4:	b7 07       	cpc	r27, r23
    13a6:	80 f4       	brcc	.+32     	; 0x13c8 <getValueOfSensor3+0xba>
    13a8:	44 0f       	add	r20, r20
    13aa:	55 1f       	adc	r21, r21
    13ac:	4a 0d       	add	r20, r10
    13ae:	5b 1d       	adc	r21, r11
    13b0:	fa 01       	movw	r30, r20
    13b2:	b1 83       	std	Z+1, r27	; 0x01
    13b4:	a0 83       	st	Z, r26
    13b6:	f4 01       	movw	r30, r8
    13b8:	ee 0f       	add	r30, r30
    13ba:	ff 1f       	adc	r31, r31
    13bc:	ea 0d       	add	r30, r10
    13be:	fb 1d       	adc	r31, r11
    13c0:	71 83       	std	Z+1, r23	; 0x01
    13c2:	60 83       	st	Z, r22
    13c4:	2d 2d       	mov	r18, r13
    13c6:	3e 2d       	mov	r19, r14
    13c8:	8f 5f       	subi	r24, 0xFF	; 255
    13ca:	03 c0       	rjmp	.+6      	; 0x13d2 <getValueOfSensor3+0xc4>
    13cc:	20 2f       	mov	r18, r16
    13ce:	3f 2d       	mov	r19, r15
    13d0:	89 2f       	mov	r24, r25
    13d2:	86 30       	cpi	r24, 0x06	; 6
    13d4:	60 f2       	brcs	.-104    	; 0x136e <getValueOfSensor3+0x60>
    13d6:	23 2b       	or	r18, r19
    13d8:	c9 f3       	breq	.-14     	; 0x13cc <getValueOfSensor3+0xbe>
    13da:	2f 81       	ldd	r18, Y+7	; 0x07
    13dc:	38 85       	ldd	r19, Y+8	; 0x08
    13de:	8d 81       	ldd	r24, Y+5	; 0x05
    13e0:	9e 81       	ldd	r25, Y+6	; 0x06
    13e2:	28 0f       	add	r18, r24
    13e4:	39 1f       	adc	r19, r25
    13e6:	89 85       	ldd	r24, Y+9	; 0x09
    13e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    13ea:	28 0f       	add	r18, r24
    13ec:	39 1f       	adc	r19, r25
    13ee:	ab ea       	ldi	r26, 0xAB	; 171
    13f0:	ba ea       	ldi	r27, 0xAA	; 170
    13f2:	0e 94 99 1b 	call	0x3732	; 0x3732 <__umulhisi3>
    13f6:	96 95       	lsr	r25
    13f8:	87 95       	ror	r24
    13fa:	41 2f       	mov	r20, r17
    13fc:	50 e0       	ldi	r21, 0x00	; 0
    13fe:	fa 01       	movw	r30, r20
    1400:	ee 0f       	add	r30, r30
    1402:	ff 1f       	adc	r31, r31
    1404:	e6 5b       	subi	r30, 0xB6	; 182
    1406:	fb 4f       	sbci	r31, 0xFB	; 251
    1408:	60 81       	ld	r22, Z
    140a:	71 81       	ldd	r23, Z+1	; 0x01
    140c:	67 2b       	or	r22, r23
    140e:	41 f4       	brne	.+16     	; 0x1420 <getValueOfSensor3+0x112>
    1410:	fa 01       	movw	r30, r20
    1412:	ee 0f       	add	r30, r30
    1414:	ff 1f       	adc	r31, r31
    1416:	e6 5b       	subi	r30, 0xB6	; 182
    1418:	fb 4f       	sbci	r31, 0xFB	; 251
    141a:	91 83       	std	Z+1, r25	; 0x01
    141c:	80 83       	st	Z, r24
    141e:	20 c0       	rjmp	.+64     	; 0x1460 <getValueOfSensor3+0x152>
    1420:	fa 01       	movw	r30, r20
    1422:	ee 0f       	add	r30, r30
    1424:	ff 1f       	adc	r31, r31
    1426:	e6 5b       	subi	r30, 0xB6	; 182
    1428:	fb 4f       	sbci	r31, 0xFB	; 251
    142a:	20 81       	ld	r18, Z
    142c:	31 81       	ldd	r19, Z+1	; 0x01
    142e:	b9 01       	movw	r22, r18
    1430:	66 0f       	add	r22, r22
    1432:	77 1f       	adc	r23, r23
    1434:	26 0f       	add	r18, r22
    1436:	37 1f       	adc	r19, r23
    1438:	22 0f       	add	r18, r18
    143a:	33 1f       	adc	r19, r19
    143c:	88 0f       	add	r24, r24
    143e:	99 1f       	adc	r25, r25
    1440:	88 0f       	add	r24, r24
    1442:	99 1f       	adc	r25, r25
    1444:	28 0f       	add	r18, r24
    1446:	39 1f       	adc	r19, r25
    1448:	ad ec       	ldi	r26, 0xCD	; 205
    144a:	bc ec       	ldi	r27, 0xCC	; 204
    144c:	0e 94 99 1b 	call	0x3732	; 0x3732 <__umulhisi3>
    1450:	96 95       	lsr	r25
    1452:	87 95       	ror	r24
    1454:	96 95       	lsr	r25
    1456:	87 95       	ror	r24
    1458:	96 95       	lsr	r25
    145a:	87 95       	ror	r24
    145c:	91 83       	std	Z+1, r25	; 0x01
    145e:	80 83       	st	Z, r24
    1460:	12 30       	cpi	r17, 0x02	; 2
    1462:	d0 f4       	brcc	.+52     	; 0x1498 <getValueOfSensor3+0x18a>
    1464:	fa 01       	movw	r30, r20
    1466:	ee 0f       	add	r30, r30
    1468:	ff 1f       	adc	r31, r31
    146a:	e6 5b       	subi	r30, 0xB6	; 182
    146c:	fb 4f       	sbci	r31, 0xFB	; 251
    146e:	20 81       	ld	r18, Z
    1470:	31 81       	ldd	r19, Z+1	; 0x01
    1472:	22 95       	swap	r18
    1474:	32 95       	swap	r19
    1476:	30 7f       	andi	r19, 0xF0	; 240
    1478:	32 27       	eor	r19, r18
    147a:	20 7f       	andi	r18, 0xF0	; 240
    147c:	32 27       	eor	r19, r18
    147e:	2b 53       	subi	r18, 0x3B	; 59
    1480:	31 40       	sbci	r19, 0x01	; 1
    1482:	40 e0       	ldi	r20, 0x00	; 0
    1484:	50 e0       	ldi	r21, 0x00	; 0
    1486:	61 e5       	ldi	r22, 0x51	; 81
    1488:	7c ee       	ldi	r23, 0xEC	; 236
    148a:	84 e0       	ldi	r24, 0x04	; 4
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	0e 94 71 1b 	call	0x36e2	; 0x36e2 <__udivmodsi4>
    1492:	ca 01       	movw	r24, r20
    1494:	b9 01       	movw	r22, r18
    1496:	19 c0       	rjmp	.+50     	; 0x14ca <getValueOfSensor3+0x1bc>
    1498:	fa 01       	movw	r30, r20
    149a:	ee 0f       	add	r30, r30
    149c:	ff 1f       	adc	r31, r31
    149e:	e6 5b       	subi	r30, 0xB6	; 182
    14a0:	fb 4f       	sbci	r31, 0xFB	; 251
    14a2:	20 81       	ld	r18, Z
    14a4:	31 81       	ldd	r19, Z+1	; 0x01
    14a6:	22 95       	swap	r18
    14a8:	32 95       	swap	r19
    14aa:	30 7f       	andi	r19, 0xF0	; 240
    14ac:	32 27       	eor	r19, r18
    14ae:	20 7f       	andi	r18, 0xF0	; 240
    14b0:	32 27       	eor	r19, r18
    14b2:	28 50       	subi	r18, 0x08	; 8
    14b4:	32 40       	sbci	r19, 0x02	; 2
    14b6:	40 e0       	ldi	r20, 0x00	; 0
    14b8:	50 e0       	ldi	r21, 0x00	; 0
    14ba:	6d ef       	ldi	r22, 0xFD	; 253
    14bc:	7d eb       	ldi	r23, 0xBD	; 189
    14be:	8b e0       	ldi	r24, 0x0B	; 11
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	0e 94 71 1b 	call	0x36e2	; 0x36e2 <__udivmodsi4>
    14c6:	ca 01       	movw	r24, r20
    14c8:	b9 01       	movw	r22, r18
    14ca:	2e 96       	adiw	r28, 0x0e	; 14
    14cc:	0f b6       	in	r0, 0x3f	; 63
    14ce:	f8 94       	cli
    14d0:	de bf       	out	0x3e, r29	; 62
    14d2:	0f be       	out	0x3f, r0	; 63
    14d4:	cd bf       	out	0x3d, r28	; 61
    14d6:	df 91       	pop	r29
    14d8:	cf 91       	pop	r28
    14da:	1f 91       	pop	r17
    14dc:	0f 91       	pop	r16
    14de:	ff 90       	pop	r15
    14e0:	ef 90       	pop	r14
    14e2:	df 90       	pop	r13
    14e4:	cf 90       	pop	r12
    14e6:	bf 90       	pop	r11
    14e8:	af 90       	pop	r10
    14ea:	9f 90       	pop	r9
    14ec:	8f 90       	pop	r8
    14ee:	08 95       	ret

000014f0 <readSensors>:
    14f0:	80 91 94 04 	lds	r24, 0x0494
    14f4:	80 ff       	sbrs	r24, 0
    14f6:	0b c0       	rjmp	.+22     	; 0x150e <readSensors+0x1e>
    14f8:	80 e0       	ldi	r24, 0x00	; 0
    14fa:	0e 94 87 09 	call	0x130e	; 0x130e <getValueOfSensor3>
    14fe:	60 93 52 04 	sts	0x0452, r22
    1502:	70 93 53 04 	sts	0x0453, r23
    1506:	80 93 54 04 	sts	0x0454, r24
    150a:	90 93 55 04 	sts	0x0455, r25
    150e:	80 91 94 04 	lds	r24, 0x0494
    1512:	81 ff       	sbrs	r24, 1
    1514:	0b c0       	rjmp	.+22     	; 0x152c <readSensors+0x3c>
    1516:	81 e0       	ldi	r24, 0x01	; 1
    1518:	0e 94 87 09 	call	0x130e	; 0x130e <getValueOfSensor3>
    151c:	60 93 56 04 	sts	0x0456, r22
    1520:	70 93 57 04 	sts	0x0457, r23
    1524:	80 93 58 04 	sts	0x0458, r24
    1528:	90 93 59 04 	sts	0x0459, r25
    152c:	80 91 94 04 	lds	r24, 0x0494
    1530:	82 ff       	sbrs	r24, 2
    1532:	0b c0       	rjmp	.+22     	; 0x154a <readSensors+0x5a>
    1534:	82 e0       	ldi	r24, 0x02	; 2
    1536:	0e 94 87 09 	call	0x130e	; 0x130e <getValueOfSensor3>
    153a:	60 93 5a 04 	sts	0x045A, r22
    153e:	70 93 5b 04 	sts	0x045B, r23
    1542:	80 93 5c 04 	sts	0x045C, r24
    1546:	90 93 5d 04 	sts	0x045D, r25
    154a:	80 91 94 04 	lds	r24, 0x0494
    154e:	83 ff       	sbrs	r24, 3
    1550:	0b c0       	rjmp	.+22     	; 0x1568 <readSensors+0x78>
    1552:	83 e0       	ldi	r24, 0x03	; 3
    1554:	0e 94 87 09 	call	0x130e	; 0x130e <getValueOfSensor3>
    1558:	60 93 5e 04 	sts	0x045E, r22
    155c:	70 93 5f 04 	sts	0x045F, r23
    1560:	80 93 60 04 	sts	0x0460, r24
    1564:	90 93 61 04 	sts	0x0461, r25
    1568:	80 e0       	ldi	r24, 0x00	; 0
    156a:	08 95       	ret

0000156c <locLiberSMF>:
{
	stareLocLiber=0;
	distP=0;
	addEntryIfNotExists(&locLiberSMF, 150 * 1000UL, Periodic);
}
uint8_t locLiberSMF(){
    156c:	cf 92       	push	r12
    156e:	df 92       	push	r13
    1570:	ef 92       	push	r14
    1572:	ff 92       	push	r15
    1574:	0f 93       	push	r16
    1576:	1f 93       	push	r17
    1578:	cf 93       	push	r28
    157a:	df 93       	push	r29
    157c:	cd b7       	in	r28, 0x3d	; 61
    157e:	de b7       	in	r29, 0x3e	; 62
    1580:	c4 56       	subi	r28, 0x64	; 100
    1582:	d1 09       	sbc	r29, r1
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	f8 94       	cli
    1588:	de bf       	out	0x3e, r29	; 62
    158a:	0f be       	out	0x3f, r0	; 63
    158c:	cd bf       	out	0x3d, r28	; 61
	uint32_t sideRight = getValueOfSensor(SideRightSensor);
    158e:	81 e0       	ldi	r24, 0x01	; 1
    1590:	0e 94 3a 08 	call	0x1074	; 0x1074 <getValueOfSensor>
    1594:	a0 e0       	ldi	r26, 0x00	; 0
    1596:	b0 e0       	ldi	r27, 0x00	; 0
	char msg[100];
	switch(stareLocLiber){
    1598:	20 91 a0 04 	lds	r18, 0x04A0
    159c:	22 30       	cpi	r18, 0x02	; 2
    159e:	09 f4       	brne	.+2      	; 0x15a2 <locLiberSMF+0x36>
    15a0:	ac c0       	rjmp	.+344    	; 0x16fa <locLiberSMF+0x18e>
    15a2:	30 f4       	brcc	.+12     	; 0x15b0 <locLiberSMF+0x44>
    15a4:	22 23       	and	r18, r18
    15a6:	59 f0       	breq	.+22     	; 0x15be <locLiberSMF+0x52>
    15a8:	21 30       	cpi	r18, 0x01	; 1
    15aa:	09 f4       	brne	.+2      	; 0x15ae <locLiberSMF+0x42>
    15ac:	58 c0       	rjmp	.+176    	; 0x165e <locLiberSMF+0xf2>
    15ae:	9f c1       	rjmp	.+830    	; 0x18ee <locLiberSMF+0x382>
    15b0:	23 30       	cpi	r18, 0x03	; 3
    15b2:	09 f4       	brne	.+2      	; 0x15b6 <locLiberSMF+0x4a>
    15b4:	f2 c0       	rjmp	.+484    	; 0x179a <locLiberSMF+0x22e>
    15b6:	24 30       	cpi	r18, 0x04	; 4
    15b8:	09 f4       	brne	.+2      	; 0x15bc <locLiberSMF+0x50>
    15ba:	3d c1       	rjmp	.+634    	; 0x1836 <locLiberSMF+0x2ca>
    15bc:	98 c1       	rjmp	.+816    	; 0x18ee <locLiberSMF+0x382>
		case 0:
			distLocLiber=DISTANTA_PARCURSA;
    15be:	40 91 40 04 	lds	r20, 0x0440
    15c2:	50 91 41 04 	lds	r21, 0x0441
    15c6:	60 91 42 04 	lds	r22, 0x0442
    15ca:	70 91 43 04 	lds	r23, 0x0443
    15ce:	00 91 46 04 	lds	r16, 0x0446
    15d2:	10 91 47 04 	lds	r17, 0x0447
    15d6:	20 91 48 04 	lds	r18, 0x0448
    15da:	30 91 49 04 	lds	r19, 0x0449
    15de:	40 0f       	add	r20, r16
    15e0:	51 1f       	adc	r21, r17
    15e2:	62 1f       	adc	r22, r18
    15e4:	73 1f       	adc	r23, r19
    15e6:	76 95       	lsr	r23
    15e8:	67 95       	ror	r22
    15ea:	57 95       	ror	r21
    15ec:	47 95       	ror	r20
    15ee:	76 95       	lsr	r23
    15f0:	67 95       	ror	r22
    15f2:	57 95       	ror	r21
    15f4:	47 95       	ror	r20
    15f6:	8a 01       	movw	r16, r20
    15f8:	9b 01       	movw	r18, r22
    15fa:	00 0f       	add	r16, r16
    15fc:	11 1f       	adc	r17, r17
    15fe:	22 1f       	adc	r18, r18
    1600:	33 1f       	adc	r19, r19
    1602:	00 0f       	add	r16, r16
    1604:	11 1f       	adc	r17, r17
    1606:	22 1f       	adc	r18, r18
    1608:	33 1f       	adc	r19, r19
    160a:	68 01       	movw	r12, r16
    160c:	79 01       	movw	r14, r18
    160e:	cc 0c       	add	r12, r12
    1610:	dd 1c       	adc	r13, r13
    1612:	ee 1c       	adc	r14, r14
    1614:	ff 1c       	adc	r15, r15
    1616:	cc 0c       	add	r12, r12
    1618:	dd 1c       	adc	r13, r13
    161a:	ee 1c       	adc	r14, r14
    161c:	ff 1c       	adc	r15, r15
    161e:	0c 0d       	add	r16, r12
    1620:	1d 1d       	adc	r17, r13
    1622:	2e 1d       	adc	r18, r14
    1624:	3f 1d       	adc	r19, r15
    1626:	40 0f       	add	r20, r16
    1628:	51 1f       	adc	r21, r17
    162a:	62 1f       	adc	r22, r18
    162c:	73 1f       	adc	r23, r19
    162e:	40 93 ac 04 	sts	0x04AC, r20
    1632:	50 93 ad 04 	sts	0x04AD, r21
    1636:	60 93 ae 04 	sts	0x04AE, r22
    163a:	70 93 af 04 	sts	0x04AF, r23
			if(sideRight>200){
    163e:	89 3c       	cpi	r24, 0xC9	; 201
    1640:	91 05       	cpc	r25, r1
    1642:	a1 05       	cpc	r26, r1
    1644:	b1 05       	cpc	r27, r1
    1646:	10 f4       	brcc	.+4      	; 0x164c <locLiberSMF+0xe0>
				liber=liber *1;
			}
			else 
				liber = 0;
    1648:	10 92 a1 04 	sts	0x04A1, r1
			stareLocLiber=1;
    164c:	81 e0       	ldi	r24, 0x01	; 1
    164e:	80 93 a0 04 	sts	0x04A0, r24
			goBack(60,75);			
    1652:	6b e4       	ldi	r22, 0x4B	; 75
    1654:	8c e3       	ldi	r24, 0x3C	; 60
    1656:	0e 94 7f 05 	call	0xafe	; 0xafe <goBack>
			}
			return YES;
		break;
		
	}
	return NO;
    165a:	80 e0       	ldi	r24, 0x00	; 0
			}
			else 
				liber = 0;
			stareLocLiber=1;
			goBack(60,75);			
		break;
    165c:	4f c1       	rjmp	.+670    	; 0x18fc <locLiberSMF+0x390>
		case 1:
			if(DISTANTA_PARCURSA - 4 > distLocLiber)
    165e:	80 91 40 04 	lds	r24, 0x0440
    1662:	90 91 41 04 	lds	r25, 0x0441
    1666:	a0 91 42 04 	lds	r26, 0x0442
    166a:	b0 91 43 04 	lds	r27, 0x0443
    166e:	40 91 46 04 	lds	r20, 0x0446
    1672:	50 91 47 04 	lds	r21, 0x0447
    1676:	60 91 48 04 	lds	r22, 0x0448
    167a:	70 91 49 04 	lds	r23, 0x0449
    167e:	84 0f       	add	r24, r20
    1680:	95 1f       	adc	r25, r21
    1682:	a6 1f       	adc	r26, r22
    1684:	b7 1f       	adc	r27, r23
    1686:	b6 95       	lsr	r27
    1688:	a7 95       	ror	r26
    168a:	97 95       	ror	r25
    168c:	87 95       	ror	r24
    168e:	b6 95       	lsr	r27
    1690:	a7 95       	ror	r26
    1692:	97 95       	ror	r25
    1694:	87 95       	ror	r24
    1696:	ac 01       	movw	r20, r24
    1698:	bd 01       	movw	r22, r26
    169a:	44 0f       	add	r20, r20
    169c:	55 1f       	adc	r21, r21
    169e:	66 1f       	adc	r22, r22
    16a0:	77 1f       	adc	r23, r23
    16a2:	44 0f       	add	r20, r20
    16a4:	55 1f       	adc	r21, r21
    16a6:	66 1f       	adc	r22, r22
    16a8:	77 1f       	adc	r23, r23
    16aa:	8a 01       	movw	r16, r20
    16ac:	9b 01       	movw	r18, r22
    16ae:	00 0f       	add	r16, r16
    16b0:	11 1f       	adc	r17, r17
    16b2:	22 1f       	adc	r18, r18
    16b4:	33 1f       	adc	r19, r19
    16b6:	00 0f       	add	r16, r16
    16b8:	11 1f       	adc	r17, r17
    16ba:	22 1f       	adc	r18, r18
    16bc:	33 1f       	adc	r19, r19
    16be:	40 0f       	add	r20, r16
    16c0:	51 1f       	adc	r21, r17
    16c2:	62 1f       	adc	r22, r18
    16c4:	73 1f       	adc	r23, r19
    16c6:	84 0f       	add	r24, r20
    16c8:	95 1f       	adc	r25, r21
    16ca:	a6 1f       	adc	r26, r22
    16cc:	b7 1f       	adc	r27, r23
    16ce:	04 97       	sbiw	r24, 0x04	; 4
    16d0:	a1 09       	sbc	r26, r1
    16d2:	b1 09       	sbc	r27, r1
    16d4:	00 91 ac 04 	lds	r16, 0x04AC
    16d8:	10 91 ad 04 	lds	r17, 0x04AD
    16dc:	20 91 ae 04 	lds	r18, 0x04AE
    16e0:	30 91 af 04 	lds	r19, 0x04AF
    16e4:	08 17       	cp	r16, r24
    16e6:	19 07       	cpc	r17, r25
    16e8:	2a 07       	cpc	r18, r26
    16ea:	3b 07       	cpc	r19, r27
    16ec:	08 f0       	brcs	.+2      	; 0x16f0 <locLiberSMF+0x184>
    16ee:	01 c1       	rjmp	.+514    	; 0x18f2 <locLiberSMF+0x386>
				stareLocLiber=2;
    16f0:	82 e0       	ldi	r24, 0x02	; 2
    16f2:	80 93 a0 04 	sts	0x04A0, r24
			}
			return YES;
		break;
		
	}
	return NO;
    16f6:	80 e0       	ldi	r24, 0x00	; 0
    16f8:	01 c1       	rjmp	.+514    	; 0x18fc <locLiberSMF+0x390>
		case 1:
			if(DISTANTA_PARCURSA - 4 > distLocLiber)
				stareLocLiber=2;
		break;
		case 2:
			distLocLiber=DISTANTA_PARCURSA;
    16fa:	40 91 40 04 	lds	r20, 0x0440
    16fe:	50 91 41 04 	lds	r21, 0x0441
    1702:	60 91 42 04 	lds	r22, 0x0442
    1706:	70 91 43 04 	lds	r23, 0x0443
    170a:	00 91 46 04 	lds	r16, 0x0446
    170e:	10 91 47 04 	lds	r17, 0x0447
    1712:	20 91 48 04 	lds	r18, 0x0448
    1716:	30 91 49 04 	lds	r19, 0x0449
    171a:	40 0f       	add	r20, r16
    171c:	51 1f       	adc	r21, r17
    171e:	62 1f       	adc	r22, r18
    1720:	73 1f       	adc	r23, r19
    1722:	76 95       	lsr	r23
    1724:	67 95       	ror	r22
    1726:	57 95       	ror	r21
    1728:	47 95       	ror	r20
    172a:	76 95       	lsr	r23
    172c:	67 95       	ror	r22
    172e:	57 95       	ror	r21
    1730:	47 95       	ror	r20
    1732:	8a 01       	movw	r16, r20
    1734:	9b 01       	movw	r18, r22
    1736:	00 0f       	add	r16, r16
    1738:	11 1f       	adc	r17, r17
    173a:	22 1f       	adc	r18, r18
    173c:	33 1f       	adc	r19, r19
    173e:	00 0f       	add	r16, r16
    1740:	11 1f       	adc	r17, r17
    1742:	22 1f       	adc	r18, r18
    1744:	33 1f       	adc	r19, r19
    1746:	68 01       	movw	r12, r16
    1748:	79 01       	movw	r14, r18
    174a:	cc 0c       	add	r12, r12
    174c:	dd 1c       	adc	r13, r13
    174e:	ee 1c       	adc	r14, r14
    1750:	ff 1c       	adc	r15, r15
    1752:	cc 0c       	add	r12, r12
    1754:	dd 1c       	adc	r13, r13
    1756:	ee 1c       	adc	r14, r14
    1758:	ff 1c       	adc	r15, r15
    175a:	0c 0d       	add	r16, r12
    175c:	1d 1d       	adc	r17, r13
    175e:	2e 1d       	adc	r18, r14
    1760:	3f 1d       	adc	r19, r15
    1762:	40 0f       	add	r20, r16
    1764:	51 1f       	adc	r21, r17
    1766:	62 1f       	adc	r22, r18
    1768:	73 1f       	adc	r23, r19
    176a:	40 93 ac 04 	sts	0x04AC, r20
    176e:	50 93 ad 04 	sts	0x04AD, r21
    1772:	60 93 ae 04 	sts	0x04AE, r22
    1776:	70 93 af 04 	sts	0x04AF, r23
			if(sideRight>200){
    177a:	89 3c       	cpi	r24, 0xC9	; 201
    177c:	91 05       	cpc	r25, r1
    177e:	a1 05       	cpc	r26, r1
    1780:	b1 05       	cpc	r27, r1
    1782:	10 f4       	brcc	.+4      	; 0x1788 <locLiberSMF+0x21c>
				liber=liber *1;
			}
			else
			liber = 0;
    1784:	10 92 a1 04 	sts	0x04A1, r1
			stareLocLiber=3;
    1788:	83 e0       	ldi	r24, 0x03	; 3
    178a:	80 93 a0 04 	sts	0x04A0, r24
			goFront(60,75);
    178e:	6b e4       	ldi	r22, 0x4B	; 75
    1790:	8c e3       	ldi	r24, 0x3C	; 60
    1792:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
			}
			return YES;
		break;
		
	}
	return NO;
    1796:	80 e0       	ldi	r24, 0x00	; 0
			}
			else
			liber = 0;
			stareLocLiber=3;
			goFront(60,75);
		break;
    1798:	b1 c0       	rjmp	.+354    	; 0x18fc <locLiberSMF+0x390>
		case 3:
			if(DISTANTA_PARCURSA - 4> distLocLiber)
    179a:	80 91 40 04 	lds	r24, 0x0440
    179e:	90 91 41 04 	lds	r25, 0x0441
    17a2:	a0 91 42 04 	lds	r26, 0x0442
    17a6:	b0 91 43 04 	lds	r27, 0x0443
    17aa:	40 91 46 04 	lds	r20, 0x0446
    17ae:	50 91 47 04 	lds	r21, 0x0447
    17b2:	60 91 48 04 	lds	r22, 0x0448
    17b6:	70 91 49 04 	lds	r23, 0x0449
    17ba:	84 0f       	add	r24, r20
    17bc:	95 1f       	adc	r25, r21
    17be:	a6 1f       	adc	r26, r22
    17c0:	b7 1f       	adc	r27, r23
    17c2:	b6 95       	lsr	r27
    17c4:	a7 95       	ror	r26
    17c6:	97 95       	ror	r25
    17c8:	87 95       	ror	r24
    17ca:	b6 95       	lsr	r27
    17cc:	a7 95       	ror	r26
    17ce:	97 95       	ror	r25
    17d0:	87 95       	ror	r24
    17d2:	ac 01       	movw	r20, r24
    17d4:	bd 01       	movw	r22, r26
    17d6:	44 0f       	add	r20, r20
    17d8:	55 1f       	adc	r21, r21
    17da:	66 1f       	adc	r22, r22
    17dc:	77 1f       	adc	r23, r23
    17de:	44 0f       	add	r20, r20
    17e0:	55 1f       	adc	r21, r21
    17e2:	66 1f       	adc	r22, r22
    17e4:	77 1f       	adc	r23, r23
    17e6:	8a 01       	movw	r16, r20
    17e8:	9b 01       	movw	r18, r22
    17ea:	00 0f       	add	r16, r16
    17ec:	11 1f       	adc	r17, r17
    17ee:	22 1f       	adc	r18, r18
    17f0:	33 1f       	adc	r19, r19
    17f2:	00 0f       	add	r16, r16
    17f4:	11 1f       	adc	r17, r17
    17f6:	22 1f       	adc	r18, r18
    17f8:	33 1f       	adc	r19, r19
    17fa:	40 0f       	add	r20, r16
    17fc:	51 1f       	adc	r21, r17
    17fe:	62 1f       	adc	r22, r18
    1800:	73 1f       	adc	r23, r19
    1802:	84 0f       	add	r24, r20
    1804:	95 1f       	adc	r25, r21
    1806:	a6 1f       	adc	r26, r22
    1808:	b7 1f       	adc	r27, r23
    180a:	04 97       	sbiw	r24, 0x04	; 4
    180c:	a1 09       	sbc	r26, r1
    180e:	b1 09       	sbc	r27, r1
    1810:	00 91 ac 04 	lds	r16, 0x04AC
    1814:	10 91 ad 04 	lds	r17, 0x04AD
    1818:	20 91 ae 04 	lds	r18, 0x04AE
    181c:	30 91 af 04 	lds	r19, 0x04AF
    1820:	08 17       	cp	r16, r24
    1822:	19 07       	cpc	r17, r25
    1824:	2a 07       	cpc	r18, r26
    1826:	3b 07       	cpc	r19, r27
    1828:	08 f0       	brcs	.+2      	; 0x182c <locLiberSMF+0x2c0>
    182a:	65 c0       	rjmp	.+202    	; 0x18f6 <locLiberSMF+0x38a>
				stareLocLiber = 4;
    182c:	84 e0       	ldi	r24, 0x04	; 4
    182e:	80 93 a0 04 	sts	0x04A0, r24
			}
			return YES;
		break;
		
	}
	return NO;
    1832:	80 e0       	ldi	r24, 0x00	; 0
    1834:	63 c0       	rjmp	.+198    	; 0x18fc <locLiberSMF+0x390>
		case 3:
			if(DISTANTA_PARCURSA - 4> distLocLiber)
				stareLocLiber = 4;
		break;
		case 4:
			distLocLiber=DISTANTA_PARCURSA;
    1836:	40 91 40 04 	lds	r20, 0x0440
    183a:	50 91 41 04 	lds	r21, 0x0441
    183e:	60 91 42 04 	lds	r22, 0x0442
    1842:	70 91 43 04 	lds	r23, 0x0443
    1846:	00 91 46 04 	lds	r16, 0x0446
    184a:	10 91 47 04 	lds	r17, 0x0447
    184e:	20 91 48 04 	lds	r18, 0x0448
    1852:	30 91 49 04 	lds	r19, 0x0449
    1856:	40 0f       	add	r20, r16
    1858:	51 1f       	adc	r21, r17
    185a:	62 1f       	adc	r22, r18
    185c:	73 1f       	adc	r23, r19
    185e:	76 95       	lsr	r23
    1860:	67 95       	ror	r22
    1862:	57 95       	ror	r21
    1864:	47 95       	ror	r20
    1866:	76 95       	lsr	r23
    1868:	67 95       	ror	r22
    186a:	57 95       	ror	r21
    186c:	47 95       	ror	r20
    186e:	8a 01       	movw	r16, r20
    1870:	9b 01       	movw	r18, r22
    1872:	00 0f       	add	r16, r16
    1874:	11 1f       	adc	r17, r17
    1876:	22 1f       	adc	r18, r18
    1878:	33 1f       	adc	r19, r19
    187a:	00 0f       	add	r16, r16
    187c:	11 1f       	adc	r17, r17
    187e:	22 1f       	adc	r18, r18
    1880:	33 1f       	adc	r19, r19
    1882:	68 01       	movw	r12, r16
    1884:	79 01       	movw	r14, r18
    1886:	cc 0c       	add	r12, r12
    1888:	dd 1c       	adc	r13, r13
    188a:	ee 1c       	adc	r14, r14
    188c:	ff 1c       	adc	r15, r15
    188e:	cc 0c       	add	r12, r12
    1890:	dd 1c       	adc	r13, r13
    1892:	ee 1c       	adc	r14, r14
    1894:	ff 1c       	adc	r15, r15
    1896:	0c 0d       	add	r16, r12
    1898:	1d 1d       	adc	r17, r13
    189a:	2e 1d       	adc	r18, r14
    189c:	3f 1d       	adc	r19, r15
    189e:	40 0f       	add	r20, r16
    18a0:	51 1f       	adc	r21, r17
    18a2:	62 1f       	adc	r22, r18
    18a4:	73 1f       	adc	r23, r19
    18a6:	40 93 ac 04 	sts	0x04AC, r20
    18aa:	50 93 ad 04 	sts	0x04AD, r21
    18ae:	60 93 ae 04 	sts	0x04AE, r22
    18b2:	70 93 af 04 	sts	0x04AF, r23
			if(sideRight>200){
    18b6:	89 3c       	cpi	r24, 0xC9	; 201
    18b8:	91 05       	cpc	r25, r1
    18ba:	a1 05       	cpc	r26, r1
    18bc:	b1 05       	cpc	r27, r1
    18be:	10 f4       	brcc	.+4      	; 0x18c4 <locLiberSMF+0x358>
				liber=liber *1;
			}
			else
				liber = 0;
    18c0:	10 92 a1 04 	sts	0x04A1, r1
			stopEngines();
    18c4:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
			if(liber==1){
    18c8:	80 91 a1 04 	lds	r24, 0x04A1
    18cc:	81 30       	cpi	r24, 0x01	; 1
    18ce:	a9 f4       	brne	.+42     	; 0x18fa <locLiberSMF+0x38e>
				sprintf(msg, "stare= 1");
    18d0:	89 e0       	ldi	r24, 0x09	; 9
    18d2:	ef e8       	ldi	r30, 0x8F	; 143
    18d4:	f2 e0       	ldi	r31, 0x02	; 2
    18d6:	de 01       	movw	r26, r28
    18d8:	11 96       	adiw	r26, 0x01	; 1
    18da:	01 90       	ld	r0, Z+
    18dc:	0d 92       	st	X+, r0
    18de:	8a 95       	dec	r24
    18e0:	e1 f7       	brne	.-8      	; 0x18da <locLiberSMF+0x36e>
				BTTransmitStr(msg);
    18e2:	ce 01       	movw	r24, r28
    18e4:	01 96       	adiw	r24, 0x01	; 1
    18e6:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
			}
			return YES;
    18ea:	81 e0       	ldi	r24, 0x01	; 1
    18ec:	07 c0       	rjmp	.+14     	; 0x18fc <locLiberSMF+0x390>
		break;
		
	}
	return NO;
    18ee:	80 e0       	ldi	r24, 0x00	; 0
    18f0:	05 c0       	rjmp	.+10     	; 0x18fc <locLiberSMF+0x390>
    18f2:	80 e0       	ldi	r24, 0x00	; 0
    18f4:	03 c0       	rjmp	.+6      	; 0x18fc <locLiberSMF+0x390>
    18f6:	80 e0       	ldi	r24, 0x00	; 0
    18f8:	01 c0       	rjmp	.+2      	; 0x18fc <locLiberSMF+0x390>
			stopEngines();
			if(liber==1){
				sprintf(msg, "stare= 1");
				BTTransmitStr(msg);
			}
			return YES;
    18fa:	81 e0       	ldi	r24, 0x01	; 1
		break;
		
	}
	return NO;

}
    18fc:	cc 59       	subi	r28, 0x9C	; 156
    18fe:	df 4f       	sbci	r29, 0xFF	; 255
    1900:	0f b6       	in	r0, 0x3f	; 63
    1902:	f8 94       	cli
    1904:	de bf       	out	0x3e, r29	; 62
    1906:	0f be       	out	0x3f, r0	; 63
    1908:	cd bf       	out	0x3d, r28	; 61
    190a:	df 91       	pop	r29
    190c:	cf 91       	pop	r28
    190e:	1f 91       	pop	r17
    1910:	0f 91       	pop	r16
    1912:	ff 90       	pop	r15
    1914:	ef 90       	pop	r14
    1916:	df 90       	pop	r13
    1918:	cf 90       	pop	r12
    191a:	08 95       	ret

0000191c <findPlaces1>:
	distP2=0;
	addEntryIfNotExists(&findPlaces1, 150 * 1000UL, Periodic);
}


uint8_t findPlaces1(){
    191c:	4f 92       	push	r4
    191e:	5f 92       	push	r5
    1920:	6f 92       	push	r6
    1922:	7f 92       	push	r7
    1924:	8f 92       	push	r8
    1926:	9f 92       	push	r9
    1928:	af 92       	push	r10
    192a:	bf 92       	push	r11
    192c:	cf 92       	push	r12
    192e:	df 92       	push	r13
    1930:	ef 92       	push	r14
    1932:	ff 92       	push	r15
    1934:	0f 93       	push	r16
    1936:	1f 93       	push	r17
    1938:	cf 93       	push	r28
    193a:	df 93       	push	r29
    193c:	cd b7       	in	r28, 0x3d	; 61
    193e:	de b7       	in	r29, 0x3e	; 62
    1940:	c4 56       	subi	r28, 0x64	; 100
    1942:	d1 09       	sbc	r29, r1
    1944:	0f b6       	in	r0, 0x3f	; 63
    1946:	f8 94       	cli
    1948:	de bf       	out	0x3e, r29	; 62
    194a:	0f be       	out	0x3f, r0	; 63
    194c:	cd bf       	out	0x3d, r28	; 61
	uint32_t sideRight = getValueOfSensor(SideRightSensor);
    194e:	81 e0       	ldi	r24, 0x01	; 1
    1950:	0e 94 3a 08 	call	0x1074	; 0x1074 <getValueOfSensor>
    1954:	6c 01       	movw	r12, r24
    1956:	e1 2c       	mov	r14, r1
    1958:	f1 2c       	mov	r15, r1
	char msg[100];
	//sprintf(msg, "stare=%u\nlastV=%lu\nsr=%lu", stareFP1, lastVFP1, sideRight);
	//BTTransmitStr(msg);
	switch(stareFP1){
    195a:	80 91 9b 04 	lds	r24, 0x049B
    195e:	82 30       	cpi	r24, 0x02	; 2
    1960:	09 f4       	brne	.+2      	; 0x1964 <findPlaces1+0x48>
    1962:	d8 c0       	rjmp	.+432    	; 0x1b14 <findPlaces1+0x1f8>
    1964:	28 f4       	brcc	.+10     	; 0x1970 <findPlaces1+0x54>
    1966:	88 23       	and	r24, r24
    1968:	61 f0       	breq	.+24     	; 0x1982 <findPlaces1+0x66>
    196a:	81 30       	cpi	r24, 0x01	; 1
    196c:	d1 f0       	breq	.+52     	; 0x19a2 <findPlaces1+0x86>
    196e:	c9 c2       	rjmp	.+1426   	; 0x1f02 <findPlaces1+0x5e6>
    1970:	84 30       	cpi	r24, 0x04	; 4
    1972:	09 f4       	brne	.+2      	; 0x1976 <findPlaces1+0x5a>
    1974:	79 c2       	rjmp	.+1266   	; 0x1e68 <findPlaces1+0x54c>
    1976:	08 f4       	brcc	.+2      	; 0x197a <findPlaces1+0x5e>
    1978:	6e c1       	rjmp	.+732    	; 0x1c56 <findPlaces1+0x33a>
    197a:	85 30       	cpi	r24, 0x05	; 5
    197c:	09 f4       	brne	.+2      	; 0x1980 <findPlaces1+0x64>
    197e:	bf c2       	rjmp	.+1406   	; 0x1efe <findPlaces1+0x5e2>
    1980:	c0 c2       	rjmp	.+1408   	; 0x1f02 <findPlaces1+0x5e6>
		case 0:
			lastVFP1 = sideRight;
    1982:	c0 92 a3 04 	sts	0x04A3, r12
    1986:	d0 92 a4 04 	sts	0x04A4, r13
    198a:	e0 92 a5 04 	sts	0x04A5, r14
    198e:	f0 92 a6 04 	sts	0x04A6, r15
			goFront(60, 50);
    1992:	62 e3       	ldi	r22, 0x32	; 50
    1994:	8c e3       	ldi	r24, 0x3C	; 60
    1996:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
			stareFP1 = 1;		
    199a:	81 e0       	ldi	r24, 0x01	; 1
    199c:	80 93 9b 04 	sts	0x049B, r24
		break;
    19a0:	b0 c2       	rjmp	.+1376   	; 0x1f02 <findPlaces1+0x5e6>
		case 1:
			if(sideRight > lastVFP1 + 100){
    19a2:	80 91 a3 04 	lds	r24, 0x04A3
    19a6:	90 91 a4 04 	lds	r25, 0x04A4
    19aa:	a0 91 a5 04 	lds	r26, 0x04A5
    19ae:	b0 91 a6 04 	lds	r27, 0x04A6
    19b2:	8c 59       	subi	r24, 0x9C	; 156
    19b4:	9f 4f       	sbci	r25, 0xFF	; 255
    19b6:	af 4f       	sbci	r26, 0xFF	; 255
    19b8:	bf 4f       	sbci	r27, 0xFF	; 255
    19ba:	8c 15       	cp	r24, r12
    19bc:	9d 05       	cpc	r25, r13
    19be:	ae 05       	cpc	r26, r14
    19c0:	bf 05       	cpc	r27, r15
    19c2:	08 f0       	brcs	.+2      	; 0x19c6 <findPlaces1+0xaa>
    19c4:	9e c0       	rjmp	.+316    	; 0x1b02 <findPlaces1+0x1e6>
				//stopEngines();
				stareFP1 = 2;
    19c6:	82 e0       	ldi	r24, 0x02	; 2
    19c8:	80 93 9b 04 	sts	0x049B, r24
				distP = DISTANTA_PARCURSA;
    19cc:	80 91 40 04 	lds	r24, 0x0440
    19d0:	90 91 41 04 	lds	r25, 0x0441
    19d4:	a0 91 42 04 	lds	r26, 0x0442
    19d8:	b0 91 43 04 	lds	r27, 0x0443
    19dc:	40 91 46 04 	lds	r20, 0x0446
    19e0:	50 91 47 04 	lds	r21, 0x0447
    19e4:	60 91 48 04 	lds	r22, 0x0448
    19e8:	70 91 49 04 	lds	r23, 0x0449
    19ec:	48 0f       	add	r20, r24
    19ee:	59 1f       	adc	r21, r25
    19f0:	6a 1f       	adc	r22, r26
    19f2:	7b 1f       	adc	r23, r27
    19f4:	76 95       	lsr	r23
    19f6:	67 95       	ror	r22
    19f8:	57 95       	ror	r21
    19fa:	47 95       	ror	r20
    19fc:	76 95       	lsr	r23
    19fe:	67 95       	ror	r22
    1a00:	57 95       	ror	r21
    1a02:	47 95       	ror	r20
    1a04:	db 01       	movw	r26, r22
    1a06:	ca 01       	movw	r24, r20
    1a08:	88 0f       	add	r24, r24
    1a0a:	99 1f       	adc	r25, r25
    1a0c:	aa 1f       	adc	r26, r26
    1a0e:	bb 1f       	adc	r27, r27
    1a10:	88 0f       	add	r24, r24
    1a12:	99 1f       	adc	r25, r25
    1a14:	aa 1f       	adc	r26, r26
    1a16:	bb 1f       	adc	r27, r27
    1a18:	8c 01       	movw	r16, r24
    1a1a:	9d 01       	movw	r18, r26
    1a1c:	00 0f       	add	r16, r16
    1a1e:	11 1f       	adc	r17, r17
    1a20:	22 1f       	adc	r18, r18
    1a22:	33 1f       	adc	r19, r19
    1a24:	00 0f       	add	r16, r16
    1a26:	11 1f       	adc	r17, r17
    1a28:	22 1f       	adc	r18, r18
    1a2a:	33 1f       	adc	r19, r19
    1a2c:	80 0f       	add	r24, r16
    1a2e:	91 1f       	adc	r25, r17
    1a30:	a2 1f       	adc	r26, r18
    1a32:	b3 1f       	adc	r27, r19
    1a34:	84 0f       	add	r24, r20
    1a36:	95 1f       	adc	r25, r21
    1a38:	a6 1f       	adc	r26, r22
    1a3a:	b7 1f       	adc	r27, r23
    1a3c:	80 93 97 04 	sts	0x0497, r24
    1a40:	90 93 98 04 	sts	0x0498, r25
    1a44:	a0 93 99 04 	sts	0x0499, r26
    1a48:	b0 93 9a 04 	sts	0x049A, r27
				//char msg[50];
				//sprintf(msg, "%lu   ", distP);
				//BTTransmitStr(msg);
				distP2 = DISTANTA_PARCURSA + 100;
    1a4c:	40 91 40 04 	lds	r20, 0x0440
    1a50:	50 91 41 04 	lds	r21, 0x0441
    1a54:	60 91 42 04 	lds	r22, 0x0442
    1a58:	70 91 43 04 	lds	r23, 0x0443
    1a5c:	00 91 46 04 	lds	r16, 0x0446
    1a60:	10 91 47 04 	lds	r17, 0x0447
    1a64:	20 91 48 04 	lds	r18, 0x0448
    1a68:	30 91 49 04 	lds	r19, 0x0449
    1a6c:	40 0f       	add	r20, r16
    1a6e:	51 1f       	adc	r21, r17
    1a70:	62 1f       	adc	r22, r18
    1a72:	73 1f       	adc	r23, r19
    1a74:	76 95       	lsr	r23
    1a76:	67 95       	ror	r22
    1a78:	57 95       	ror	r21
    1a7a:	47 95       	ror	r20
    1a7c:	76 95       	lsr	r23
    1a7e:	67 95       	ror	r22
    1a80:	57 95       	ror	r21
    1a82:	47 95       	ror	r20
    1a84:	8a 01       	movw	r16, r20
    1a86:	9b 01       	movw	r18, r22
    1a88:	00 0f       	add	r16, r16
    1a8a:	11 1f       	adc	r17, r17
    1a8c:	22 1f       	adc	r18, r18
    1a8e:	33 1f       	adc	r19, r19
    1a90:	00 0f       	add	r16, r16
    1a92:	11 1f       	adc	r17, r17
    1a94:	22 1f       	adc	r18, r18
    1a96:	33 1f       	adc	r19, r19
    1a98:	48 01       	movw	r8, r16
    1a9a:	59 01       	movw	r10, r18
    1a9c:	88 0c       	add	r8, r8
    1a9e:	99 1c       	adc	r9, r9
    1aa0:	aa 1c       	adc	r10, r10
    1aa2:	bb 1c       	adc	r11, r11
    1aa4:	88 0c       	add	r8, r8
    1aa6:	99 1c       	adc	r9, r9
    1aa8:	aa 1c       	adc	r10, r10
    1aaa:	bb 1c       	adc	r11, r11
    1aac:	08 0d       	add	r16, r8
    1aae:	19 1d       	adc	r17, r9
    1ab0:	2a 1d       	adc	r18, r10
    1ab2:	3b 1d       	adc	r19, r11
    1ab4:	40 0f       	add	r20, r16
    1ab6:	51 1f       	adc	r21, r17
    1ab8:	62 1f       	adc	r22, r18
    1aba:	73 1f       	adc	r23, r19
    1abc:	4c 59       	subi	r20, 0x9C	; 156
    1abe:	5f 4f       	sbci	r21, 0xFF	; 255
    1ac0:	6f 4f       	sbci	r22, 0xFF	; 255
    1ac2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ac4:	40 93 9c 04 	sts	0x049C, r20
    1ac8:	50 93 9d 04 	sts	0x049D, r21
    1acc:	60 93 9e 04 	sts	0x049E, r22
    1ad0:	70 93 9f 04 	sts	0x049F, r23
				
				sprintf(msg, "stare->2  distP=%lu", distP);
    1ad4:	bf 93       	push	r27
    1ad6:	af 93       	push	r26
    1ad8:	9f 93       	push	r25
    1ada:	8f 93       	push	r24
    1adc:	88 e9       	ldi	r24, 0x98	; 152
    1ade:	92 e0       	ldi	r25, 0x02	; 2
    1ae0:	9f 93       	push	r25
    1ae2:	8f 93       	push	r24
    1ae4:	8e 01       	movw	r16, r28
    1ae6:	0f 5f       	subi	r16, 0xFF	; 255
    1ae8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aea:	1f 93       	push	r17
    1aec:	0f 93       	push	r16
    1aee:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
				BTTransmitStr(msg);
    1af2:	c8 01       	movw	r24, r16
    1af4:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    1af8:	0f b6       	in	r0, 0x3f	; 63
    1afa:	f8 94       	cli
    1afc:	de bf       	out	0x3e, r29	; 62
    1afe:	0f be       	out	0x3f, r0	; 63
    1b00:	cd bf       	out	0x3d, r28	; 61
				
			}
			lastVFP1 = sideRight;
    1b02:	c0 92 a3 04 	sts	0x04A3, r12
    1b06:	d0 92 a4 04 	sts	0x04A4, r13
    1b0a:	e0 92 a5 04 	sts	0x04A5, r14
    1b0e:	f0 92 a6 04 	sts	0x04A6, r15
		break;
    1b12:	f7 c1       	rjmp	.+1006   	; 0x1f02 <findPlaces1+0x5e6>
		case 2:
			if(DISTANTA_PARCURSA > distP2){
    1b14:	80 91 40 04 	lds	r24, 0x0440
    1b18:	90 91 41 04 	lds	r25, 0x0441
    1b1c:	a0 91 42 04 	lds	r26, 0x0442
    1b20:	b0 91 43 04 	lds	r27, 0x0443
    1b24:	40 91 46 04 	lds	r20, 0x0446
    1b28:	50 91 47 04 	lds	r21, 0x0447
    1b2c:	60 91 48 04 	lds	r22, 0x0448
    1b30:	70 91 49 04 	lds	r23, 0x0449
    1b34:	84 0f       	add	r24, r20
    1b36:	95 1f       	adc	r25, r21
    1b38:	a6 1f       	adc	r26, r22
    1b3a:	b7 1f       	adc	r27, r23
    1b3c:	b6 95       	lsr	r27
    1b3e:	a7 95       	ror	r26
    1b40:	97 95       	ror	r25
    1b42:	87 95       	ror	r24
    1b44:	b6 95       	lsr	r27
    1b46:	a7 95       	ror	r26
    1b48:	97 95       	ror	r25
    1b4a:	87 95       	ror	r24
    1b4c:	ac 01       	movw	r20, r24
    1b4e:	bd 01       	movw	r22, r26
    1b50:	44 0f       	add	r20, r20
    1b52:	55 1f       	adc	r21, r21
    1b54:	66 1f       	adc	r22, r22
    1b56:	77 1f       	adc	r23, r23
    1b58:	44 0f       	add	r20, r20
    1b5a:	55 1f       	adc	r21, r21
    1b5c:	66 1f       	adc	r22, r22
    1b5e:	77 1f       	adc	r23, r23
    1b60:	8a 01       	movw	r16, r20
    1b62:	9b 01       	movw	r18, r22
    1b64:	00 0f       	add	r16, r16
    1b66:	11 1f       	adc	r17, r17
    1b68:	22 1f       	adc	r18, r18
    1b6a:	33 1f       	adc	r19, r19
    1b6c:	00 0f       	add	r16, r16
    1b6e:	11 1f       	adc	r17, r17
    1b70:	22 1f       	adc	r18, r18
    1b72:	33 1f       	adc	r19, r19
    1b74:	40 0f       	add	r20, r16
    1b76:	51 1f       	adc	r21, r17
    1b78:	62 1f       	adc	r22, r18
    1b7a:	73 1f       	adc	r23, r19
    1b7c:	84 0f       	add	r24, r20
    1b7e:	95 1f       	adc	r25, r21
    1b80:	a6 1f       	adc	r26, r22
    1b82:	b7 1f       	adc	r27, r23
    1b84:	00 91 9c 04 	lds	r16, 0x049C
    1b88:	10 91 9d 04 	lds	r17, 0x049D
    1b8c:	20 91 9e 04 	lds	r18, 0x049E
    1b90:	30 91 9f 04 	lds	r19, 0x049F
    1b94:	08 17       	cp	r16, r24
    1b96:	19 07       	cpc	r17, r25
    1b98:	2a 07       	cpc	r18, r26
    1b9a:	3b 07       	cpc	r19, r27
    1b9c:	08 f0       	brcs	.+2      	; 0x1ba0 <findPlaces1+0x284>
    1b9e:	b1 c1       	rjmp	.+866    	; 0x1f02 <findPlaces1+0x5e6>
				stareFP1= 3;
    1ba0:	83 e0       	ldi	r24, 0x03	; 3
    1ba2:	80 93 9b 04 	sts	0x049B, r24
				lastVFP1 = sideRight;				
    1ba6:	c0 92 a3 04 	sts	0x04A3, r12
    1baa:	d0 92 a4 04 	sts	0x04A4, r13
    1bae:	e0 92 a5 04 	sts	0x04A5, r14
    1bb2:	f0 92 a6 04 	sts	0x04A6, r15
				sprintf(msg, "stare->3  DP=%lu", DISTANTA_PARCURSA);
    1bb6:	80 91 40 04 	lds	r24, 0x0440
    1bba:	90 91 41 04 	lds	r25, 0x0441
    1bbe:	a0 91 42 04 	lds	r26, 0x0442
    1bc2:	b0 91 43 04 	lds	r27, 0x0443
    1bc6:	40 91 46 04 	lds	r20, 0x0446
    1bca:	50 91 47 04 	lds	r21, 0x0447
    1bce:	60 91 48 04 	lds	r22, 0x0448
    1bd2:	70 91 49 04 	lds	r23, 0x0449
    1bd6:	48 0f       	add	r20, r24
    1bd8:	59 1f       	adc	r21, r25
    1bda:	6a 1f       	adc	r22, r26
    1bdc:	7b 1f       	adc	r23, r27
    1bde:	76 95       	lsr	r23
    1be0:	67 95       	ror	r22
    1be2:	57 95       	ror	r21
    1be4:	47 95       	ror	r20
    1be6:	76 95       	lsr	r23
    1be8:	67 95       	ror	r22
    1bea:	57 95       	ror	r21
    1bec:	47 95       	ror	r20
    1bee:	db 01       	movw	r26, r22
    1bf0:	ca 01       	movw	r24, r20
    1bf2:	88 0f       	add	r24, r24
    1bf4:	99 1f       	adc	r25, r25
    1bf6:	aa 1f       	adc	r26, r26
    1bf8:	bb 1f       	adc	r27, r27
    1bfa:	88 0f       	add	r24, r24
    1bfc:	99 1f       	adc	r25, r25
    1bfe:	aa 1f       	adc	r26, r26
    1c00:	bb 1f       	adc	r27, r27
    1c02:	8c 01       	movw	r16, r24
    1c04:	9d 01       	movw	r18, r26
    1c06:	00 0f       	add	r16, r16
    1c08:	11 1f       	adc	r17, r17
    1c0a:	22 1f       	adc	r18, r18
    1c0c:	33 1f       	adc	r19, r19
    1c0e:	00 0f       	add	r16, r16
    1c10:	11 1f       	adc	r17, r17
    1c12:	22 1f       	adc	r18, r18
    1c14:	33 1f       	adc	r19, r19
    1c16:	80 0f       	add	r24, r16
    1c18:	91 1f       	adc	r25, r17
    1c1a:	a2 1f       	adc	r26, r18
    1c1c:	b3 1f       	adc	r27, r19
    1c1e:	84 0f       	add	r24, r20
    1c20:	95 1f       	adc	r25, r21
    1c22:	a6 1f       	adc	r26, r22
    1c24:	b7 1f       	adc	r27, r23
    1c26:	bf 93       	push	r27
    1c28:	af 93       	push	r26
    1c2a:	9f 93       	push	r25
    1c2c:	8f 93       	push	r24
    1c2e:	8c ea       	ldi	r24, 0xAC	; 172
    1c30:	92 e0       	ldi	r25, 0x02	; 2
    1c32:	9f 93       	push	r25
    1c34:	8f 93       	push	r24
    1c36:	8e 01       	movw	r16, r28
    1c38:	0f 5f       	subi	r16, 0xFF	; 255
    1c3a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c3c:	1f 93       	push	r17
    1c3e:	0f 93       	push	r16
    1c40:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
				BTTransmitStr(msg);
    1c44:	c8 01       	movw	r24, r16
    1c46:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    1c4a:	0f b6       	in	r0, 0x3f	; 63
    1c4c:	f8 94       	cli
    1c4e:	de bf       	out	0x3e, r29	; 62
    1c50:	0f be       	out	0x3f, r0	; 63
    1c52:	cd bf       	out	0x3d, r28	; 61
    1c54:	56 c1       	rjmp	.+684    	; 0x1f02 <findPlaces1+0x5e6>
			}
		break;
		case 3:
			if(sideRight > lastVFP1 + 100){
    1c56:	80 91 a3 04 	lds	r24, 0x04A3
    1c5a:	90 91 a4 04 	lds	r25, 0x04A4
    1c5e:	a0 91 a5 04 	lds	r26, 0x04A5
    1c62:	b0 91 a6 04 	lds	r27, 0x04A6
    1c66:	8c 59       	subi	r24, 0x9C	; 156
    1c68:	9f 4f       	sbci	r25, 0xFF	; 255
    1c6a:	af 4f       	sbci	r26, 0xFF	; 255
    1c6c:	bf 4f       	sbci	r27, 0xFF	; 255
    1c6e:	8c 15       	cp	r24, r12
    1c70:	9d 05       	cpc	r25, r13
    1c72:	ae 05       	cpc	r26, r14
    1c74:	bf 05       	cpc	r27, r15
    1c76:	08 f0       	brcs	.+2      	; 0x1c7a <findPlaces1+0x35e>
    1c78:	ee c0       	rjmp	.+476    	; 0x1e56 <findPlaces1+0x53a>
				//stopEngines();
				distP = (DISTANTA_PARCURSA - distP)/2 + DISTANTA_PARCURSA;
    1c7a:	40 91 40 04 	lds	r20, 0x0440
    1c7e:	50 91 41 04 	lds	r21, 0x0441
    1c82:	60 91 42 04 	lds	r22, 0x0442
    1c86:	70 91 43 04 	lds	r23, 0x0443
    1c8a:	00 91 46 04 	lds	r16, 0x0446
    1c8e:	10 91 47 04 	lds	r17, 0x0447
    1c92:	20 91 48 04 	lds	r18, 0x0448
    1c96:	30 91 49 04 	lds	r19, 0x0449
    1c9a:	80 90 40 04 	lds	r8, 0x0440
    1c9e:	90 90 41 04 	lds	r9, 0x0441
    1ca2:	a0 90 42 04 	lds	r10, 0x0442
    1ca6:	b0 90 43 04 	lds	r11, 0x0443
    1caa:	80 91 46 04 	lds	r24, 0x0446
    1cae:	90 91 47 04 	lds	r25, 0x0447
    1cb2:	a0 91 48 04 	lds	r26, 0x0448
    1cb6:	b0 91 49 04 	lds	r27, 0x0449
    1cba:	04 0f       	add	r16, r20
    1cbc:	15 1f       	adc	r17, r21
    1cbe:	26 1f       	adc	r18, r22
    1cc0:	37 1f       	adc	r19, r23
    1cc2:	36 95       	lsr	r19
    1cc4:	27 95       	ror	r18
    1cc6:	17 95       	ror	r17
    1cc8:	07 95       	ror	r16
    1cca:	36 95       	lsr	r19
    1ccc:	27 95       	ror	r18
    1cce:	17 95       	ror	r17
    1cd0:	07 95       	ror	r16
    1cd2:	b9 01       	movw	r22, r18
    1cd4:	a8 01       	movw	r20, r16
    1cd6:	44 0f       	add	r20, r20
    1cd8:	55 1f       	adc	r21, r21
    1cda:	66 1f       	adc	r22, r22
    1cdc:	77 1f       	adc	r23, r23
    1cde:	44 0f       	add	r20, r20
    1ce0:	55 1f       	adc	r21, r21
    1ce2:	66 1f       	adc	r22, r22
    1ce4:	77 1f       	adc	r23, r23
    1ce6:	2a 01       	movw	r4, r20
    1ce8:	3b 01       	movw	r6, r22
    1cea:	44 0c       	add	r4, r4
    1cec:	55 1c       	adc	r5, r5
    1cee:	66 1c       	adc	r6, r6
    1cf0:	77 1c       	adc	r7, r7
    1cf2:	44 0c       	add	r4, r4
    1cf4:	55 1c       	adc	r5, r5
    1cf6:	66 1c       	adc	r6, r6
    1cf8:	77 1c       	adc	r7, r7
    1cfa:	44 0d       	add	r20, r4
    1cfc:	55 1d       	adc	r21, r5
    1cfe:	66 1d       	adc	r22, r6
    1d00:	77 1d       	adc	r23, r7
    1d02:	04 0f       	add	r16, r20
    1d04:	15 1f       	adc	r17, r21
    1d06:	26 1f       	adc	r18, r22
    1d08:	37 1f       	adc	r19, r23
    1d0a:	40 90 97 04 	lds	r4, 0x0497
    1d0e:	50 90 98 04 	lds	r5, 0x0498
    1d12:	60 90 99 04 	lds	r6, 0x0499
    1d16:	70 90 9a 04 	lds	r7, 0x049A
    1d1a:	04 19       	sub	r16, r4
    1d1c:	15 09       	sbc	r17, r5
    1d1e:	26 09       	sbc	r18, r6
    1d20:	37 09       	sbc	r19, r7
    1d22:	36 95       	lsr	r19
    1d24:	27 95       	ror	r18
    1d26:	17 95       	ror	r17
    1d28:	07 95       	ror	r16
    1d2a:	88 0d       	add	r24, r8
    1d2c:	99 1d       	adc	r25, r9
    1d2e:	aa 1d       	adc	r26, r10
    1d30:	bb 1d       	adc	r27, r11
    1d32:	b6 95       	lsr	r27
    1d34:	a7 95       	ror	r26
    1d36:	97 95       	ror	r25
    1d38:	87 95       	ror	r24
    1d3a:	b6 95       	lsr	r27
    1d3c:	a7 95       	ror	r26
    1d3e:	97 95       	ror	r25
    1d40:	87 95       	ror	r24
    1d42:	ac 01       	movw	r20, r24
    1d44:	bd 01       	movw	r22, r26
    1d46:	44 0f       	add	r20, r20
    1d48:	55 1f       	adc	r21, r21
    1d4a:	66 1f       	adc	r22, r22
    1d4c:	77 1f       	adc	r23, r23
    1d4e:	44 0f       	add	r20, r20
    1d50:	55 1f       	adc	r21, r21
    1d52:	66 1f       	adc	r22, r22
    1d54:	77 1f       	adc	r23, r23
    1d56:	4a 01       	movw	r8, r20
    1d58:	5b 01       	movw	r10, r22
    1d5a:	88 0c       	add	r8, r8
    1d5c:	99 1c       	adc	r9, r9
    1d5e:	aa 1c       	adc	r10, r10
    1d60:	bb 1c       	adc	r11, r11
    1d62:	88 0c       	add	r8, r8
    1d64:	99 1c       	adc	r9, r9
    1d66:	aa 1c       	adc	r10, r10
    1d68:	bb 1c       	adc	r11, r11
    1d6a:	48 0d       	add	r20, r8
    1d6c:	59 1d       	adc	r21, r9
    1d6e:	6a 1d       	adc	r22, r10
    1d70:	7b 1d       	adc	r23, r11
    1d72:	84 0f       	add	r24, r20
    1d74:	95 1f       	adc	r25, r21
    1d76:	a6 1f       	adc	r26, r22
    1d78:	b7 1f       	adc	r27, r23
    1d7a:	80 0f       	add	r24, r16
    1d7c:	91 1f       	adc	r25, r17
    1d7e:	a2 1f       	adc	r26, r18
    1d80:	b3 1f       	adc	r27, r19
    1d82:	80 93 97 04 	sts	0x0497, r24
    1d86:	90 93 98 04 	sts	0x0498, r25
    1d8a:	a0 93 99 04 	sts	0x0499, r26
    1d8e:	b0 93 9a 04 	sts	0x049A, r27
				stareFP1 = 4;
    1d92:	84 e0       	ldi	r24, 0x04	; 4
    1d94:	80 93 9b 04 	sts	0x049B, r24
				goBack(60, 40);
    1d98:	68 e2       	ldi	r22, 0x28	; 40
    1d9a:	8c e3       	ldi	r24, 0x3C	; 60
    1d9c:	0e 94 7f 05 	call	0xafe	; 0xafe <goBack>
				sprintf(msg, "stare->4 distP=%lu DP=%lu", distP, DISTANTA_PARCURSA);
    1da0:	80 91 40 04 	lds	r24, 0x0440
    1da4:	90 91 41 04 	lds	r25, 0x0441
    1da8:	a0 91 42 04 	lds	r26, 0x0442
    1dac:	b0 91 43 04 	lds	r27, 0x0443
    1db0:	40 91 46 04 	lds	r20, 0x0446
    1db4:	50 91 47 04 	lds	r21, 0x0447
    1db8:	60 91 48 04 	lds	r22, 0x0448
    1dbc:	70 91 49 04 	lds	r23, 0x0449
    1dc0:	48 0f       	add	r20, r24
    1dc2:	59 1f       	adc	r21, r25
    1dc4:	6a 1f       	adc	r22, r26
    1dc6:	7b 1f       	adc	r23, r27
    1dc8:	76 95       	lsr	r23
    1dca:	67 95       	ror	r22
    1dcc:	57 95       	ror	r21
    1dce:	47 95       	ror	r20
    1dd0:	76 95       	lsr	r23
    1dd2:	67 95       	ror	r22
    1dd4:	57 95       	ror	r21
    1dd6:	47 95       	ror	r20
    1dd8:	db 01       	movw	r26, r22
    1dda:	ca 01       	movw	r24, r20
    1ddc:	88 0f       	add	r24, r24
    1dde:	99 1f       	adc	r25, r25
    1de0:	aa 1f       	adc	r26, r26
    1de2:	bb 1f       	adc	r27, r27
    1de4:	88 0f       	add	r24, r24
    1de6:	99 1f       	adc	r25, r25
    1de8:	aa 1f       	adc	r26, r26
    1dea:	bb 1f       	adc	r27, r27
    1dec:	8c 01       	movw	r16, r24
    1dee:	9d 01       	movw	r18, r26
    1df0:	00 0f       	add	r16, r16
    1df2:	11 1f       	adc	r17, r17
    1df4:	22 1f       	adc	r18, r18
    1df6:	33 1f       	adc	r19, r19
    1df8:	00 0f       	add	r16, r16
    1dfa:	11 1f       	adc	r17, r17
    1dfc:	22 1f       	adc	r18, r18
    1dfe:	33 1f       	adc	r19, r19
    1e00:	80 0f       	add	r24, r16
    1e02:	91 1f       	adc	r25, r17
    1e04:	a2 1f       	adc	r26, r18
    1e06:	b3 1f       	adc	r27, r19
    1e08:	84 0f       	add	r24, r20
    1e0a:	95 1f       	adc	r25, r21
    1e0c:	a6 1f       	adc	r26, r22
    1e0e:	b7 1f       	adc	r27, r23
    1e10:	bf 93       	push	r27
    1e12:	af 93       	push	r26
    1e14:	9f 93       	push	r25
    1e16:	8f 93       	push	r24
    1e18:	80 91 9a 04 	lds	r24, 0x049A
    1e1c:	8f 93       	push	r24
    1e1e:	80 91 99 04 	lds	r24, 0x0499
    1e22:	8f 93       	push	r24
    1e24:	80 91 98 04 	lds	r24, 0x0498
    1e28:	8f 93       	push	r24
    1e2a:	80 91 97 04 	lds	r24, 0x0497
    1e2e:	8f 93       	push	r24
    1e30:	8d eb       	ldi	r24, 0xBD	; 189
    1e32:	92 e0       	ldi	r25, 0x02	; 2
    1e34:	9f 93       	push	r25
    1e36:	8f 93       	push	r24
    1e38:	8e 01       	movw	r16, r28
    1e3a:	0f 5f       	subi	r16, 0xFF	; 255
    1e3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1e3e:	1f 93       	push	r17
    1e40:	0f 93       	push	r16
    1e42:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
				BTTransmitStr(msg);
    1e46:	c8 01       	movw	r24, r16
    1e48:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    1e4c:	0f b6       	in	r0, 0x3f	; 63
    1e4e:	f8 94       	cli
    1e50:	de bf       	out	0x3e, r29	; 62
    1e52:	0f be       	out	0x3f, r0	; 63
    1e54:	cd bf       	out	0x3d, r28	; 61
				
			}
			lastVFP1 = sideRight;
    1e56:	c0 92 a3 04 	sts	0x04A3, r12
    1e5a:	d0 92 a4 04 	sts	0x04A4, r13
    1e5e:	e0 92 a5 04 	sts	0x04A5, r14
    1e62:	f0 92 a6 04 	sts	0x04A6, r15
		break;
    1e66:	4d c0       	rjmp	.+154    	; 0x1f02 <findPlaces1+0x5e6>
		case 4:
			if(DISTANTA_PARCURSA > distP){
    1e68:	80 91 40 04 	lds	r24, 0x0440
    1e6c:	90 91 41 04 	lds	r25, 0x0441
    1e70:	a0 91 42 04 	lds	r26, 0x0442
    1e74:	b0 91 43 04 	lds	r27, 0x0443
    1e78:	40 91 46 04 	lds	r20, 0x0446
    1e7c:	50 91 47 04 	lds	r21, 0x0447
    1e80:	60 91 48 04 	lds	r22, 0x0448
    1e84:	70 91 49 04 	lds	r23, 0x0449
    1e88:	84 0f       	add	r24, r20
    1e8a:	95 1f       	adc	r25, r21
    1e8c:	a6 1f       	adc	r26, r22
    1e8e:	b7 1f       	adc	r27, r23
    1e90:	b6 95       	lsr	r27
    1e92:	a7 95       	ror	r26
    1e94:	97 95       	ror	r25
    1e96:	87 95       	ror	r24
    1e98:	b6 95       	lsr	r27
    1e9a:	a7 95       	ror	r26
    1e9c:	97 95       	ror	r25
    1e9e:	87 95       	ror	r24
    1ea0:	ac 01       	movw	r20, r24
    1ea2:	bd 01       	movw	r22, r26
    1ea4:	44 0f       	add	r20, r20
    1ea6:	55 1f       	adc	r21, r21
    1ea8:	66 1f       	adc	r22, r22
    1eaa:	77 1f       	adc	r23, r23
    1eac:	44 0f       	add	r20, r20
    1eae:	55 1f       	adc	r21, r21
    1eb0:	66 1f       	adc	r22, r22
    1eb2:	77 1f       	adc	r23, r23
    1eb4:	6a 01       	movw	r12, r20
    1eb6:	7b 01       	movw	r14, r22
    1eb8:	cc 0c       	add	r12, r12
    1eba:	dd 1c       	adc	r13, r13
    1ebc:	ee 1c       	adc	r14, r14
    1ebe:	ff 1c       	adc	r15, r15
    1ec0:	cc 0c       	add	r12, r12
    1ec2:	dd 1c       	adc	r13, r13
    1ec4:	ee 1c       	adc	r14, r14
    1ec6:	ff 1c       	adc	r15, r15
    1ec8:	4c 0d       	add	r20, r12
    1eca:	5d 1d       	adc	r21, r13
    1ecc:	6e 1d       	adc	r22, r14
    1ece:	7f 1d       	adc	r23, r15
    1ed0:	84 0f       	add	r24, r20
    1ed2:	95 1f       	adc	r25, r21
    1ed4:	a6 1f       	adc	r26, r22
    1ed6:	b7 1f       	adc	r27, r23
    1ed8:	c0 90 97 04 	lds	r12, 0x0497
    1edc:	d0 90 98 04 	lds	r13, 0x0498
    1ee0:	e0 90 99 04 	lds	r14, 0x0499
    1ee4:	f0 90 9a 04 	lds	r15, 0x049A
    1ee8:	c8 16       	cp	r12, r24
    1eea:	d9 06       	cpc	r13, r25
    1eec:	ea 06       	cpc	r14, r26
    1eee:	fb 06       	cpc	r15, r27
    1ef0:	40 f4       	brcc	.+16     	; 0x1f02 <findPlaces1+0x5e6>
				stopEngines();
    1ef2:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
				stareFP1 = 5;
    1ef6:	85 e0       	ldi	r24, 0x05	; 5
    1ef8:	80 93 9b 04 	sts	0x049B, r24
    1efc:	02 c0       	rjmp	.+4      	; 0x1f02 <findPlaces1+0x5e6>
			}		
		break;
		case 5:
			if(locLiberSMF()==YES)				
    1efe:	0e 94 b6 0a 	call	0x156c	; 0x156c <locLiberSMF>
		break;
	}
	return NO;
}
    1f02:	80 e0       	ldi	r24, 0x00	; 0
    1f04:	cc 59       	subi	r28, 0x9C	; 156
    1f06:	df 4f       	sbci	r29, 0xFF	; 255
    1f08:	0f b6       	in	r0, 0x3f	; 63
    1f0a:	f8 94       	cli
    1f0c:	de bf       	out	0x3e, r29	; 62
    1f0e:	0f be       	out	0x3f, r0	; 63
    1f10:	cd bf       	out	0x3d, r28	; 61
    1f12:	df 91       	pop	r29
    1f14:	cf 91       	pop	r28
    1f16:	1f 91       	pop	r17
    1f18:	0f 91       	pop	r16
    1f1a:	ff 90       	pop	r15
    1f1c:	ef 90       	pop	r14
    1f1e:	df 90       	pop	r13
    1f20:	cf 90       	pop	r12
    1f22:	bf 90       	pop	r11
    1f24:	af 90       	pop	r10
    1f26:	9f 90       	pop	r9
    1f28:	8f 90       	pop	r8
    1f2a:	7f 90       	pop	r7
    1f2c:	6f 90       	pop	r6
    1f2e:	5f 90       	pop	r5
    1f30:	4f 90       	pop	r4
    1f32:	08 95       	ret

00001f34 <initFindPlaces1>:
	return NO;

}

void initFindPlaces1(){
	stareFP1 = 0;
    1f34:	10 92 9b 04 	sts	0x049B, r1
	lastVFP1=0;
    1f38:	10 92 a3 04 	sts	0x04A3, r1
    1f3c:	10 92 a4 04 	sts	0x04A4, r1
    1f40:	10 92 a5 04 	sts	0x04A5, r1
    1f44:	10 92 a6 04 	sts	0x04A6, r1
	distP=0;
    1f48:	10 92 97 04 	sts	0x0497, r1
    1f4c:	10 92 98 04 	sts	0x0498, r1
    1f50:	10 92 99 04 	sts	0x0499, r1
    1f54:	10 92 9a 04 	sts	0x049A, r1
	distP2=0;
    1f58:	10 92 9c 04 	sts	0x049C, r1
    1f5c:	10 92 9d 04 	sts	0x049D, r1
    1f60:	10 92 9e 04 	sts	0x049E, r1
    1f64:	10 92 9f 04 	sts	0x049F, r1
	addEntryIfNotExists(&findPlaces1, 150 * 1000UL, Periodic);
    1f68:	21 e0       	ldi	r18, 0x01	; 1
    1f6a:	40 ef       	ldi	r20, 0xF0	; 240
    1f6c:	59 e4       	ldi	r21, 0x49	; 73
    1f6e:	62 e0       	ldi	r22, 0x02	; 2
    1f70:	70 e0       	ldi	r23, 0x00	; 0
    1f72:	8e e8       	ldi	r24, 0x8E	; 142
    1f74:	9c e0       	ldi	r25, 0x0C	; 12
    1f76:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
    1f7a:	08 95       	ret

00001f7c <main>:
    1f7c:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <initBTProtocol>
    1f80:	0e 94 86 10 	call	0x210c	; 0x210c <initTiming>
    1f84:	0e 94 03 05 	call	0xa06	; 0xa06 <initEngines>
    1f88:	0e 94 a6 07 	call	0xf4c	; 0xf4c <initLights>
    1f8c:	0e 94 4b 09 	call	0x1296	; 0x1296 <initSensors>
    1f90:	0e 94 b9 04 	call	0x972	; 0x972 <initEncoders>
    1f94:	78 94       	sei
    1f96:	81 e0       	ldi	r24, 0x01	; 1
    1f98:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <setDebugging>
    1f9c:	81 e0       	ldi	r24, 0x01	; 1
    1f9e:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <setReadingSensors>
    1fa2:	81 e0       	ldi	r24, 0x01	; 1
    1fa4:	93 e0       	ldi	r25, 0x03	; 3
    1fa6:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    1faa:	0e 94 bb 02 	call	0x576	; 0x576 <sendCarStartedSignal>
    1fae:	0e 94 32 13 	call	0x2664	; 0x2664 <checkTimeQueue>
    1fb2:	fd cf       	rjmp	.-6      	; 0x1fae <main+0x32>

00001fb4 <setDebugging>:
    1fb4:	20 91 28 04 	lds	r18, 0x0428
    1fb8:	90 91 28 04 	lds	r25, 0x0428
    1fbc:	82 27       	eor	r24, r18
    1fbe:	28 2f       	mov	r18, r24
    1fc0:	21 70       	andi	r18, 0x01	; 1
    1fc2:	92 27       	eor	r25, r18
    1fc4:	90 93 28 04 	sts	0x0428, r25
    1fc8:	08 95       	ret

00001fca <setReadingSensors>:
    1fca:	30 91 28 04 	lds	r19, 0x0428
    1fce:	20 91 28 04 	lds	r18, 0x0428
    1fd2:	98 2f       	mov	r25, r24
    1fd4:	91 70       	andi	r25, 0x01	; 1
    1fd6:	91 95       	neg	r25
    1fd8:	93 27       	eor	r25, r19
    1fda:	92 70       	andi	r25, 0x02	; 2
    1fdc:	92 27       	eor	r25, r18
    1fde:	90 93 28 04 	sts	0x0428, r25
    1fe2:	0e 94 cf 08 	call	0x119e	; 0x119e <setSensorsRead>
    1fe6:	08 95       	ret

00001fe8 <setSendingInfos>:
    1fe8:	30 91 28 04 	lds	r19, 0x0428
    1fec:	20 91 28 04 	lds	r18, 0x0428
    1ff0:	98 2f       	mov	r25, r24
    1ff2:	91 70       	andi	r25, 0x01	; 1
    1ff4:	91 95       	neg	r25
    1ff6:	93 27       	eor	r25, r19
    1ff8:	94 70       	andi	r25, 0x04	; 4
    1ffa:	92 27       	eor	r25, r18
    1ffc:	90 93 28 04 	sts	0x0428, r25
    2000:	0e 94 cb 04 	call	0x996	; 0x996 <setSendingDistAndTime>
    2004:	08 95       	ret

00002006 <setSendingSensors>:
    2006:	30 91 28 04 	lds	r19, 0x0428
    200a:	20 91 28 04 	lds	r18, 0x0428
    200e:	98 2f       	mov	r25, r24
    2010:	91 70       	andi	r25, 0x01	; 1
    2012:	91 95       	neg	r25
    2014:	93 27       	eor	r25, r19
    2016:	98 70       	andi	r25, 0x08	; 8
    2018:	92 27       	eor	r25, r18
    201a:	90 93 28 04 	sts	0x0428, r25
    201e:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <setSensorsSend>
    2022:	08 95       	ret

00002024 <toggleDebuggingOff>:
    2024:	81 11       	cpse	r24, r1
    2026:	11 c0       	rjmp	.+34     	; 0x204a <toggleDebuggingOff+0x26>
    2028:	80 91 28 04 	lds	r24, 0x0428
    202c:	80 ff       	sbrs	r24, 0
    202e:	1c c0       	rjmp	.+56     	; 0x2068 <toggleDebuggingOff+0x44>
    2030:	80 e0       	ldi	r24, 0x00	; 0
    2032:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <setDebugging>
    2036:	80 91 28 04 	lds	r24, 0x0428
    203a:	90 91 28 04 	lds	r25, 0x0428
    203e:	80 95       	com	r24
    2040:	80 71       	andi	r24, 0x10	; 16
    2042:	89 27       	eor	r24, r25
    2044:	80 93 28 04 	sts	0x0428, r24
    2048:	08 95       	ret
    204a:	80 91 28 04 	lds	r24, 0x0428
    204e:	84 ff       	sbrs	r24, 4
    2050:	0b c0       	rjmp	.+22     	; 0x2068 <toggleDebuggingOff+0x44>
    2052:	81 e0       	ldi	r24, 0x01	; 1
    2054:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <setDebugging>
    2058:	80 91 28 04 	lds	r24, 0x0428
    205c:	90 91 28 04 	lds	r25, 0x0428
    2060:	80 71       	andi	r24, 0x10	; 16
    2062:	89 27       	eor	r24, r25
    2064:	80 93 28 04 	sts	0x0428, r24
    2068:	08 95       	ret

0000206a <getSettings>:
    206a:	cf 93       	push	r28
    206c:	df 93       	push	r29
    206e:	00 d0       	rcall	.+0      	; 0x2070 <getSettings+0x6>
    2070:	00 d0       	rcall	.+0      	; 0x2072 <getSettings+0x8>
    2072:	00 d0       	rcall	.+0      	; 0x2074 <getSettings+0xa>
    2074:	cd b7       	in	r28, 0x3d	; 61
    2076:	de b7       	in	r29, 0x3e	; 62
    2078:	8a ea       	ldi	r24, 0xAA	; 170
    207a:	89 83       	std	Y+1, r24	; 0x01
    207c:	84 e1       	ldi	r24, 0x14	; 20
    207e:	8a 83       	std	Y+2, r24	; 0x02
    2080:	81 e0       	ldi	r24, 0x01	; 1
    2082:	8b 83       	std	Y+3, r24	; 0x03
    2084:	80 91 28 04 	lds	r24, 0x0428
    2088:	8c 83       	std	Y+4, r24	; 0x04
    208a:	85 e5       	ldi	r24, 0x55	; 85
    208c:	8d 83       	std	Y+5, r24	; 0x05
    208e:	65 e0       	ldi	r22, 0x05	; 5
    2090:	ce 01       	movw	r24, r28
    2092:	01 96       	adiw	r24, 0x01	; 1
    2094:	0e 94 a0 02 	call	0x540	; 0x540 <BTTransmitMsgU>
    2098:	26 96       	adiw	r28, 0x06	; 6
    209a:	0f b6       	in	r0, 0x3f	; 63
    209c:	f8 94       	cli
    209e:	de bf       	out	0x3e, r29	; 62
    20a0:	0f be       	out	0x3f, r0	; 63
    20a2:	cd bf       	out	0x3d, r28	; 61
    20a4:	df 91       	pop	r29
    20a6:	cf 91       	pop	r28
    20a8:	08 95       	ret

000020aa <setSettings>:
    20aa:	cf 93       	push	r28
    20ac:	c8 2f       	mov	r28, r24
    20ae:	81 70       	andi	r24, 0x01	; 1
    20b0:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <setDebugging>
    20b4:	c1 fb       	bst	r28, 1
    20b6:	88 27       	eor	r24, r24
    20b8:	80 f9       	bld	r24, 0
    20ba:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <setReadingSensors>
    20be:	c2 fb       	bst	r28, 2
    20c0:	88 27       	eor	r24, r24
    20c2:	80 f9       	bld	r24, 0
    20c4:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <setSendingInfos>
    20c8:	c3 fb       	bst	r28, 3
    20ca:	88 27       	eor	r24, r24
    20cc:	80 f9       	bld	r24, 0
    20ce:	0e 94 03 10 	call	0x2006	; 0x2006 <setSendingSensors>
    20d2:	0e 94 35 10 	call	0x206a	; 0x206a <getSettings>
    20d6:	cf 91       	pop	r28
    20d8:	08 95       	ret

000020da <initTimeQueue>:
    20da:	80 e0       	ldi	r24, 0x00	; 0
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	fc 01       	movw	r30, r24
    20e0:	ee 0f       	add	r30, r30
    20e2:	ff 1f       	adc	r31, r31
    20e4:	9c 01       	movw	r18, r24
    20e6:	22 0f       	add	r18, r18
    20e8:	33 1f       	adc	r19, r19
    20ea:	22 0f       	add	r18, r18
    20ec:	33 1f       	adc	r19, r19
    20ee:	22 0f       	add	r18, r18
    20f0:	33 1f       	adc	r19, r19
    20f2:	e2 0f       	add	r30, r18
    20f4:	f3 1f       	adc	r31, r19
    20f6:	ec 54       	subi	r30, 0x4C	; 76
    20f8:	fb 4f       	sbci	r31, 0xFB	; 251
    20fa:	11 86       	std	Z+9, r1	; 0x09
    20fc:	10 86       	std	Z+8, r1	; 0x08
    20fe:	01 96       	adiw	r24, 0x01	; 1
    2100:	84 31       	cpi	r24, 0x14	; 20
    2102:	91 05       	cpc	r25, r1
    2104:	61 f7       	brne	.-40     	; 0x20de <initTimeQueue+0x4>
    2106:	10 92 86 05 	sts	0x0586, r1
    210a:	08 95       	ret

0000210c <initTiming>:
    210c:	10 92 b0 04 	sts	0x04B0, r1
    2110:	10 92 b1 04 	sts	0x04B1, r1
    2114:	10 92 b2 04 	sts	0x04B2, r1
    2118:	10 92 b3 04 	sts	0x04B3, r1
    211c:	0e 94 6d 10 	call	0x20da	; 0x20da <initTimeQueue>
    2120:	ef e6       	ldi	r30, 0x6F	; 111
    2122:	f0 e0       	ldi	r31, 0x00	; 0
    2124:	80 81       	ld	r24, Z
    2126:	81 60       	ori	r24, 0x01	; 1
    2128:	80 83       	st	Z, r24
    212a:	10 92 85 00 	sts	0x0085, r1
    212e:	10 92 84 00 	sts	0x0084, r1
    2132:	81 e0       	ldi	r24, 0x01	; 1
    2134:	80 93 81 00 	sts	0x0081, r24
    2138:	08 95       	ret

0000213a <addEntryToTimerQueue>:
    213a:	0f 93       	push	r16
    213c:	1f 93       	push	r17
    213e:	cf 93       	push	r28
    2140:	df 93       	push	r29
    2142:	cd b7       	in	r28, 0x3d	; 61
    2144:	de b7       	in	r29, 0x3e	; 62
    2146:	ce 56       	subi	r28, 0x6E	; 110
    2148:	d1 09       	sbc	r29, r1
    214a:	0f b6       	in	r0, 0x3f	; 63
    214c:	f8 94       	cli
    214e:	de bf       	out	0x3e, r29	; 62
    2150:	0f be       	out	0x3f, r0	; 63
    2152:	cd bf       	out	0x3d, r28	; 61
    2154:	f8 94       	cli
    2156:	21 11       	cpse	r18, r1
    2158:	05 c0       	rjmp	.+10     	; 0x2164 <addEntryToTimerQueue+0x2a>
    215a:	b0 e0       	ldi	r27, 0x00	; 0
    215c:	a0 e0       	ldi	r26, 0x00	; 0
    215e:	f0 e0       	ldi	r31, 0x00	; 0
    2160:	e0 e0       	ldi	r30, 0x00	; 0
    2162:	04 c0       	rjmp	.+8      	; 0x216c <addEntryToTimerQueue+0x32>
    2164:	b4 2f       	mov	r27, r20
    2166:	a5 2f       	mov	r26, r21
    2168:	f6 2f       	mov	r31, r22
    216a:	e7 2f       	mov	r30, r23
    216c:	20 91 86 05 	lds	r18, 0x0586
    2170:	30 e0       	ldi	r19, 0x00	; 0
    2172:	49 83       	std	Y+1, r20	; 0x01
    2174:	5a 83       	std	Y+2, r21	; 0x02
    2176:	6b 83       	std	Y+3, r22	; 0x03
    2178:	7c 83       	std	Y+4, r23	; 0x04
    217a:	bd 83       	std	Y+5, r27	; 0x05
    217c:	ae 83       	std	Y+6, r26	; 0x06
    217e:	ff 83       	std	Y+7, r31	; 0x07
    2180:	e8 87       	std	Y+8, r30	; 0x08
    2182:	9a 87       	std	Y+10, r25	; 0x0a
    2184:	89 87       	std	Y+9, r24	; 0x09
    2186:	d9 01       	movw	r26, r18
    2188:	aa 0f       	add	r26, r26
    218a:	bb 1f       	adc	r27, r27
    218c:	22 0f       	add	r18, r18
    218e:	33 1f       	adc	r19, r19
    2190:	22 0f       	add	r18, r18
    2192:	33 1f       	adc	r19, r19
    2194:	22 0f       	add	r18, r18
    2196:	33 1f       	adc	r19, r19
    2198:	a2 0f       	add	r26, r18
    219a:	b3 1f       	adc	r27, r19
    219c:	ac 54       	subi	r26, 0x4C	; 76
    219e:	bb 4f       	sbci	r27, 0xFB	; 251
    21a0:	8a e0       	ldi	r24, 0x0A	; 10
    21a2:	fe 01       	movw	r30, r28
    21a4:	31 96       	adiw	r30, 0x01	; 1
    21a6:	01 90       	ld	r0, Z+
    21a8:	0d 92       	st	X+, r0
    21aa:	8a 95       	dec	r24
    21ac:	e1 f7       	brne	.-8      	; 0x21a6 <addEntryToTimerQueue+0x6c>
    21ae:	80 91 86 05 	lds	r24, 0x0586
    21b2:	8f 5f       	subi	r24, 0xFF	; 255
    21b4:	80 93 86 05 	sts	0x0586, r24
    21b8:	80 91 28 04 	lds	r24, 0x0428
    21bc:	80 ff       	sbrs	r24, 0
    21be:	33 c0       	rjmp	.+102    	; 0x2226 <addEntryToTimerQueue+0xec>
    21c0:	80 91 86 05 	lds	r24, 0x0586
    21c4:	90 e0       	ldi	r25, 0x00	; 0
    21c6:	01 97       	sbiw	r24, 0x01	; 1
    21c8:	fc 01       	movw	r30, r24
    21ca:	ee 0f       	add	r30, r30
    21cc:	ff 1f       	adc	r31, r31
    21ce:	88 0f       	add	r24, r24
    21d0:	99 1f       	adc	r25, r25
    21d2:	88 0f       	add	r24, r24
    21d4:	99 1f       	adc	r25, r25
    21d6:	88 0f       	add	r24, r24
    21d8:	99 1f       	adc	r25, r25
    21da:	e8 0f       	add	r30, r24
    21dc:	f9 1f       	adc	r31, r25
    21de:	ec 54       	subi	r30, 0x4C	; 76
    21e0:	fb 4f       	sbci	r31, 0xFB	; 251
    21e2:	80 81       	ld	r24, Z
    21e4:	91 81       	ldd	r25, Z+1	; 0x01
    21e6:	a2 81       	ldd	r26, Z+2	; 0x02
    21e8:	b3 81       	ldd	r27, Z+3	; 0x03
    21ea:	20 91 86 05 	lds	r18, 0x0586
    21ee:	bf 93       	push	r27
    21f0:	af 93       	push	r26
    21f2:	9f 93       	push	r25
    21f4:	8f 93       	push	r24
    21f6:	82 2f       	mov	r24, r18
    21f8:	90 e0       	ldi	r25, 0x00	; 0
    21fa:	01 97       	sbiw	r24, 0x01	; 1
    21fc:	9f 93       	push	r25
    21fe:	8f 93       	push	r24
    2200:	86 e1       	ldi	r24, 0x16	; 22
    2202:	93 e0       	ldi	r25, 0x03	; 3
    2204:	9f 93       	push	r25
    2206:	8f 93       	push	r24
    2208:	8e 01       	movw	r16, r28
    220a:	05 5f       	subi	r16, 0xF5	; 245
    220c:	1f 4f       	sbci	r17, 0xFF	; 255
    220e:	1f 93       	push	r17
    2210:	0f 93       	push	r16
    2212:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
    2216:	c8 01       	movw	r24, r16
    2218:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    221c:	0f b6       	in	r0, 0x3f	; 63
    221e:	f8 94       	cli
    2220:	de bf       	out	0x3e, r29	; 62
    2222:	0f be       	out	0x3f, r0	; 63
    2224:	cd bf       	out	0x3d, r28	; 61
    2226:	78 94       	sei
    2228:	c2 59       	subi	r28, 0x92	; 146
    222a:	df 4f       	sbci	r29, 0xFF	; 255
    222c:	0f b6       	in	r0, 0x3f	; 63
    222e:	f8 94       	cli
    2230:	de bf       	out	0x3e, r29	; 62
    2232:	0f be       	out	0x3f, r0	; 63
    2234:	cd bf       	out	0x3d, r28	; 61
    2236:	df 91       	pop	r29
    2238:	cf 91       	pop	r28
    223a:	1f 91       	pop	r17
    223c:	0f 91       	pop	r16
    223e:	08 95       	ret

00002240 <existsEntryInTimerQueue>:
    2240:	20 91 86 05 	lds	r18, 0x0586
    2244:	22 23       	and	r18, r18
    2246:	21 f1       	breq	.+72     	; 0x2290 <existsEntryInTimerQueue+0x50>
    2248:	20 91 bc 04 	lds	r18, 0x04BC
    224c:	30 91 bd 04 	lds	r19, 0x04BD
    2250:	28 17       	cp	r18, r24
    2252:	39 07       	cpc	r19, r25
    2254:	f9 f0       	breq	.+62     	; 0x2294 <existsEntryInTimerQueue+0x54>
    2256:	40 e0       	ldi	r20, 0x00	; 0
    2258:	14 c0       	rjmp	.+40     	; 0x2282 <existsEntryInTimerQueue+0x42>
    225a:	24 2f       	mov	r18, r20
    225c:	30 e0       	ldi	r19, 0x00	; 0
    225e:	f9 01       	movw	r30, r18
    2260:	ee 0f       	add	r30, r30
    2262:	ff 1f       	adc	r31, r31
    2264:	22 0f       	add	r18, r18
    2266:	33 1f       	adc	r19, r19
    2268:	22 0f       	add	r18, r18
    226a:	33 1f       	adc	r19, r19
    226c:	22 0f       	add	r18, r18
    226e:	33 1f       	adc	r19, r19
    2270:	e2 0f       	add	r30, r18
    2272:	f3 1f       	adc	r31, r19
    2274:	ec 54       	subi	r30, 0x4C	; 76
    2276:	fb 4f       	sbci	r31, 0xFB	; 251
    2278:	20 85       	ldd	r18, Z+8	; 0x08
    227a:	31 85       	ldd	r19, Z+9	; 0x09
    227c:	28 17       	cp	r18, r24
    227e:	39 07       	cpc	r19, r25
    2280:	59 f0       	breq	.+22     	; 0x2298 <existsEntryInTimerQueue+0x58>
    2282:	4f 5f       	subi	r20, 0xFF	; 255
    2284:	20 91 86 05 	lds	r18, 0x0586
    2288:	42 17       	cp	r20, r18
    228a:	38 f3       	brcs	.-50     	; 0x225a <existsEntryInTimerQueue+0x1a>
    228c:	80 e0       	ldi	r24, 0x00	; 0
    228e:	08 95       	ret
    2290:	80 e0       	ldi	r24, 0x00	; 0
    2292:	08 95       	ret
    2294:	81 e0       	ldi	r24, 0x01	; 1
    2296:	08 95       	ret
    2298:	81 e0       	ldi	r24, 0x01	; 1
    229a:	08 95       	ret

0000229c <addEntryIfNotExists>:
    229c:	0f 93       	push	r16
    229e:	1f 93       	push	r17
    22a0:	cf 93       	push	r28
    22a2:	df 93       	push	r29
    22a4:	c2 2f       	mov	r28, r18
    22a6:	f8 94       	cli
    22a8:	20 91 86 05 	lds	r18, 0x0586
    22ac:	22 23       	and	r18, r18
    22ae:	09 f4       	brne	.+2      	; 0x22b2 <addEntryIfNotExists+0x16>
    22b0:	59 c0       	rjmp	.+178    	; 0x2364 <addEntryIfNotExists+0xc8>
    22b2:	e0 91 bc 04 	lds	r30, 0x04BC
    22b6:	f0 91 bd 04 	lds	r31, 0x04BD
    22ba:	e8 17       	cp	r30, r24
    22bc:	f9 07       	cpc	r31, r25
    22be:	09 f0       	breq	.+2      	; 0x22c2 <addEntryIfNotExists+0x26>
    22c0:	49 c0       	rjmp	.+146    	; 0x2354 <addEntryIfNotExists+0xb8>
    22c2:	18 c0       	rjmp	.+48     	; 0x22f4 <addEntryIfNotExists+0x58>
    22c4:	ed 2f       	mov	r30, r29
    22c6:	f0 e0       	ldi	r31, 0x00	; 0
    22c8:	8f 01       	movw	r16, r30
    22ca:	00 0f       	add	r16, r16
    22cc:	11 1f       	adc	r17, r17
    22ce:	df 01       	movw	r26, r30
    22d0:	aa 0f       	add	r26, r26
    22d2:	bb 1f       	adc	r27, r27
    22d4:	aa 0f       	add	r26, r26
    22d6:	bb 1f       	adc	r27, r27
    22d8:	aa 0f       	add	r26, r26
    22da:	bb 1f       	adc	r27, r27
    22dc:	a0 0f       	add	r26, r16
    22de:	b1 1f       	adc	r27, r17
    22e0:	ac 54       	subi	r26, 0x4C	; 76
    22e2:	bb 4f       	sbci	r27, 0xFB	; 251
    22e4:	18 96       	adiw	r26, 0x08	; 8
    22e6:	0d 90       	ld	r0, X+
    22e8:	bc 91       	ld	r27, X
    22ea:	a0 2d       	mov	r26, r0
    22ec:	a8 17       	cp	r26, r24
    22ee:	b9 07       	cpc	r27, r25
    22f0:	91 f5       	brne	.+100    	; 0x2356 <addEntryIfNotExists+0xba>
    22f2:	03 c0       	rjmp	.+6      	; 0x22fa <addEntryIfNotExists+0x5e>
    22f4:	e0 e0       	ldi	r30, 0x00	; 0
    22f6:	f0 e0       	ldi	r31, 0x00	; 0
    22f8:	d0 e0       	ldi	r29, 0x00	; 0
    22fa:	9f 01       	movw	r18, r30
    22fc:	22 0f       	add	r18, r18
    22fe:	33 1f       	adc	r19, r19
    2300:	22 0f       	add	r18, r18
    2302:	33 1f       	adc	r19, r19
    2304:	22 0f       	add	r18, r18
    2306:	33 1f       	adc	r19, r19
    2308:	df 01       	movw	r26, r30
    230a:	aa 0f       	add	r26, r26
    230c:	bb 1f       	adc	r27, r27
    230e:	a2 0f       	add	r26, r18
    2310:	b3 1f       	adc	r27, r19
    2312:	ac 54       	subi	r26, 0x4C	; 76
    2314:	bb 4f       	sbci	r27, 0xFB	; 251
    2316:	4d 93       	st	X+, r20
    2318:	5d 93       	st	X+, r21
    231a:	6d 93       	st	X+, r22
    231c:	7c 93       	st	X, r23
    231e:	13 97       	sbiw	r26, 0x03	; 3
    2320:	c1 11       	cpse	r28, r1
    2322:	04 c0       	rjmp	.+8      	; 0x232c <addEntryIfNotExists+0x90>
    2324:	00 e0       	ldi	r16, 0x00	; 0
    2326:	10 e0       	ldi	r17, 0x00	; 0
    2328:	98 01       	movw	r18, r16
    232a:	02 c0       	rjmp	.+4      	; 0x2330 <addEntryIfNotExists+0x94>
    232c:	8a 01       	movw	r16, r20
    232e:	9b 01       	movw	r18, r22
    2330:	df 01       	movw	r26, r30
    2332:	aa 0f       	add	r26, r26
    2334:	bb 1f       	adc	r27, r27
    2336:	ee 0f       	add	r30, r30
    2338:	ff 1f       	adc	r31, r31
    233a:	ee 0f       	add	r30, r30
    233c:	ff 1f       	adc	r31, r31
    233e:	ee 0f       	add	r30, r30
    2340:	ff 1f       	adc	r31, r31
    2342:	ea 0f       	add	r30, r26
    2344:	fb 1f       	adc	r31, r27
    2346:	ec 54       	subi	r30, 0x4C	; 76
    2348:	fb 4f       	sbci	r31, 0xFB	; 251
    234a:	04 83       	std	Z+4, r16	; 0x04
    234c:	15 83       	std	Z+5, r17	; 0x05
    234e:	26 83       	std	Z+6, r18	; 0x06
    2350:	37 83       	std	Z+7, r19	; 0x07
    2352:	09 c0       	rjmp	.+18     	; 0x2366 <addEntryIfNotExists+0xca>
    2354:	d0 e0       	ldi	r29, 0x00	; 0
    2356:	df 5f       	subi	r29, 0xFF	; 255
    2358:	20 91 86 05 	lds	r18, 0x0586
    235c:	d2 17       	cp	r29, r18
    235e:	08 f4       	brcc	.+2      	; 0x2362 <addEntryIfNotExists+0xc6>
    2360:	b1 cf       	rjmp	.-158    	; 0x22c4 <addEntryIfNotExists+0x28>
    2362:	01 c0       	rjmp	.+2      	; 0x2366 <addEntryIfNotExists+0xca>
    2364:	d0 e0       	ldi	r29, 0x00	; 0
    2366:	20 91 86 05 	lds	r18, 0x0586
    236a:	d2 13       	cpse	r29, r18
    236c:	03 c0       	rjmp	.+6      	; 0x2374 <addEntryIfNotExists+0xd8>
    236e:	2c 2f       	mov	r18, r28
    2370:	0e 94 9d 10 	call	0x213a	; 0x213a <addEntryToTimerQueue>
    2374:	78 94       	sei
    2376:	df 91       	pop	r29
    2378:	cf 91       	pop	r28
    237a:	1f 91       	pop	r17
    237c:	0f 91       	pop	r16
    237e:	08 95       	ret

00002380 <timePassed>:
    2380:	8f 92       	push	r8
    2382:	9f 92       	push	r9
    2384:	af 92       	push	r10
    2386:	bf 92       	push	r11
    2388:	ff 92       	push	r15
    238a:	0f 93       	push	r16
    238c:	1f 93       	push	r17
    238e:	cf 93       	push	r28
    2390:	df 93       	push	r29
    2392:	20 91 86 05 	lds	r18, 0x0586
    2396:	22 23       	and	r18, r18
    2398:	09 f4       	brne	.+2      	; 0x239c <timePassed+0x1c>
    239a:	7a c0       	rjmp	.+244    	; 0x2490 <timePassed+0x110>
    239c:	c0 e0       	ldi	r28, 0x00	; 0
    239e:	f1 2c       	mov	r15, r1
    23a0:	00 e0       	ldi	r16, 0x00	; 0
    23a2:	10 e0       	ldi	r17, 0x00	; 0
    23a4:	d0 e0       	ldi	r29, 0x00	; 0
    23a6:	2c 2f       	mov	r18, r28
    23a8:	30 e0       	ldi	r19, 0x00	; 0
    23aa:	f9 01       	movw	r30, r18
    23ac:	ee 0f       	add	r30, r30
    23ae:	ff 1f       	adc	r31, r31
    23b0:	a9 01       	movw	r20, r18
    23b2:	44 0f       	add	r20, r20
    23b4:	55 1f       	adc	r21, r21
    23b6:	44 0f       	add	r20, r20
    23b8:	55 1f       	adc	r21, r21
    23ba:	44 0f       	add	r20, r20
    23bc:	55 1f       	adc	r21, r21
    23be:	e4 0f       	add	r30, r20
    23c0:	f5 1f       	adc	r31, r21
    23c2:	ec 54       	subi	r30, 0x4C	; 76
    23c4:	fb 4f       	sbci	r31, 0xFB	; 251
    23c6:	40 85       	ldd	r20, Z+8	; 0x08
    23c8:	51 85       	ldd	r21, Z+9	; 0x09
    23ca:	45 2b       	or	r20, r21
    23cc:	09 f4       	brne	.+2      	; 0x23d0 <timePassed+0x50>
    23ce:	5a c0       	rjmp	.+180    	; 0x2484 <timePassed+0x104>
    23d0:	a9 01       	movw	r20, r18
    23d2:	44 0f       	add	r20, r20
    23d4:	55 1f       	adc	r21, r21
    23d6:	44 0f       	add	r20, r20
    23d8:	55 1f       	adc	r21, r21
    23da:	44 0f       	add	r20, r20
    23dc:	55 1f       	adc	r21, r21
    23de:	f9 01       	movw	r30, r18
    23e0:	ee 0f       	add	r30, r30
    23e2:	ff 1f       	adc	r31, r31
    23e4:	e4 0f       	add	r30, r20
    23e6:	f5 1f       	adc	r31, r21
    23e8:	ec 54       	subi	r30, 0x4C	; 76
    23ea:	fb 4f       	sbci	r31, 0xFB	; 251
    23ec:	80 80       	ld	r8, Z
    23ee:	91 80       	ldd	r9, Z+1	; 0x01
    23f0:	a2 80       	ldd	r10, Z+2	; 0x02
    23f2:	b3 80       	ldd	r11, Z+3	; 0x03
    23f4:	89 28       	or	r8, r9
    23f6:	8a 28       	or	r8, r10
    23f8:	8b 28       	or	r8, r11
    23fa:	09 f4       	brne	.+2      	; 0x23fe <timePassed+0x7e>
    23fc:	43 c0       	rjmp	.+134    	; 0x2484 <timePassed+0x104>
    23fe:	a9 01       	movw	r20, r18
    2400:	44 0f       	add	r20, r20
    2402:	55 1f       	adc	r21, r21
    2404:	44 0f       	add	r20, r20
    2406:	55 1f       	adc	r21, r21
    2408:	44 0f       	add	r20, r20
    240a:	55 1f       	adc	r21, r21
    240c:	f9 01       	movw	r30, r18
    240e:	ee 0f       	add	r30, r30
    2410:	ff 1f       	adc	r31, r31
    2412:	e4 0f       	add	r30, r20
    2414:	f5 1f       	adc	r31, r21
    2416:	ec 54       	subi	r30, 0x4C	; 76
    2418:	fb 4f       	sbci	r31, 0xFB	; 251
    241a:	80 80       	ld	r8, Z
    241c:	91 80       	ldd	r9, Z+1	; 0x01
    241e:	a2 80       	ldd	r10, Z+2	; 0x02
    2420:	b3 80       	ldd	r11, Z+3	; 0x03
    2422:	68 15       	cp	r22, r8
    2424:	79 05       	cpc	r23, r9
    2426:	8a 05       	cpc	r24, r10
    2428:	9b 05       	cpc	r25, r11
    242a:	b8 f4       	brcc	.+46     	; 0x245a <timePassed+0xda>
    242c:	a9 01       	movw	r20, r18
    242e:	44 0f       	add	r20, r20
    2430:	55 1f       	adc	r21, r21
    2432:	44 0f       	add	r20, r20
    2434:	55 1f       	adc	r21, r21
    2436:	44 0f       	add	r20, r20
    2438:	55 1f       	adc	r21, r21
    243a:	f9 01       	movw	r30, r18
    243c:	ee 0f       	add	r30, r30
    243e:	ff 1f       	adc	r31, r31
    2440:	e4 0f       	add	r30, r20
    2442:	f5 1f       	adc	r31, r21
    2444:	ec 54       	subi	r30, 0x4C	; 76
    2446:	fb 4f       	sbci	r31, 0xFB	; 251
    2448:	80 80       	ld	r8, Z
    244a:	91 80       	ldd	r9, Z+1	; 0x01
    244c:	a2 80       	ldd	r10, Z+2	; 0x02
    244e:	b3 80       	ldd	r11, Z+3	; 0x03
    2450:	86 1a       	sub	r8, r22
    2452:	97 0a       	sbc	r9, r23
    2454:	a8 0a       	sbc	r10, r24
    2456:	b9 0a       	sbc	r11, r25
    2458:	04 c0       	rjmp	.+8      	; 0x2462 <timePassed+0xe2>
    245a:	8f 2c       	mov	r8, r15
    245c:	90 2e       	mov	r9, r16
    245e:	a1 2e       	mov	r10, r17
    2460:	bd 2e       	mov	r11, r29
    2462:	f9 01       	movw	r30, r18
    2464:	ee 0f       	add	r30, r30
    2466:	ff 1f       	adc	r31, r31
    2468:	22 0f       	add	r18, r18
    246a:	33 1f       	adc	r19, r19
    246c:	22 0f       	add	r18, r18
    246e:	33 1f       	adc	r19, r19
    2470:	22 0f       	add	r18, r18
    2472:	33 1f       	adc	r19, r19
    2474:	e2 0f       	add	r30, r18
    2476:	f3 1f       	adc	r31, r19
    2478:	ec 54       	subi	r30, 0x4C	; 76
    247a:	fb 4f       	sbci	r31, 0xFB	; 251
    247c:	80 82       	st	Z, r8
    247e:	91 82       	std	Z+1, r9	; 0x01
    2480:	a2 82       	std	Z+2, r10	; 0x02
    2482:	b3 82       	std	Z+3, r11	; 0x03
    2484:	cf 5f       	subi	r28, 0xFF	; 255
    2486:	20 91 86 05 	lds	r18, 0x0586
    248a:	c2 17       	cp	r28, r18
    248c:	08 f4       	brcc	.+2      	; 0x2490 <timePassed+0x110>
    248e:	8b cf       	rjmp	.-234    	; 0x23a6 <timePassed+0x26>
    2490:	df 91       	pop	r29
    2492:	cf 91       	pop	r28
    2494:	1f 91       	pop	r17
    2496:	0f 91       	pop	r16
    2498:	ff 90       	pop	r15
    249a:	bf 90       	pop	r11
    249c:	af 90       	pop	r10
    249e:	9f 90       	pop	r9
    24a0:	8f 90       	pop	r8
    24a2:	08 95       	ret

000024a4 <__vector_15>:
    24a4:	1f 92       	push	r1
    24a6:	0f 92       	push	r0
    24a8:	0f b6       	in	r0, 0x3f	; 63
    24aa:	0f 92       	push	r0
    24ac:	11 24       	eor	r1, r1
    24ae:	2f 93       	push	r18
    24b0:	3f 93       	push	r19
    24b2:	4f 93       	push	r20
    24b4:	5f 93       	push	r21
    24b6:	6f 93       	push	r22
    24b8:	7f 93       	push	r23
    24ba:	8f 93       	push	r24
    24bc:	9f 93       	push	r25
    24be:	af 93       	push	r26
    24c0:	bf 93       	push	r27
    24c2:	ef 93       	push	r30
    24c4:	ff 93       	push	r31
    24c6:	80 91 b0 04 	lds	r24, 0x04B0
    24ca:	90 91 b1 04 	lds	r25, 0x04B1
    24ce:	a0 91 b2 04 	lds	r26, 0x04B2
    24d2:	b0 91 b3 04 	lds	r27, 0x04B3
    24d6:	01 96       	adiw	r24, 0x01	; 1
    24d8:	a1 1d       	adc	r26, r1
    24da:	b1 1d       	adc	r27, r1
    24dc:	80 93 b0 04 	sts	0x04B0, r24
    24e0:	90 93 b1 04 	sts	0x04B1, r25
    24e4:	a0 93 b2 04 	sts	0x04B2, r26
    24e8:	b0 93 b3 04 	sts	0x04B3, r27
    24ec:	62 e1       	ldi	r22, 0x12	; 18
    24ee:	70 e2       	ldi	r23, 0x20	; 32
    24f0:	80 e0       	ldi	r24, 0x00	; 0
    24f2:	90 e0       	ldi	r25, 0x00	; 0
    24f4:	0e 94 c0 11 	call	0x2380	; 0x2380 <timePassed>
    24f8:	ff 91       	pop	r31
    24fa:	ef 91       	pop	r30
    24fc:	bf 91       	pop	r27
    24fe:	af 91       	pop	r26
    2500:	9f 91       	pop	r25
    2502:	8f 91       	pop	r24
    2504:	7f 91       	pop	r23
    2506:	6f 91       	pop	r22
    2508:	5f 91       	pop	r21
    250a:	4f 91       	pop	r20
    250c:	3f 91       	pop	r19
    250e:	2f 91       	pop	r18
    2510:	0f 90       	pop	r0
    2512:	0f be       	out	0x3f, r0	; 63
    2514:	0f 90       	pop	r0
    2516:	1f 90       	pop	r1
    2518:	18 95       	reti

0000251a <shiftTimeQueue>:
    251a:	90 91 28 04 	lds	r25, 0x0428
    251e:	90 91 86 05 	lds	r25, 0x0586
    2522:	89 17       	cp	r24, r25
    2524:	50 f5       	brcc	.+84     	; 0x257a <shiftTimeQueue+0x60>
    2526:	6a e0       	ldi	r22, 0x0A	; 10
    2528:	28 2f       	mov	r18, r24
    252a:	30 e0       	ldi	r19, 0x00	; 0
    252c:	a9 01       	movw	r20, r18
    252e:	4f 5f       	subi	r20, 0xFF	; 255
    2530:	5f 4f       	sbci	r21, 0xFF	; 255
    2532:	d9 01       	movw	r26, r18
    2534:	aa 0f       	add	r26, r26
    2536:	bb 1f       	adc	r27, r27
    2538:	22 0f       	add	r18, r18
    253a:	33 1f       	adc	r19, r19
    253c:	22 0f       	add	r18, r18
    253e:	33 1f       	adc	r19, r19
    2540:	22 0f       	add	r18, r18
    2542:	33 1f       	adc	r19, r19
    2544:	a2 0f       	add	r26, r18
    2546:	b3 1f       	adc	r27, r19
    2548:	ac 54       	subi	r26, 0x4C	; 76
    254a:	bb 4f       	sbci	r27, 0xFB	; 251
    254c:	fa 01       	movw	r30, r20
    254e:	ee 0f       	add	r30, r30
    2550:	ff 1f       	adc	r31, r31
    2552:	44 0f       	add	r20, r20
    2554:	55 1f       	adc	r21, r21
    2556:	44 0f       	add	r20, r20
    2558:	55 1f       	adc	r21, r21
    255a:	44 0f       	add	r20, r20
    255c:	55 1f       	adc	r21, r21
    255e:	e4 0f       	add	r30, r20
    2560:	f5 1f       	adc	r31, r21
    2562:	ec 54       	subi	r30, 0x4C	; 76
    2564:	fb 4f       	sbci	r31, 0xFB	; 251
    2566:	96 2f       	mov	r25, r22
    2568:	01 90       	ld	r0, Z+
    256a:	0d 92       	st	X+, r0
    256c:	9a 95       	dec	r25
    256e:	e1 f7       	brne	.-8      	; 0x2568 <shiftTimeQueue+0x4e>
    2570:	8f 5f       	subi	r24, 0xFF	; 255
    2572:	90 91 86 05 	lds	r25, 0x0586
    2576:	89 17       	cp	r24, r25
    2578:	b8 f2       	brcs	.-82     	; 0x2528 <shiftTimeQueue+0xe>
    257a:	80 91 86 05 	lds	r24, 0x0586
    257e:	81 50       	subi	r24, 0x01	; 1
    2580:	80 93 86 05 	sts	0x0586, r24
    2584:	08 95       	ret

00002586 <removeEntryFromTimerQueue>:
    2586:	af 92       	push	r10
    2588:	bf 92       	push	r11
    258a:	cf 92       	push	r12
    258c:	df 92       	push	r13
    258e:	ef 92       	push	r14
    2590:	ff 92       	push	r15
    2592:	0f 93       	push	r16
    2594:	1f 93       	push	r17
    2596:	cf 93       	push	r28
    2598:	df 93       	push	r29
    259a:	cd b7       	in	r28, 0x3d	; 61
    259c:	de b7       	in	r29, 0x3e	; 62
    259e:	c4 56       	subi	r28, 0x64	; 100
    25a0:	d1 09       	sbc	r29, r1
    25a2:	0f b6       	in	r0, 0x3f	; 63
    25a4:	f8 94       	cli
    25a6:	de bf       	out	0x3e, r29	; 62
    25a8:	0f be       	out	0x3f, r0	; 63
    25aa:	cd bf       	out	0x3d, r28	; 61
    25ac:	8c 01       	movw	r16, r24
    25ae:	80 91 86 05 	lds	r24, 0x0586
    25b2:	88 23       	and	r24, r24
    25b4:	09 f4       	brne	.+2      	; 0x25b8 <removeEntryFromTimerQueue+0x32>
    25b6:	42 c0       	rjmp	.+132    	; 0x263c <removeEntryFromTimerQueue+0xb6>
    25b8:	a1 2c       	mov	r10, r1
    25ba:	b1 2c       	mov	r11, r1
    25bc:	0f 2e       	mov	r0, r31
    25be:	fb e4       	ldi	r31, 0x4B	; 75
    25c0:	cf 2e       	mov	r12, r31
    25c2:	f3 e0       	ldi	r31, 0x03	; 3
    25c4:	df 2e       	mov	r13, r31
    25c6:	f0 2d       	mov	r31, r0
    25c8:	ce 01       	movw	r24, r28
    25ca:	01 96       	adiw	r24, 0x01	; 1
    25cc:	7c 01       	movw	r14, r24
    25ce:	2b 2d       	mov	r18, r11
    25d0:	30 e0       	ldi	r19, 0x00	; 0
    25d2:	f9 01       	movw	r30, r18
    25d4:	ee 0f       	add	r30, r30
    25d6:	ff 1f       	adc	r31, r31
    25d8:	c9 01       	movw	r24, r18
    25da:	88 0f       	add	r24, r24
    25dc:	99 1f       	adc	r25, r25
    25de:	88 0f       	add	r24, r24
    25e0:	99 1f       	adc	r25, r25
    25e2:	88 0f       	add	r24, r24
    25e4:	99 1f       	adc	r25, r25
    25e6:	e8 0f       	add	r30, r24
    25e8:	f9 1f       	adc	r31, r25
    25ea:	ec 54       	subi	r30, 0x4C	; 76
    25ec:	fb 4f       	sbci	r31, 0xFB	; 251
    25ee:	40 85       	ldd	r20, Z+8	; 0x08
    25f0:	51 85       	ldd	r21, Z+9	; 0x09
    25f2:	40 17       	cp	r20, r16
    25f4:	51 07       	cpc	r21, r17
    25f6:	e1 f4       	brne	.+56     	; 0x2630 <removeEntryFromTimerQueue+0xaa>
    25f8:	80 91 28 04 	lds	r24, 0x0428
    25fc:	80 ff       	sbrs	r24, 0
    25fe:	11 c0       	rjmp	.+34     	; 0x2622 <removeEntryFromTimerQueue+0x9c>
    2600:	3f 93       	push	r19
    2602:	bf 92       	push	r11
    2604:	df 92       	push	r13
    2606:	cf 92       	push	r12
    2608:	ff 92       	push	r15
    260a:	ef 92       	push	r14
    260c:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
    2610:	c7 01       	movw	r24, r14
    2612:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    2616:	0f 90       	pop	r0
    2618:	0f 90       	pop	r0
    261a:	0f 90       	pop	r0
    261c:	0f 90       	pop	r0
    261e:	0f 90       	pop	r0
    2620:	0f 90       	pop	r0
    2622:	63 e7       	ldi	r22, 0x73	; 115
    2624:	73 e0       	ldi	r23, 0x03	; 3
    2626:	8b 2d       	mov	r24, r11
    2628:	0e 94 8d 12 	call	0x251a	; 0x251a <shiftTimeQueue>
    262c:	ba 94       	dec	r11
    262e:	a3 94       	inc	r10
    2630:	b3 94       	inc	r11
    2632:	80 91 86 05 	lds	r24, 0x0586
    2636:	b8 16       	cp	r11, r24
    2638:	50 f2       	brcs	.-108    	; 0x25ce <removeEntryFromTimerQueue+0x48>
    263a:	01 c0       	rjmp	.+2      	; 0x263e <removeEntryFromTimerQueue+0xb8>
    263c:	a1 2c       	mov	r10, r1
    263e:	8a 2d       	mov	r24, r10
    2640:	cc 59       	subi	r28, 0x9C	; 156
    2642:	df 4f       	sbci	r29, 0xFF	; 255
    2644:	0f b6       	in	r0, 0x3f	; 63
    2646:	f8 94       	cli
    2648:	de bf       	out	0x3e, r29	; 62
    264a:	0f be       	out	0x3f, r0	; 63
    264c:	cd bf       	out	0x3d, r28	; 61
    264e:	df 91       	pop	r29
    2650:	cf 91       	pop	r28
    2652:	1f 91       	pop	r17
    2654:	0f 91       	pop	r16
    2656:	ff 90       	pop	r15
    2658:	ef 90       	pop	r14
    265a:	df 90       	pop	r13
    265c:	cf 90       	pop	r12
    265e:	bf 90       	pop	r11
    2660:	af 90       	pop	r10
    2662:	08 95       	ret

00002664 <checkTimeQueue>:
    2664:	1f 93       	push	r17
    2666:	cf 93       	push	r28
    2668:	df 93       	push	r29
    266a:	f8 94       	cli
    266c:	80 91 86 05 	lds	r24, 0x0586
    2670:	88 23       	and	r24, r24
    2672:	09 f4       	brne	.+2      	; 0x2676 <checkTimeQueue+0x12>
    2674:	8b c0       	rjmp	.+278    	; 0x278c <checkTimeQueue+0x128>
    2676:	10 e0       	ldi	r17, 0x00	; 0
    2678:	c1 2f       	mov	r28, r17
    267a:	d0 e0       	ldi	r29, 0x00	; 0
    267c:	fe 01       	movw	r30, r28
    267e:	ee 0f       	add	r30, r30
    2680:	ff 1f       	adc	r31, r31
    2682:	ce 01       	movw	r24, r28
    2684:	88 0f       	add	r24, r24
    2686:	99 1f       	adc	r25, r25
    2688:	88 0f       	add	r24, r24
    268a:	99 1f       	adc	r25, r25
    268c:	88 0f       	add	r24, r24
    268e:	99 1f       	adc	r25, r25
    2690:	e8 0f       	add	r30, r24
    2692:	f9 1f       	adc	r31, r25
    2694:	ec 54       	subi	r30, 0x4C	; 76
    2696:	fb 4f       	sbci	r31, 0xFB	; 251
    2698:	20 85       	ldd	r18, Z+8	; 0x08
    269a:	31 85       	ldd	r19, Z+9	; 0x09
    269c:	23 2b       	or	r18, r19
    269e:	09 f4       	brne	.+2      	; 0x26a2 <checkTimeQueue+0x3e>
    26a0:	6f c0       	rjmp	.+222    	; 0x2780 <checkTimeQueue+0x11c>
    26a2:	ce 01       	movw	r24, r28
    26a4:	88 0f       	add	r24, r24
    26a6:	99 1f       	adc	r25, r25
    26a8:	88 0f       	add	r24, r24
    26aa:	99 1f       	adc	r25, r25
    26ac:	88 0f       	add	r24, r24
    26ae:	99 1f       	adc	r25, r25
    26b0:	fe 01       	movw	r30, r28
    26b2:	ee 0f       	add	r30, r30
    26b4:	ff 1f       	adc	r31, r31
    26b6:	e8 0f       	add	r30, r24
    26b8:	f9 1f       	adc	r31, r25
    26ba:	ec 54       	subi	r30, 0x4C	; 76
    26bc:	fb 4f       	sbci	r31, 0xFB	; 251
    26be:	40 81       	ld	r20, Z
    26c0:	51 81       	ldd	r21, Z+1	; 0x01
    26c2:	62 81       	ldd	r22, Z+2	; 0x02
    26c4:	73 81       	ldd	r23, Z+3	; 0x03
    26c6:	45 2b       	or	r20, r21
    26c8:	46 2b       	or	r20, r22
    26ca:	47 2b       	or	r20, r23
    26cc:	09 f0       	breq	.+2      	; 0x26d0 <checkTimeQueue+0x6c>
    26ce:	58 c0       	rjmp	.+176    	; 0x2780 <checkTimeQueue+0x11c>
    26d0:	ce 01       	movw	r24, r28
    26d2:	88 0f       	add	r24, r24
    26d4:	99 1f       	adc	r25, r25
    26d6:	88 0f       	add	r24, r24
    26d8:	99 1f       	adc	r25, r25
    26da:	88 0f       	add	r24, r24
    26dc:	99 1f       	adc	r25, r25
    26de:	fe 01       	movw	r30, r28
    26e0:	ee 0f       	add	r30, r30
    26e2:	ff 1f       	adc	r31, r31
    26e4:	e8 0f       	add	r30, r24
    26e6:	f9 1f       	adc	r31, r25
    26e8:	ec 54       	subi	r30, 0x4C	; 76
    26ea:	fb 4f       	sbci	r31, 0xFB	; 251
    26ec:	00 84       	ldd	r0, Z+8	; 0x08
    26ee:	f1 85       	ldd	r31, Z+9	; 0x09
    26f0:	e0 2d       	mov	r30, r0
    26f2:	09 95       	icall
    26f4:	88 23       	and	r24, r24
    26f6:	39 f0       	breq	.+14     	; 0x2706 <checkTimeQueue+0xa2>
    26f8:	63 e8       	ldi	r22, 0x83	; 131
    26fa:	73 e0       	ldi	r23, 0x03	; 3
    26fc:	81 2f       	mov	r24, r17
    26fe:	0e 94 8d 12 	call	0x251a	; 0x251a <shiftTimeQueue>
    2702:	11 50       	subi	r17, 0x01	; 1
    2704:	3d c0       	rjmp	.+122    	; 0x2780 <checkTimeQueue+0x11c>
    2706:	ce 01       	movw	r24, r28
    2708:	88 0f       	add	r24, r24
    270a:	99 1f       	adc	r25, r25
    270c:	88 0f       	add	r24, r24
    270e:	99 1f       	adc	r25, r25
    2710:	88 0f       	add	r24, r24
    2712:	99 1f       	adc	r25, r25
    2714:	fe 01       	movw	r30, r28
    2716:	ee 0f       	add	r30, r30
    2718:	ff 1f       	adc	r31, r31
    271a:	e8 0f       	add	r30, r24
    271c:	f9 1f       	adc	r31, r25
    271e:	ec 54       	subi	r30, 0x4C	; 76
    2720:	fb 4f       	sbci	r31, 0xFB	; 251
    2722:	44 81       	ldd	r20, Z+4	; 0x04
    2724:	55 81       	ldd	r21, Z+5	; 0x05
    2726:	66 81       	ldd	r22, Z+6	; 0x06
    2728:	77 81       	ldd	r23, Z+7	; 0x07
    272a:	45 2b       	or	r20, r21
    272c:	46 2b       	or	r20, r22
    272e:	47 2b       	or	r20, r23
    2730:	49 f0       	breq	.+18     	; 0x2744 <checkTimeQueue+0xe0>
    2732:	44 81       	ldd	r20, Z+4	; 0x04
    2734:	55 81       	ldd	r21, Z+5	; 0x05
    2736:	66 81       	ldd	r22, Z+6	; 0x06
    2738:	77 81       	ldd	r23, Z+7	; 0x07
    273a:	40 83       	st	Z, r20
    273c:	51 83       	std	Z+1, r21	; 0x01
    273e:	62 83       	std	Z+2, r22	; 0x02
    2740:	73 83       	std	Z+3, r23	; 0x03
    2742:	1e c0       	rjmp	.+60     	; 0x2780 <checkTimeQueue+0x11c>
    2744:	ce 01       	movw	r24, r28
    2746:	88 0f       	add	r24, r24
    2748:	99 1f       	adc	r25, r25
    274a:	cc 0f       	add	r28, r28
    274c:	dd 1f       	adc	r29, r29
    274e:	cc 0f       	add	r28, r28
    2750:	dd 1f       	adc	r29, r29
    2752:	cc 0f       	add	r28, r28
    2754:	dd 1f       	adc	r29, r29
    2756:	c8 0f       	add	r28, r24
    2758:	d9 1f       	adc	r29, r25
    275a:	cc 54       	subi	r28, 0x4C	; 76
    275c:	db 4f       	sbci	r29, 0xFB	; 251
    275e:	88 85       	ldd	r24, Y+8	; 0x08
    2760:	99 85       	ldd	r25, Y+9	; 0x09
    2762:	8c 5d       	subi	r24, 0xDC	; 220
    2764:	94 40       	sbci	r25, 0x04	; 4
    2766:	31 f4       	brne	.+12     	; 0x2774 <checkTimeQueue+0x110>
    2768:	8c ed       	ldi	r24, 0xDC	; 220
    276a:	94 e0       	ldi	r25, 0x04	; 4
    276c:	0e 94 c3 12 	call	0x2586	; 0x2586 <removeEntryFromTimerQueue>
    2770:	18 1b       	sub	r17, r24
    2772:	06 c0       	rjmp	.+12     	; 0x2780 <checkTimeQueue+0x11c>
    2774:	61 e9       	ldi	r22, 0x91	; 145
    2776:	73 e0       	ldi	r23, 0x03	; 3
    2778:	81 2f       	mov	r24, r17
    277a:	0e 94 8d 12 	call	0x251a	; 0x251a <shiftTimeQueue>
    277e:	11 50       	subi	r17, 0x01	; 1
    2780:	1f 5f       	subi	r17, 0xFF	; 255
    2782:	80 91 86 05 	lds	r24, 0x0586
    2786:	18 17       	cp	r17, r24
    2788:	08 f4       	brcc	.+2      	; 0x278c <checkTimeQueue+0x128>
    278a:	76 cf       	rjmp	.-276    	; 0x2678 <checkTimeQueue+0x14>
    278c:	78 94       	sei
    278e:	df 91       	pop	r29
    2790:	cf 91       	pop	r28
    2792:	1f 91       	pop	r17
    2794:	08 95       	ret

00002796 <resetTimerQueue>:
    2796:	1f 93       	push	r17
    2798:	cf 93       	push	r28
    279a:	df 93       	push	r29
    279c:	18 2f       	mov	r17, r24
    279e:	c0 e0       	ldi	r28, 0x00	; 0
    27a0:	d0 e0       	ldi	r29, 0x00	; 0
    27a2:	8c 2f       	mov	r24, r28
    27a4:	9e 01       	movw	r18, r28
    27a6:	22 0f       	add	r18, r18
    27a8:	33 1f       	adc	r19, r19
    27aa:	22 0f       	add	r18, r18
    27ac:	33 1f       	adc	r19, r19
    27ae:	22 0f       	add	r18, r18
    27b0:	33 1f       	adc	r19, r19
    27b2:	fe 01       	movw	r30, r28
    27b4:	ee 0f       	add	r30, r30
    27b6:	ff 1f       	adc	r31, r31
    27b8:	e2 0f       	add	r30, r18
    27ba:	f3 1f       	adc	r31, r19
    27bc:	ec 54       	subi	r30, 0x4C	; 76
    27be:	fb 4f       	sbci	r31, 0xFB	; 251
    27c0:	20 85       	ldd	r18, Z+8	; 0x08
    27c2:	31 85       	ldd	r19, Z+9	; 0x09
    27c4:	28 57       	subi	r18, 0x78	; 120
    27c6:	3a 40       	sbci	r19, 0x0A	; 10
    27c8:	11 f4       	brne	.+4      	; 0x27ce <resetTimerQueue+0x38>
    27ca:	11 11       	cpse	r17, r1
    27cc:	04 c0       	rjmp	.+8      	; 0x27d6 <resetTimerQueue+0x40>
    27ce:	6e e9       	ldi	r22, 0x9E	; 158
    27d0:	73 e0       	ldi	r23, 0x03	; 3
    27d2:	0e 94 8d 12 	call	0x251a	; 0x251a <shiftTimeQueue>
    27d6:	21 96       	adiw	r28, 0x01	; 1
    27d8:	c4 31       	cpi	r28, 0x14	; 20
    27da:	d1 05       	cpc	r29, r1
    27dc:	11 f7       	brne	.-60     	; 0x27a2 <resetTimerQueue+0xc>
    27de:	81 e0       	ldi	r24, 0x01	; 1
    27e0:	80 93 86 05 	sts	0x0586, r24
    27e4:	df 91       	pop	r29
    27e6:	cf 91       	pop	r28
    27e8:	1f 91       	pop	r17
    27ea:	08 95       	ret

000027ec <stateMachineTest1>:
    27ec:	8f 92       	push	r8
    27ee:	9f 92       	push	r9
    27f0:	af 92       	push	r10
    27f2:	bf 92       	push	r11
    27f4:	cf 92       	push	r12
    27f6:	df 92       	push	r13
    27f8:	ef 92       	push	r14
    27fa:	ff 92       	push	r15
    27fc:	0f 93       	push	r16
    27fe:	1f 93       	push	r17
    2800:	cf 93       	push	r28
    2802:	df 93       	push	r29
    2804:	cd b7       	in	r28, 0x3d	; 61
    2806:	de b7       	in	r29, 0x3e	; 62
    2808:	c4 56       	subi	r28, 0x64	; 100
    280a:	d1 09       	sbc	r29, r1
    280c:	0f b6       	in	r0, 0x3f	; 63
    280e:	f8 94       	cli
    2810:	de bf       	out	0x3e, r29	; 62
    2812:	0f be       	out	0x3f, r0	; 63
    2814:	cd bf       	out	0x3d, r28	; 61
    2816:	83 e0       	ldi	r24, 0x03	; 3
    2818:	0e 94 3a 08 	call	0x1074	; 0x1074 <getValueOfSensor>
    281c:	6c 01       	movw	r12, r24
    281e:	e1 2c       	mov	r14, r1
    2820:	f1 2c       	mov	r15, r1
    2822:	82 e0       	ldi	r24, 0x02	; 2
    2824:	0e 94 3a 08 	call	0x1074	; 0x1074 <getValueOfSensor>
    2828:	4c 01       	movw	r8, r24
    282a:	a1 2c       	mov	r10, r1
    282c:	b1 2c       	mov	r11, r1
    282e:	80 91 28 04 	lds	r24, 0x0428
    2832:	80 ff       	sbrs	r24, 0
    2834:	1b c0       	rjmp	.+54     	; 0x286c <stateMachineTest1+0x80>
    2836:	1f 92       	push	r1
    2838:	1f 92       	push	r1
    283a:	9f 92       	push	r9
    283c:	8f 92       	push	r8
    283e:	1f 92       	push	r1
    2840:	1f 92       	push	r1
    2842:	df 92       	push	r13
    2844:	cf 92       	push	r12
    2846:	80 eb       	ldi	r24, 0xB0	; 176
    2848:	93 e0       	ldi	r25, 0x03	; 3
    284a:	9f 93       	push	r25
    284c:	8f 93       	push	r24
    284e:	8e 01       	movw	r16, r28
    2850:	0f 5f       	subi	r16, 0xFF	; 255
    2852:	1f 4f       	sbci	r17, 0xFF	; 255
    2854:	1f 93       	push	r17
    2856:	0f 93       	push	r16
    2858:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
    285c:	c8 01       	movw	r24, r16
    285e:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    2862:	0f b6       	in	r0, 0x3f	; 63
    2864:	f8 94       	cli
    2866:	de bf       	out	0x3e, r29	; 62
    2868:	0f be       	out	0x3f, r0	; 63
    286a:	cd bf       	out	0x3d, r28	; 61
    286c:	80 91 29 04 	lds	r24, 0x0429
    2870:	81 30       	cpi	r24, 0x01	; 1
    2872:	69 f0       	breq	.+26     	; 0x288e <stateMachineTest1+0xa2>
    2874:	18 f0       	brcs	.+6      	; 0x287c <stateMachineTest1+0x90>
    2876:	82 30       	cpi	r24, 0x02	; 2
    2878:	f9 f0       	breq	.+62     	; 0x28b8 <stateMachineTest1+0xcc>
    287a:	22 c0       	rjmp	.+68     	; 0x28c0 <stateMachineTest1+0xd4>
    287c:	81 e0       	ldi	r24, 0x01	; 1
    287e:	80 93 29 04 	sts	0x0429, r24
    2882:	66 e9       	ldi	r22, 0x96	; 150
    2884:	8e e1       	ldi	r24, 0x1E	; 30
    2886:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
    288a:	80 e0       	ldi	r24, 0x00	; 0
    288c:	1e c0       	rjmp	.+60     	; 0x28ca <stateMachineTest1+0xde>
    288e:	92 e8       	ldi	r25, 0x82	; 130
    2890:	c9 16       	cp	r12, r25
    2892:	d1 04       	cpc	r13, r1
    2894:	e1 04       	cpc	r14, r1
    2896:	f1 04       	cpc	r15, r1
    2898:	a8 f4       	brcc	.+42     	; 0x28c4 <stateMachineTest1+0xd8>
    289a:	82 e8       	ldi	r24, 0x82	; 130
    289c:	88 16       	cp	r8, r24
    289e:	91 04       	cpc	r9, r1
    28a0:	a1 04       	cpc	r10, r1
    28a2:	b1 04       	cpc	r11, r1
    28a4:	88 f4       	brcc	.+34     	; 0x28c8 <stateMachineTest1+0xdc>
    28a6:	82 e0       	ldi	r24, 0x02	; 2
    28a8:	80 93 29 04 	sts	0x0429, r24
    28ac:	66 e9       	ldi	r22, 0x96	; 150
    28ae:	81 e0       	ldi	r24, 0x01	; 1
    28b0:	0e 94 7f 05 	call	0xafe	; 0xafe <goBack>
    28b4:	80 e0       	ldi	r24, 0x00	; 0
    28b6:	09 c0       	rjmp	.+18     	; 0x28ca <stateMachineTest1+0xde>
    28b8:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
    28bc:	81 e0       	ldi	r24, 0x01	; 1
    28be:	05 c0       	rjmp	.+10     	; 0x28ca <stateMachineTest1+0xde>
    28c0:	80 e0       	ldi	r24, 0x00	; 0
    28c2:	03 c0       	rjmp	.+6      	; 0x28ca <stateMachineTest1+0xde>
    28c4:	80 e0       	ldi	r24, 0x00	; 0
    28c6:	01 c0       	rjmp	.+2      	; 0x28ca <stateMachineTest1+0xde>
    28c8:	80 e0       	ldi	r24, 0x00	; 0
    28ca:	cc 59       	subi	r28, 0x9C	; 156
    28cc:	df 4f       	sbci	r29, 0xFF	; 255
    28ce:	0f b6       	in	r0, 0x3f	; 63
    28d0:	f8 94       	cli
    28d2:	de bf       	out	0x3e, r29	; 62
    28d4:	0f be       	out	0x3f, r0	; 63
    28d6:	cd bf       	out	0x3d, r28	; 61
    28d8:	df 91       	pop	r29
    28da:	cf 91       	pop	r28
    28dc:	1f 91       	pop	r17
    28de:	0f 91       	pop	r16
    28e0:	ff 90       	pop	r15
    28e2:	ef 90       	pop	r14
    28e4:	df 90       	pop	r13
    28e6:	cf 90       	pop	r12
    28e8:	bf 90       	pop	r11
    28ea:	af 90       	pop	r10
    28ec:	9f 90       	pop	r9
    28ee:	8f 90       	pop	r8
    28f0:	08 95       	ret

000028f2 <SMFParcurgereDistanta>:
    28f2:	0f 93       	push	r16
    28f4:	1f 93       	push	r17
    28f6:	cf 93       	push	r28
    28f8:	df 93       	push	r29
    28fa:	cd b7       	in	r28, 0x3d	; 61
    28fc:	de b7       	in	r29, 0x3e	; 62
    28fe:	c4 56       	subi	r28, 0x64	; 100
    2900:	d1 09       	sbc	r29, r1
    2902:	0f b6       	in	r0, 0x3f	; 63
    2904:	f8 94       	cli
    2906:	de bf       	out	0x3e, r29	; 62
    2908:	0f be       	out	0x3f, r0	; 63
    290a:	cd bf       	out	0x3d, r28	; 61
    290c:	80 91 f2 05 	lds	r24, 0x05F2
    2910:	81 30       	cpi	r24, 0x01	; 1
    2912:	71 f0       	breq	.+28     	; 0x2930 <SMFParcurgereDistanta+0x3e>
    2914:	20 f0       	brcs	.+8      	; 0x291e <SMFParcurgereDistanta+0x2c>
    2916:	82 30       	cpi	r24, 0x02	; 2
    2918:	09 f4       	brne	.+2      	; 0x291c <SMFParcurgereDistanta+0x2a>
    291a:	58 c0       	rjmp	.+176    	; 0x29cc <SMFParcurgereDistanta+0xda>
    291c:	ba c0       	rjmp	.+372    	; 0x2a92 <SMFParcurgereDistanta+0x1a0>
    291e:	60 91 01 06 	lds	r22, 0x0601
    2922:	84 e6       	ldi	r24, 0x64	; 100
    2924:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
    2928:	81 e0       	ldi	r24, 0x01	; 1
    292a:	80 93 f2 05 	sts	0x05F2, r24
    292e:	af c0       	rjmp	.+350    	; 0x2a8e <SMFParcurgereDistanta+0x19c>
    2930:	80 91 40 04 	lds	r24, 0x0440
    2934:	90 91 41 04 	lds	r25, 0x0441
    2938:	a0 91 42 04 	lds	r26, 0x0442
    293c:	b0 91 43 04 	lds	r27, 0x0443
    2940:	40 91 46 04 	lds	r20, 0x0446
    2944:	50 91 47 04 	lds	r21, 0x0447
    2948:	60 91 48 04 	lds	r22, 0x0448
    294c:	70 91 49 04 	lds	r23, 0x0449
    2950:	84 0f       	add	r24, r20
    2952:	95 1f       	adc	r25, r21
    2954:	a6 1f       	adc	r26, r22
    2956:	b7 1f       	adc	r27, r23
    2958:	b6 95       	lsr	r27
    295a:	a7 95       	ror	r26
    295c:	97 95       	ror	r25
    295e:	87 95       	ror	r24
    2960:	b6 95       	lsr	r27
    2962:	a7 95       	ror	r26
    2964:	97 95       	ror	r25
    2966:	87 95       	ror	r24
    2968:	ac 01       	movw	r20, r24
    296a:	bd 01       	movw	r22, r26
    296c:	44 0f       	add	r20, r20
    296e:	55 1f       	adc	r21, r21
    2970:	66 1f       	adc	r22, r22
    2972:	77 1f       	adc	r23, r23
    2974:	44 0f       	add	r20, r20
    2976:	55 1f       	adc	r21, r21
    2978:	66 1f       	adc	r22, r22
    297a:	77 1f       	adc	r23, r23
    297c:	8a 01       	movw	r16, r20
    297e:	9b 01       	movw	r18, r22
    2980:	00 0f       	add	r16, r16
    2982:	11 1f       	adc	r17, r17
    2984:	22 1f       	adc	r18, r18
    2986:	33 1f       	adc	r19, r19
    2988:	00 0f       	add	r16, r16
    298a:	11 1f       	adc	r17, r17
    298c:	22 1f       	adc	r18, r18
    298e:	33 1f       	adc	r19, r19
    2990:	40 0f       	add	r20, r16
    2992:	51 1f       	adc	r21, r17
    2994:	62 1f       	adc	r22, r18
    2996:	73 1f       	adc	r23, r19
    2998:	84 0f       	add	r24, r20
    299a:	95 1f       	adc	r25, r21
    299c:	a6 1f       	adc	r26, r22
    299e:	b7 1f       	adc	r27, r23
    29a0:	00 91 f4 05 	lds	r16, 0x05F4
    29a4:	10 91 f5 05 	lds	r17, 0x05F5
    29a8:	20 91 f6 05 	lds	r18, 0x05F6
    29ac:	30 91 f7 05 	lds	r19, 0x05F7
    29b0:	08 17       	cp	r16, r24
    29b2:	19 07       	cpc	r17, r25
    29b4:	2a 07       	cpc	r18, r26
    29b6:	3b 07       	cpc	r19, r27
    29b8:	08 f0       	brcs	.+2      	; 0x29bc <SMFParcurgereDistanta+0xca>
    29ba:	69 c0       	rjmp	.+210    	; 0x2a8e <SMFParcurgereDistanta+0x19c>
    29bc:	62 e8       	ldi	r22, 0x82	; 130
    29be:	81 e0       	ldi	r24, 0x01	; 1
    29c0:	0e 94 7f 05 	call	0xafe	; 0xafe <goBack>
    29c4:	82 e0       	ldi	r24, 0x02	; 2
    29c6:	80 93 f2 05 	sts	0x05F2, r24
    29ca:	61 c0       	rjmp	.+194    	; 0x2a8e <SMFParcurgereDistanta+0x19c>
    29cc:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
    29d0:	40 91 23 04 	lds	r20, 0x0423
    29d4:	50 91 24 04 	lds	r21, 0x0424
    29d8:	60 91 25 04 	lds	r22, 0x0425
    29dc:	70 91 26 04 	lds	r23, 0x0426
    29e0:	80 91 40 04 	lds	r24, 0x0440
    29e4:	90 91 41 04 	lds	r25, 0x0441
    29e8:	a0 91 42 04 	lds	r26, 0x0442
    29ec:	b0 91 43 04 	lds	r27, 0x0443
    29f0:	00 91 46 04 	lds	r16, 0x0446
    29f4:	10 91 47 04 	lds	r17, 0x0447
    29f8:	20 91 48 04 	lds	r18, 0x0448
    29fc:	30 91 49 04 	lds	r19, 0x0449
    2a00:	7f 93       	push	r23
    2a02:	6f 93       	push	r22
    2a04:	5f 93       	push	r21
    2a06:	4f 93       	push	r20
    2a08:	b9 01       	movw	r22, r18
    2a0a:	a8 01       	movw	r20, r16
    2a0c:	48 0f       	add	r20, r24
    2a0e:	59 1f       	adc	r21, r25
    2a10:	6a 1f       	adc	r22, r26
    2a12:	7b 1f       	adc	r23, r27
    2a14:	76 95       	lsr	r23
    2a16:	67 95       	ror	r22
    2a18:	57 95       	ror	r21
    2a1a:	47 95       	ror	r20
    2a1c:	76 95       	lsr	r23
    2a1e:	67 95       	ror	r22
    2a20:	57 95       	ror	r21
    2a22:	47 95       	ror	r20
    2a24:	db 01       	movw	r26, r22
    2a26:	ca 01       	movw	r24, r20
    2a28:	88 0f       	add	r24, r24
    2a2a:	99 1f       	adc	r25, r25
    2a2c:	aa 1f       	adc	r26, r26
    2a2e:	bb 1f       	adc	r27, r27
    2a30:	88 0f       	add	r24, r24
    2a32:	99 1f       	adc	r25, r25
    2a34:	aa 1f       	adc	r26, r26
    2a36:	bb 1f       	adc	r27, r27
    2a38:	8c 01       	movw	r16, r24
    2a3a:	9d 01       	movw	r18, r26
    2a3c:	00 0f       	add	r16, r16
    2a3e:	11 1f       	adc	r17, r17
    2a40:	22 1f       	adc	r18, r18
    2a42:	33 1f       	adc	r19, r19
    2a44:	00 0f       	add	r16, r16
    2a46:	11 1f       	adc	r17, r17
    2a48:	22 1f       	adc	r18, r18
    2a4a:	33 1f       	adc	r19, r19
    2a4c:	80 0f       	add	r24, r16
    2a4e:	91 1f       	adc	r25, r17
    2a50:	a2 1f       	adc	r26, r18
    2a52:	b3 1f       	adc	r27, r19
    2a54:	84 0f       	add	r24, r20
    2a56:	95 1f       	adc	r25, r21
    2a58:	a6 1f       	adc	r26, r22
    2a5a:	b7 1f       	adc	r27, r23
    2a5c:	bf 93       	push	r27
    2a5e:	af 93       	push	r26
    2a60:	9f 93       	push	r25
    2a62:	8f 93       	push	r24
    2a64:	8f eb       	ldi	r24, 0xBF	; 191
    2a66:	93 e0       	ldi	r25, 0x03	; 3
    2a68:	9f 93       	push	r25
    2a6a:	8f 93       	push	r24
    2a6c:	8e 01       	movw	r16, r28
    2a6e:	0f 5f       	subi	r16, 0xFF	; 255
    2a70:	1f 4f       	sbci	r17, 0xFF	; 255
    2a72:	1f 93       	push	r17
    2a74:	0f 93       	push	r16
    2a76:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
    2a7a:	c8 01       	movw	r24, r16
    2a7c:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    2a80:	0f b6       	in	r0, 0x3f	; 63
    2a82:	f8 94       	cli
    2a84:	de bf       	out	0x3e, r29	; 62
    2a86:	0f be       	out	0x3f, r0	; 63
    2a88:	cd bf       	out	0x3d, r28	; 61
    2a8a:	81 e0       	ldi	r24, 0x01	; 1
    2a8c:	03 c0       	rjmp	.+6      	; 0x2a94 <SMFParcurgereDistanta+0x1a2>
    2a8e:	80 e0       	ldi	r24, 0x00	; 0
    2a90:	01 c0       	rjmp	.+2      	; 0x2a94 <SMFParcurgereDistanta+0x1a2>
    2a92:	80 e0       	ldi	r24, 0x00	; 0
    2a94:	cc 59       	subi	r28, 0x9C	; 156
    2a96:	df 4f       	sbci	r29, 0xFF	; 255
    2a98:	0f b6       	in	r0, 0x3f	; 63
    2a9a:	f8 94       	cli
    2a9c:	de bf       	out	0x3e, r29	; 62
    2a9e:	0f be       	out	0x3f, r0	; 63
    2aa0:	cd bf       	out	0x3d, r28	; 61
    2aa2:	df 91       	pop	r29
    2aa4:	cf 91       	pop	r28
    2aa6:	1f 91       	pop	r17
    2aa8:	0f 91       	pop	r16
    2aaa:	08 95       	ret

00002aac <ledAction>:
    2aac:	88 23       	and	r24, r24
    2aae:	11 f0       	breq	.+4      	; 0x2ab4 <ledAction+0x8>
    2ab0:	15 9a       	sbi	0x02, 5	; 2
    2ab2:	01 c0       	rjmp	.+2      	; 0x2ab6 <ledAction+0xa>
    2ab4:	15 98       	cbi	0x02, 5	; 2
    2ab6:	66 23       	and	r22, r22
    2ab8:	11 f0       	breq	.+4      	; 0x2abe <ledAction+0x12>
    2aba:	14 9a       	sbi	0x02, 4	; 2
    2abc:	08 95       	ret
    2abe:	14 98       	cbi	0x02, 4	; 2
    2ac0:	08 95       	ret

00002ac2 <initAndStartStateMachineTest1>:
    2ac2:	10 92 29 04 	sts	0x0429, r1
    2ac6:	21 e0       	ldi	r18, 0x01	; 1
    2ac8:	40 ea       	ldi	r20, 0xA0	; 160
    2aca:	56 e8       	ldi	r21, 0x86	; 134
    2acc:	61 e0       	ldi	r22, 0x01	; 1
    2ace:	70 e0       	ldi	r23, 0x00	; 0
    2ad0:	86 ef       	ldi	r24, 0xF6	; 246
    2ad2:	93 e1       	ldi	r25, 0x13	; 19
    2ad4:	0e 94 9d 10 	call	0x213a	; 0x213a <addEntryToTimerQueue>
    2ad8:	08 95       	ret

00002ada <initParcurgereDistanta>:
    2ada:	8f 92       	push	r8
    2adc:	9f 92       	push	r9
    2ade:	af 92       	push	r10
    2ae0:	bf 92       	push	r11
    2ae2:	cf 92       	push	r12
    2ae4:	df 92       	push	r13
    2ae6:	ef 92       	push	r14
    2ae8:	ff 92       	push	r15
    2aea:	0f 93       	push	r16
    2aec:	1f 93       	push	r17
    2aee:	10 92 f2 05 	sts	0x05F2, r1
    2af2:	c0 90 40 04 	lds	r12, 0x0440
    2af6:	d0 90 41 04 	lds	r13, 0x0441
    2afa:	e0 90 42 04 	lds	r14, 0x0442
    2afe:	f0 90 43 04 	lds	r15, 0x0443
    2b02:	00 91 46 04 	lds	r16, 0x0446
    2b06:	10 91 47 04 	lds	r17, 0x0447
    2b0a:	20 91 48 04 	lds	r18, 0x0448
    2b0e:	30 91 49 04 	lds	r19, 0x0449
    2b12:	0c 0d       	add	r16, r12
    2b14:	1d 1d       	adc	r17, r13
    2b16:	2e 1d       	adc	r18, r14
    2b18:	3f 1d       	adc	r19, r15
    2b1a:	68 01       	movw	r12, r16
    2b1c:	79 01       	movw	r14, r18
    2b1e:	f6 94       	lsr	r15
    2b20:	e7 94       	ror	r14
    2b22:	d7 94       	ror	r13
    2b24:	c7 94       	ror	r12
    2b26:	f6 94       	lsr	r15
    2b28:	e7 94       	ror	r14
    2b2a:	d7 94       	ror	r13
    2b2c:	c7 94       	ror	r12
    2b2e:	97 01       	movw	r18, r14
    2b30:	86 01       	movw	r16, r12
    2b32:	00 0f       	add	r16, r16
    2b34:	11 1f       	adc	r17, r17
    2b36:	22 1f       	adc	r18, r18
    2b38:	33 1f       	adc	r19, r19
    2b3a:	00 0f       	add	r16, r16
    2b3c:	11 1f       	adc	r17, r17
    2b3e:	22 1f       	adc	r18, r18
    2b40:	33 1f       	adc	r19, r19
    2b42:	48 01       	movw	r8, r16
    2b44:	59 01       	movw	r10, r18
    2b46:	88 0c       	add	r8, r8
    2b48:	99 1c       	adc	r9, r9
    2b4a:	aa 1c       	adc	r10, r10
    2b4c:	bb 1c       	adc	r11, r11
    2b4e:	88 0c       	add	r8, r8
    2b50:	99 1c       	adc	r9, r9
    2b52:	aa 1c       	adc	r10, r10
    2b54:	bb 1c       	adc	r11, r11
    2b56:	08 0d       	add	r16, r8
    2b58:	19 1d       	adc	r17, r9
    2b5a:	2a 1d       	adc	r18, r10
    2b5c:	3b 1d       	adc	r19, r11
    2b5e:	0c 0d       	add	r16, r12
    2b60:	1d 1d       	adc	r17, r13
    2b62:	2e 1d       	adc	r18, r14
    2b64:	3f 1d       	adc	r19, r15
    2b66:	6b 01       	movw	r12, r22
    2b68:	7c 01       	movw	r14, r24
    2b6a:	c0 0e       	add	r12, r16
    2b6c:	d1 1e       	adc	r13, r17
    2b6e:	e2 1e       	adc	r14, r18
    2b70:	f3 1e       	adc	r15, r19
    2b72:	c0 92 f4 05 	sts	0x05F4, r12
    2b76:	d0 92 f5 05 	sts	0x05F5, r13
    2b7a:	e0 92 f6 05 	sts	0x05F6, r14
    2b7e:	f0 92 f7 05 	sts	0x05F7, r15
    2b82:	40 93 01 06 	sts	0x0601, r20
    2b86:	21 e0       	ldi	r18, 0x01	; 1
    2b88:	40 e1       	ldi	r20, 0x10	; 16
    2b8a:	57 e2       	ldi	r21, 0x27	; 39
    2b8c:	60 e0       	ldi	r22, 0x00	; 0
    2b8e:	70 e0       	ldi	r23, 0x00	; 0
    2b90:	89 e7       	ldi	r24, 0x79	; 121
    2b92:	94 e1       	ldi	r25, 0x14	; 20
    2b94:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
    2b98:	1f 91       	pop	r17
    2b9a:	0f 91       	pop	r16
    2b9c:	ff 90       	pop	r15
    2b9e:	ef 90       	pop	r14
    2ba0:	df 90       	pop	r13
    2ba2:	cf 90       	pop	r12
    2ba4:	bf 90       	pop	r11
    2ba6:	af 90       	pop	r10
    2ba8:	9f 90       	pop	r9
    2baa:	8f 90       	pop	r8
    2bac:	08 95       	ret

00002bae <isParalel>:
    2bae:	4f 92       	push	r4
    2bb0:	5f 92       	push	r5
    2bb2:	6f 92       	push	r6
    2bb4:	7f 92       	push	r7
    2bb6:	af 92       	push	r10
    2bb8:	bf 92       	push	r11
    2bba:	cf 92       	push	r12
    2bbc:	df 92       	push	r13
    2bbe:	ef 92       	push	r14
    2bc0:	ff 92       	push	r15
    2bc2:	0f 93       	push	r16
    2bc4:	1f 93       	push	r17
    2bc6:	cf 93       	push	r28
    2bc8:	df 93       	push	r29
    2bca:	00 d0       	rcall	.+0      	; 0x2bcc <isParalel+0x1e>
    2bcc:	00 d0       	rcall	.+0      	; 0x2bce <isParalel+0x20>
    2bce:	cd b7       	in	r28, 0x3d	; 61
    2bd0:	de b7       	in	r29, 0x3e	; 62
    2bd2:	2b 01       	movw	r4, r22
    2bd4:	3c 01       	movw	r6, r24
    2bd6:	29 83       	std	Y+1, r18	; 0x01
    2bd8:	3a 83       	std	Y+2, r19	; 0x02
    2bda:	4b 83       	std	Y+3, r20	; 0x03
    2bdc:	5c 83       	std	Y+4, r21	; 0x04
    2bde:	c8 01       	movw	r24, r16
    2be0:	b7 01       	movw	r22, r14
    2be2:	05 2e       	mov	r0, r21
    2be4:	59 e0       	ldi	r21, 0x09	; 9
    2be6:	66 0f       	add	r22, r22
    2be8:	77 1f       	adc	r23, r23
    2bea:	88 1f       	adc	r24, r24
    2bec:	99 1f       	adc	r25, r25
    2bee:	5a 95       	dec	r21
    2bf0:	d1 f7       	brne	.-12     	; 0x2be6 <isParalel+0x38>
    2bf2:	50 2d       	mov	r21, r0
    2bf4:	2a e6       	ldi	r18, 0x6A	; 106
    2bf6:	31 e0       	ldi	r19, 0x01	; 1
    2bf8:	40 e0       	ldi	r20, 0x00	; 0
    2bfa:	50 e0       	ldi	r21, 0x00	; 0
    2bfc:	0e 94 71 1b 	call	0x36e2	; 0x36e2 <__udivmodsi4>
    2c00:	89 81       	ldd	r24, Y+1	; 0x01
    2c02:	9a 81       	ldd	r25, Y+2	; 0x02
    2c04:	ab 81       	ldd	r26, Y+3	; 0x03
    2c06:	bc 81       	ldd	r27, Y+4	; 0x04
    2c08:	82 1b       	sub	r24, r18
    2c0a:	93 0b       	sbc	r25, r19
    2c0c:	a4 0b       	sbc	r26, r20
    2c0e:	b5 0b       	sbc	r27, r21
    2c10:	9c 01       	movw	r18, r24
    2c12:	ad 01       	movw	r20, r26
    2c14:	aa e6       	ldi	r26, 0x6A	; 106
    2c16:	b1 e0       	ldi	r27, 0x01	; 1
    2c18:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__muluhisi3>
    2c1c:	dc 01       	movw	r26, r24
    2c1e:	cb 01       	movw	r24, r22
    2c20:	07 2e       	mov	r0, r23
    2c22:	79 e0       	ldi	r23, 0x09	; 9
    2c24:	b6 95       	lsr	r27
    2c26:	a7 95       	ror	r26
    2c28:	97 95       	ror	r25
    2c2a:	87 95       	ror	r24
    2c2c:	7a 95       	dec	r23
    2c2e:	d1 f7       	brne	.-12     	; 0x2c24 <isParalel+0x76>
    2c30:	70 2d       	mov	r23, r0
    2c32:	48 16       	cp	r4, r24
    2c34:	59 06       	cpc	r5, r25
    2c36:	6a 06       	cpc	r6, r26
    2c38:	7b 06       	cpc	r7, r27
    2c3a:	a0 f4       	brcc	.+40     	; 0x2c64 <isParalel+0xb6>
    2c3c:	84 19       	sub	r24, r4
    2c3e:	95 09       	sbc	r25, r5
    2c40:	a6 09       	sbc	r26, r6
    2c42:	b7 09       	sbc	r27, r7
    2c44:	2d 89       	ldd	r18, Y+21	; 0x15
    2c46:	3e 89       	ldd	r19, Y+22	; 0x16
    2c48:	4f 89       	ldd	r20, Y+23	; 0x17
    2c4a:	58 8d       	ldd	r21, Y+24	; 0x18
    2c4c:	28 17       	cp	r18, r24
    2c4e:	39 07       	cpc	r19, r25
    2c50:	4a 07       	cpc	r20, r26
    2c52:	5b 07       	cpc	r21, r27
    2c54:	d8 f0       	brcs	.+54     	; 0x2c8c <isParalel+0xde>
    2c56:	a8 16       	cp	r10, r24
    2c58:	b9 06       	cpc	r11, r25
    2c5a:	ca 06       	cpc	r12, r26
    2c5c:	db 06       	cpc	r13, r27
    2c5e:	c0 f4       	brcc	.+48     	; 0x2c90 <isParalel+0xe2>
    2c60:	83 e0       	ldi	r24, 0x03	; 3
    2c62:	1b c0       	rjmp	.+54     	; 0x2c9a <isParalel+0xec>
    2c64:	48 1a       	sub	r4, r24
    2c66:	59 0a       	sbc	r5, r25
    2c68:	6a 0a       	sbc	r6, r26
    2c6a:	7b 0a       	sbc	r7, r27
    2c6c:	8d 89       	ldd	r24, Y+21	; 0x15
    2c6e:	9e 89       	ldd	r25, Y+22	; 0x16
    2c70:	af 89       	ldd	r26, Y+23	; 0x17
    2c72:	b8 8d       	ldd	r27, Y+24	; 0x18
    2c74:	84 15       	cp	r24, r4
    2c76:	95 05       	cpc	r25, r5
    2c78:	a6 05       	cpc	r26, r6
    2c7a:	b7 05       	cpc	r27, r7
    2c7c:	58 f0       	brcs	.+22     	; 0x2c94 <isParalel+0xe6>
    2c7e:	a4 14       	cp	r10, r4
    2c80:	b5 04       	cpc	r11, r5
    2c82:	c6 04       	cpc	r12, r6
    2c84:	d7 04       	cpc	r13, r7
    2c86:	40 f4       	brcc	.+16     	; 0x2c98 <isParalel+0xea>
    2c88:	81 e0       	ldi	r24, 0x01	; 1
    2c8a:	07 c0       	rjmp	.+14     	; 0x2c9a <isParalel+0xec>
    2c8c:	84 e0       	ldi	r24, 0x04	; 4
    2c8e:	05 c0       	rjmp	.+10     	; 0x2c9a <isParalel+0xec>
    2c90:	82 e0       	ldi	r24, 0x02	; 2
    2c92:	03 c0       	rjmp	.+6      	; 0x2c9a <isParalel+0xec>
    2c94:	80 e0       	ldi	r24, 0x00	; 0
    2c96:	01 c0       	rjmp	.+2      	; 0x2c9a <isParalel+0xec>
    2c98:	82 e0       	ldi	r24, 0x02	; 2
    2c9a:	0f 90       	pop	r0
    2c9c:	0f 90       	pop	r0
    2c9e:	0f 90       	pop	r0
    2ca0:	0f 90       	pop	r0
    2ca2:	df 91       	pop	r29
    2ca4:	cf 91       	pop	r28
    2ca6:	1f 91       	pop	r17
    2ca8:	0f 91       	pop	r16
    2caa:	ff 90       	pop	r15
    2cac:	ef 90       	pop	r14
    2cae:	df 90       	pop	r13
    2cb0:	cf 90       	pop	r12
    2cb2:	bf 90       	pop	r11
    2cb4:	af 90       	pop	r10
    2cb6:	7f 90       	pop	r7
    2cb8:	6f 90       	pop	r6
    2cba:	5f 90       	pop	r5
    2cbc:	4f 90       	pop	r4
    2cbe:	08 95       	ret

00002cc0 <SMPcheck>:
    2cc0:	af 92       	push	r10
    2cc2:	bf 92       	push	r11
    2cc4:	cf 92       	push	r12
    2cc6:	df 92       	push	r13
    2cc8:	ef 92       	push	r14
    2cca:	ff 92       	push	r15
    2ccc:	0f 93       	push	r16
    2cce:	1f 93       	push	r17
    2cd0:	cf 93       	push	r28
    2cd2:	df 93       	push	r29
    2cd4:	82 e0       	ldi	r24, 0x02	; 2
    2cd6:	0e 94 3a 08 	call	0x1074	; 0x1074 <getValueOfSensor>
    2cda:	ec 01       	movw	r28, r24
    2cdc:	81 e0       	ldi	r24, 0x01	; 1
    2cde:	0e 94 3a 08 	call	0x1074	; 0x1074 <getValueOfSensor>
    2ce2:	9e 01       	movw	r18, r28
    2ce4:	40 e0       	ldi	r20, 0x00	; 0
    2ce6:	50 e0       	ldi	r21, 0x00	; 0
    2ce8:	bc 01       	movw	r22, r24
    2cea:	80 e0       	ldi	r24, 0x00	; 0
    2cec:	90 e0       	ldi	r25, 0x00	; 0
    2cee:	1f 92       	push	r1
    2cf0:	1f 92       	push	r1
    2cf2:	1f 92       	push	r1
    2cf4:	e4 e6       	ldi	r30, 0x64	; 100
    2cf6:	ef 93       	push	r30
    2cf8:	0f 2e       	mov	r0, r31
    2cfa:	f6 e4       	ldi	r31, 0x46	; 70
    2cfc:	af 2e       	mov	r10, r31
    2cfe:	b1 2c       	mov	r11, r1
    2d00:	c1 2c       	mov	r12, r1
    2d02:	d1 2c       	mov	r13, r1
    2d04:	f0 2d       	mov	r31, r0
    2d06:	1f e5       	ldi	r17, 0x5F	; 95
    2d08:	e1 2e       	mov	r14, r17
    2d0a:	f1 2c       	mov	r15, r1
    2d0c:	00 e0       	ldi	r16, 0x00	; 0
    2d0e:	10 e0       	ldi	r17, 0x00	; 0
    2d10:	0e 94 d7 15 	call	0x2bae	; 0x2bae <isParalel>
    2d14:	0f 90       	pop	r0
    2d16:	0f 90       	pop	r0
    2d18:	0f 90       	pop	r0
    2d1a:	0f 90       	pop	r0
    2d1c:	c8 2f       	mov	r28, r24
    2d1e:	82 30       	cpi	r24, 0x02	; 2
    2d20:	29 f4       	brne	.+10     	; 0x2d2c <SMPcheck+0x6c>
    2d22:	80 91 01 01 	lds	r24, 0x0101
    2d26:	82 30       	cpi	r24, 0x02	; 2
    2d28:	a9 f5       	brne	.+106    	; 0x2d94 <SMPcheck+0xd4>
    2d2a:	30 c0       	rjmp	.+96     	; 0x2d8c <SMPcheck+0xcc>
    2d2c:	80 91 01 01 	lds	r24, 0x0101
    2d30:	c8 17       	cp	r28, r24
    2d32:	71 f1       	breq	.+92     	; 0x2d90 <SMPcheck+0xd0>
    2d34:	c2 30       	cpi	r28, 0x02	; 2
    2d36:	b9 f0       	breq	.+46     	; 0x2d66 <SMPcheck+0xa6>
    2d38:	28 f4       	brcc	.+10     	; 0x2d44 <SMPcheck+0x84>
    2d3a:	cc 23       	and	r28, r28
    2d3c:	41 f0       	breq	.+16     	; 0x2d4e <SMPcheck+0x8e>
    2d3e:	c1 30       	cpi	r28, 0x01	; 1
    2d40:	61 f0       	breq	.+24     	; 0x2d5a <SMPcheck+0x9a>
    2d42:	20 c0       	rjmp	.+64     	; 0x2d84 <SMPcheck+0xc4>
    2d44:	c3 30       	cpi	r28, 0x03	; 3
    2d46:	99 f0       	breq	.+38     	; 0x2d6e <SMPcheck+0xae>
    2d48:	c4 30       	cpi	r28, 0x04	; 4
    2d4a:	b9 f0       	breq	.+46     	; 0x2d7a <SMPcheck+0xba>
    2d4c:	1b c0       	rjmp	.+54     	; 0x2d84 <SMPcheck+0xc4>
    2d4e:	40 e0       	ldi	r20, 0x00	; 0
    2d50:	6b e4       	ldi	r22, 0x4B	; 75
    2d52:	8a e0       	ldi	r24, 0x0A	; 10
    2d54:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
    2d58:	15 c0       	rjmp	.+42     	; 0x2d84 <SMPcheck+0xc4>
    2d5a:	40 e0       	ldi	r20, 0x00	; 0
    2d5c:	6c e3       	ldi	r22, 0x3C	; 60
    2d5e:	8a e0       	ldi	r24, 0x0A	; 10
    2d60:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
    2d64:	0f c0       	rjmp	.+30     	; 0x2d84 <SMPcheck+0xc4>
    2d66:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
    2d6a:	81 e0       	ldi	r24, 0x01	; 1
    2d6c:	18 c0       	rjmp	.+48     	; 0x2d9e <SMPcheck+0xde>
    2d6e:	41 e0       	ldi	r20, 0x01	; 1
    2d70:	6c e3       	ldi	r22, 0x3C	; 60
    2d72:	8a e0       	ldi	r24, 0x0A	; 10
    2d74:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
    2d78:	05 c0       	rjmp	.+10     	; 0x2d84 <SMPcheck+0xc4>
    2d7a:	41 e0       	ldi	r20, 0x01	; 1
    2d7c:	6b e4       	ldi	r22, 0x4B	; 75
    2d7e:	8a e0       	ldi	r24, 0x0A	; 10
    2d80:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
    2d84:	c0 93 01 01 	sts	0x0101, r28
    2d88:	80 e0       	ldi	r24, 0x00	; 0
    2d8a:	09 c0       	rjmp	.+18     	; 0x2d9e <SMPcheck+0xde>
    2d8c:	81 e0       	ldi	r24, 0x01	; 1
    2d8e:	07 c0       	rjmp	.+14     	; 0x2d9e <SMPcheck+0xde>
    2d90:	80 e0       	ldi	r24, 0x00	; 0
    2d92:	05 c0       	rjmp	.+10     	; 0x2d9e <SMPcheck+0xde>
    2d94:	80 91 01 01 	lds	r24, 0x0101
    2d98:	82 30       	cpi	r24, 0x02	; 2
    2d9a:	29 f7       	brne	.-54     	; 0x2d66 <SMPcheck+0xa6>
    2d9c:	80 e0       	ldi	r24, 0x00	; 0
    2d9e:	df 91       	pop	r29
    2da0:	cf 91       	pop	r28
    2da2:	1f 91       	pop	r17
    2da4:	0f 91       	pop	r16
    2da6:	ff 90       	pop	r15
    2da8:	ef 90       	pop	r14
    2daa:	df 90       	pop	r13
    2dac:	cf 90       	pop	r12
    2dae:	bf 90       	pop	r11
    2db0:	af 90       	pop	r10
    2db2:	08 95       	ret

00002db4 <initParalelParking>:
    2db4:	81 e2       	ldi	r24, 0x21	; 33
    2db6:	80 93 8c 05 	sts	0x058C, r24
    2dba:	10 92 fc 05 	sts	0x05FC, r1
    2dbe:	10 92 f3 05 	sts	0x05F3, r1
    2dc2:	10 92 fd 05 	sts	0x05FD, r1
    2dc6:	10 92 fe 05 	sts	0x05FE, r1
    2dca:	10 92 ff 05 	sts	0x05FF, r1
    2dce:	10 92 00 06 	sts	0x0600, r1
    2dd2:	21 e0       	ldi	r18, 0x01	; 1
    2dd4:	40 e9       	ldi	r20, 0x90	; 144
    2dd6:	50 ed       	ldi	r21, 0xD0	; 208
    2dd8:	63 e0       	ldi	r22, 0x03	; 3
    2dda:	70 e0       	ldi	r23, 0x00	; 0
    2ddc:	81 ed       	ldi	r24, 0xD1	; 209
    2dde:	97 e1       	ldi	r25, 0x17	; 23
    2de0:	0e 94 4e 11 	call	0x229c	; 0x229c <addEntryIfNotExists>
    2de4:	08 95       	ret

00002de6 <checkMinim>:
    2de6:	cf 92       	push	r12
    2de8:	df 92       	push	r13
    2dea:	ef 92       	push	r14
    2dec:	ff 92       	push	r15
    2dee:	81 e0       	ldi	r24, 0x01	; 1
    2df0:	0e 94 3a 08 	call	0x1074	; 0x1074 <getValueOfSensor>
    2df4:	6c 01       	movw	r12, r24
    2df6:	e1 2c       	mov	r14, r1
    2df8:	f1 2c       	mov	r15, r1
    2dfa:	80 91 f3 05 	lds	r24, 0x05F3
    2dfe:	1f 92       	push	r1
    2e00:	8f 93       	push	r24
    2e02:	83 e0       	ldi	r24, 0x03	; 3
    2e04:	94 e0       	ldi	r25, 0x04	; 4
    2e06:	9f 93       	push	r25
    2e08:	8f 93       	push	r24
    2e0a:	8e e8       	ldi	r24, 0x8E	; 142
    2e0c:	95 e0       	ldi	r25, 0x05	; 5
    2e0e:	9f 93       	push	r25
    2e10:	8f 93       	push	r24
    2e12:	0e 94 c7 1b 	call	0x378e	; 0x378e <sprintf>
    2e16:	8e e8       	ldi	r24, 0x8E	; 142
    2e18:	95 e0       	ldi	r25, 0x05	; 5
    2e1a:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    2e1e:	0f 90       	pop	r0
    2e20:	0f 90       	pop	r0
    2e22:	0f 90       	pop	r0
    2e24:	0f 90       	pop	r0
    2e26:	0f 90       	pop	r0
    2e28:	0f 90       	pop	r0
    2e2a:	80 91 f3 05 	lds	r24, 0x05F3
    2e2e:	82 30       	cpi	r24, 0x02	; 2
    2e30:	09 f4       	brne	.+2      	; 0x2e34 <checkMinim+0x4e>
    2e32:	4c c0       	rjmp	.+152    	; 0x2ecc <checkMinim+0xe6>
    2e34:	28 f4       	brcc	.+10     	; 0x2e40 <checkMinim+0x5a>
    2e36:	88 23       	and	r24, r24
    2e38:	51 f0       	breq	.+20     	; 0x2e4e <checkMinim+0x68>
    2e3a:	81 30       	cpi	r24, 0x01	; 1
    2e3c:	d1 f0       	breq	.+52     	; 0x2e72 <checkMinim+0x8c>
    2e3e:	a5 c0       	rjmp	.+330    	; 0x2f8a <checkMinim+0x1a4>
    2e40:	83 30       	cpi	r24, 0x03	; 3
    2e42:	09 f4       	brne	.+2      	; 0x2e46 <checkMinim+0x60>
    2e44:	60 c0       	rjmp	.+192    	; 0x2f06 <checkMinim+0x120>
    2e46:	84 30       	cpi	r24, 0x04	; 4
    2e48:	09 f4       	brne	.+2      	; 0x2e4c <checkMinim+0x66>
    2e4a:	94 c0       	rjmp	.+296    	; 0x2f74 <checkMinim+0x18e>
    2e4c:	9e c0       	rjmp	.+316    	; 0x2f8a <checkMinim+0x1a4>
    2e4e:	81 e0       	ldi	r24, 0x01	; 1
    2e50:	80 93 f3 05 	sts	0x05F3, r24
    2e54:	c0 92 fd 05 	sts	0x05FD, r12
    2e58:	d0 92 fe 05 	sts	0x05FE, r13
    2e5c:	e0 92 ff 05 	sts	0x05FF, r14
    2e60:	f0 92 00 06 	sts	0x0600, r15
    2e64:	40 e0       	ldi	r20, 0x00	; 0
    2e66:	6a e5       	ldi	r22, 0x5A	; 90
    2e68:	8f e0       	ldi	r24, 0x0F	; 15
    2e6a:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
    2e6e:	80 e0       	ldi	r24, 0x00	; 0
    2e70:	93 c0       	rjmp	.+294    	; 0x2f98 <checkMinim+0x1b2>
    2e72:	80 91 fd 05 	lds	r24, 0x05FD
    2e76:	90 91 fe 05 	lds	r25, 0x05FE
    2e7a:	a0 91 ff 05 	lds	r26, 0x05FF
    2e7e:	b0 91 00 06 	lds	r27, 0x0600
    2e82:	ac 01       	movw	r20, r24
    2e84:	bd 01       	movw	r22, r26
    2e86:	4b 5f       	subi	r20, 0xFB	; 251
    2e88:	5f 4f       	sbci	r21, 0xFF	; 255
    2e8a:	6f 4f       	sbci	r22, 0xFF	; 255
    2e8c:	7f 4f       	sbci	r23, 0xFF	; 255
    2e8e:	4c 15       	cp	r20, r12
    2e90:	5d 05       	cpc	r21, r13
    2e92:	6e 05       	cpc	r22, r14
    2e94:	7f 05       	cpc	r23, r15
    2e96:	50 f4       	brcc	.+20     	; 0x2eac <checkMinim+0xc6>
    2e98:	c0 92 fd 05 	sts	0x05FD, r12
    2e9c:	d0 92 fe 05 	sts	0x05FE, r13
    2ea0:	e0 92 ff 05 	sts	0x05FF, r14
    2ea4:	f0 92 00 06 	sts	0x0600, r15
    2ea8:	80 e0       	ldi	r24, 0x00	; 0
    2eaa:	76 c0       	rjmp	.+236    	; 0x2f98 <checkMinim+0x1b2>
    2eac:	05 97       	sbiw	r24, 0x05	; 5
    2eae:	a1 09       	sbc	r26, r1
    2eb0:	b1 09       	sbc	r27, r1
    2eb2:	c8 16       	cp	r12, r24
    2eb4:	d9 06       	cpc	r13, r25
    2eb6:	ea 06       	cpc	r14, r26
    2eb8:	fb 06       	cpc	r15, r27
    2eba:	08 f0       	brcs	.+2      	; 0x2ebe <checkMinim+0xd8>
    2ebc:	68 c0       	rjmp	.+208    	; 0x2f8e <checkMinim+0x1a8>
    2ebe:	82 e0       	ldi	r24, 0x02	; 2
    2ec0:	80 93 f3 05 	sts	0x05F3, r24
    2ec4:	10 92 8d 05 	sts	0x058D, r1
    2ec8:	80 e0       	ldi	r24, 0x00	; 0
    2eca:	66 c0       	rjmp	.+204    	; 0x2f98 <checkMinim+0x1b2>
    2ecc:	80 91 8d 05 	lds	r24, 0x058D
    2ed0:	8f 5f       	subi	r24, 0xFF	; 255
    2ed2:	80 93 8d 05 	sts	0x058D, r24
    2ed6:	c0 92 fd 05 	sts	0x05FD, r12
    2eda:	d0 92 fe 05 	sts	0x05FE, r13
    2ede:	e0 92 ff 05 	sts	0x05FF, r14
    2ee2:	f0 92 00 06 	sts	0x0600, r15
    2ee6:	84 30       	cpi	r24, 0x04	; 4
    2ee8:	08 f4       	brcc	.+2      	; 0x2eec <checkMinim+0x106>
    2eea:	53 c0       	rjmp	.+166    	; 0x2f92 <checkMinim+0x1ac>
    2eec:	83 e0       	ldi	r24, 0x03	; 3
    2eee:	80 93 f3 05 	sts	0x05F3, r24
    2ef2:	c0 92 87 05 	sts	0x0587, r12
    2ef6:	d0 92 88 05 	sts	0x0588, r13
    2efa:	e0 92 89 05 	sts	0x0589, r14
    2efe:	f0 92 8a 05 	sts	0x058A, r15
    2f02:	80 e0       	ldi	r24, 0x00	; 0
    2f04:	49 c0       	rjmp	.+146    	; 0x2f98 <checkMinim+0x1b2>
    2f06:	80 91 fd 05 	lds	r24, 0x05FD
    2f0a:	90 91 fe 05 	lds	r25, 0x05FE
    2f0e:	a0 91 ff 05 	lds	r26, 0x05FF
    2f12:	b0 91 00 06 	lds	r27, 0x0600
    2f16:	8c 15       	cp	r24, r12
    2f18:	9d 05       	cpc	r25, r13
    2f1a:	ae 05       	cpc	r26, r14
    2f1c:	bf 05       	cpc	r27, r15
    2f1e:	48 f4       	brcc	.+18     	; 0x2f32 <checkMinim+0x14c>
    2f20:	84 e0       	ldi	r24, 0x04	; 4
    2f22:	80 93 f3 05 	sts	0x05F3, r24
    2f26:	10 92 8d 05 	sts	0x058D, r1
    2f2a:	41 e0       	ldi	r20, 0x01	; 1
    2f2c:	61 e4       	ldi	r22, 0x41	; 65
    2f2e:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
    2f32:	c0 92 fd 05 	sts	0x05FD, r12
    2f36:	d0 92 fe 05 	sts	0x05FE, r13
    2f3a:	e0 92 ff 05 	sts	0x05FF, r14
    2f3e:	f0 92 00 06 	sts	0x0600, r15
    2f42:	80 91 87 05 	lds	r24, 0x0587
    2f46:	90 91 88 05 	lds	r25, 0x0588
    2f4a:	a0 91 89 05 	lds	r26, 0x0589
    2f4e:	b0 91 8a 05 	lds	r27, 0x058A
    2f52:	8c 15       	cp	r24, r12
    2f54:	9d 05       	cpc	r25, r13
    2f56:	ae 05       	cpc	r26, r14
    2f58:	bf 05       	cpc	r27, r15
    2f5a:	10 f4       	brcc	.+4      	; 0x2f60 <checkMinim+0x17a>
    2f5c:	6c 01       	movw	r12, r24
    2f5e:	7d 01       	movw	r14, r26
    2f60:	c0 92 87 05 	sts	0x0587, r12
    2f64:	d0 92 88 05 	sts	0x0588, r13
    2f68:	e0 92 89 05 	sts	0x0589, r14
    2f6c:	f0 92 8a 05 	sts	0x058A, r15
    2f70:	80 e0       	ldi	r24, 0x00	; 0
    2f72:	12 c0       	rjmp	.+36     	; 0x2f98 <checkMinim+0x1b2>
    2f74:	80 91 8d 05 	lds	r24, 0x058D
    2f78:	8f 5f       	subi	r24, 0xFF	; 255
    2f7a:	80 93 8d 05 	sts	0x058D, r24
    2f7e:	85 30       	cpi	r24, 0x05	; 5
    2f80:	50 f0       	brcs	.+20     	; 0x2f96 <checkMinim+0x1b0>
    2f82:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
    2f86:	81 e0       	ldi	r24, 0x01	; 1
    2f88:	07 c0       	rjmp	.+14     	; 0x2f98 <checkMinim+0x1b2>
    2f8a:	80 e0       	ldi	r24, 0x00	; 0
    2f8c:	05 c0       	rjmp	.+10     	; 0x2f98 <checkMinim+0x1b2>
    2f8e:	80 e0       	ldi	r24, 0x00	; 0
    2f90:	03 c0       	rjmp	.+6      	; 0x2f98 <checkMinim+0x1b2>
    2f92:	80 e0       	ldi	r24, 0x00	; 0
    2f94:	01 c0       	rjmp	.+2      	; 0x2f98 <checkMinim+0x1b2>
    2f96:	80 e0       	ldi	r24, 0x00	; 0
    2f98:	ff 90       	pop	r15
    2f9a:	ef 90       	pop	r14
    2f9c:	df 90       	pop	r13
    2f9e:	cf 90       	pop	r12
    2fa0:	08 95       	ret

00002fa2 <paralelParkingSMF>:
    2fa2:	8f 92       	push	r8
    2fa4:	9f 92       	push	r9
    2fa6:	af 92       	push	r10
    2fa8:	bf 92       	push	r11
    2faa:	cf 92       	push	r12
    2fac:	df 92       	push	r13
    2fae:	ef 92       	push	r14
    2fb0:	ff 92       	push	r15
    2fb2:	0f 93       	push	r16
    2fb4:	82 e0       	ldi	r24, 0x02	; 2
    2fb6:	0e 94 3a 08 	call	0x1074	; 0x1074 <getValueOfSensor>
    2fba:	4c 01       	movw	r8, r24
    2fbc:	a1 2c       	mov	r10, r1
    2fbe:	b1 2c       	mov	r11, r1
    2fc0:	81 e0       	ldi	r24, 0x01	; 1
    2fc2:	0e 94 3a 08 	call	0x1074	; 0x1074 <getValueOfSensor>
    2fc6:	6c 01       	movw	r12, r24
    2fc8:	e1 2c       	mov	r14, r1
    2fca:	f1 2c       	mov	r15, r1
    2fcc:	40 91 8c 05 	lds	r20, 0x058C
    2fd0:	50 e0       	ldi	r21, 0x00	; 0
    2fd2:	45 36       	cpi	r20, 0x65	; 101
    2fd4:	51 05       	cpc	r21, r1
    2fd6:	08 f0       	brcs	.+2      	; 0x2fda <paralelParkingSMF+0x38>
    2fd8:	5d c3       	rjmp	.+1722   	; 0x3694 <paralelParkingSMF+0x6f2>
    2fda:	fa 01       	movw	r30, r20
    2fdc:	e9 5a       	subi	r30, 0xA9	; 169
    2fde:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe0:	0c 94 93 1b 	jmp	0x3726	; 0x3726 <__tablejump2__>
    2fe4:	60 ea       	ldi	r22, 0xA0	; 160
    2fe6:	8e e1       	ldi	r24, 0x1E	; 30
    2fe8:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
    2fec:	80 91 40 04 	lds	r24, 0x0440
    2ff0:	90 91 41 04 	lds	r25, 0x0441
    2ff4:	a0 91 42 04 	lds	r26, 0x0442
    2ff8:	b0 91 43 04 	lds	r27, 0x0443
    2ffc:	40 91 46 04 	lds	r20, 0x0446
    3000:	50 91 47 04 	lds	r21, 0x0447
    3004:	60 91 48 04 	lds	r22, 0x0448
    3008:	70 91 49 04 	lds	r23, 0x0449
    300c:	84 0f       	add	r24, r20
    300e:	95 1f       	adc	r25, r21
    3010:	a6 1f       	adc	r26, r22
    3012:	b7 1f       	adc	r27, r23
    3014:	b6 95       	lsr	r27
    3016:	a7 95       	ror	r26
    3018:	97 95       	ror	r25
    301a:	87 95       	ror	r24
    301c:	b6 95       	lsr	r27
    301e:	a7 95       	ror	r26
    3020:	97 95       	ror	r25
    3022:	87 95       	ror	r24
    3024:	ac 01       	movw	r20, r24
    3026:	bd 01       	movw	r22, r26
    3028:	44 0f       	add	r20, r20
    302a:	55 1f       	adc	r21, r21
    302c:	66 1f       	adc	r22, r22
    302e:	77 1f       	adc	r23, r23
    3030:	44 0f       	add	r20, r20
    3032:	55 1f       	adc	r21, r21
    3034:	66 1f       	adc	r22, r22
    3036:	77 1f       	adc	r23, r23
    3038:	6a 01       	movw	r12, r20
    303a:	7b 01       	movw	r14, r22
    303c:	cc 0c       	add	r12, r12
    303e:	dd 1c       	adc	r13, r13
    3040:	ee 1c       	adc	r14, r14
    3042:	ff 1c       	adc	r15, r15
    3044:	cc 0c       	add	r12, r12
    3046:	dd 1c       	adc	r13, r13
    3048:	ee 1c       	adc	r14, r14
    304a:	ff 1c       	adc	r15, r15
    304c:	4c 0d       	add	r20, r12
    304e:	5d 1d       	adc	r21, r13
    3050:	6e 1d       	adc	r22, r14
    3052:	7f 1d       	adc	r23, r15
    3054:	84 0f       	add	r24, r20
    3056:	95 1f       	adc	r25, r21
    3058:	a6 1f       	adc	r26, r22
    305a:	b7 1f       	adc	r27, r23
    305c:	88 53       	subi	r24, 0x38	; 56
    305e:	9f 4f       	sbci	r25, 0xFF	; 255
    3060:	af 4f       	sbci	r26, 0xFF	; 255
    3062:	bf 4f       	sbci	r27, 0xFF	; 255
    3064:	80 93 02 06 	sts	0x0602, r24
    3068:	90 93 03 06 	sts	0x0603, r25
    306c:	a0 93 04 06 	sts	0x0604, r26
    3070:	b0 93 05 06 	sts	0x0605, r27
    3074:	82 e2       	ldi	r24, 0x22	; 34
    3076:	80 93 8c 05 	sts	0x058C, r24
    307a:	80 e0       	ldi	r24, 0x00	; 0
    307c:	28 c3       	rjmp	.+1616   	; 0x36ce <paralelParkingSMF+0x72c>
    307e:	80 91 40 04 	lds	r24, 0x0440
    3082:	90 91 41 04 	lds	r25, 0x0441
    3086:	a0 91 42 04 	lds	r26, 0x0442
    308a:	b0 91 43 04 	lds	r27, 0x0443
    308e:	40 91 46 04 	lds	r20, 0x0446
    3092:	50 91 47 04 	lds	r21, 0x0447
    3096:	60 91 48 04 	lds	r22, 0x0448
    309a:	70 91 49 04 	lds	r23, 0x0449
    309e:	84 0f       	add	r24, r20
    30a0:	95 1f       	adc	r25, r21
    30a2:	a6 1f       	adc	r26, r22
    30a4:	b7 1f       	adc	r27, r23
    30a6:	b6 95       	lsr	r27
    30a8:	a7 95       	ror	r26
    30aa:	97 95       	ror	r25
    30ac:	87 95       	ror	r24
    30ae:	b6 95       	lsr	r27
    30b0:	a7 95       	ror	r26
    30b2:	97 95       	ror	r25
    30b4:	87 95       	ror	r24
    30b6:	ac 01       	movw	r20, r24
    30b8:	bd 01       	movw	r22, r26
    30ba:	44 0f       	add	r20, r20
    30bc:	55 1f       	adc	r21, r21
    30be:	66 1f       	adc	r22, r22
    30c0:	77 1f       	adc	r23, r23
    30c2:	44 0f       	add	r20, r20
    30c4:	55 1f       	adc	r21, r21
    30c6:	66 1f       	adc	r22, r22
    30c8:	77 1f       	adc	r23, r23
    30ca:	6a 01       	movw	r12, r20
    30cc:	7b 01       	movw	r14, r22
    30ce:	cc 0c       	add	r12, r12
    30d0:	dd 1c       	adc	r13, r13
    30d2:	ee 1c       	adc	r14, r14
    30d4:	ff 1c       	adc	r15, r15
    30d6:	cc 0c       	add	r12, r12
    30d8:	dd 1c       	adc	r13, r13
    30da:	ee 1c       	adc	r14, r14
    30dc:	ff 1c       	adc	r15, r15
    30de:	4c 0d       	add	r20, r12
    30e0:	5d 1d       	adc	r21, r13
    30e2:	6e 1d       	adc	r22, r14
    30e4:	7f 1d       	adc	r23, r15
    30e6:	84 0f       	add	r24, r20
    30e8:	95 1f       	adc	r25, r21
    30ea:	a6 1f       	adc	r26, r22
    30ec:	b7 1f       	adc	r27, r23
    30ee:	c0 90 02 06 	lds	r12, 0x0602
    30f2:	d0 90 03 06 	lds	r13, 0x0603
    30f6:	e0 90 04 06 	lds	r14, 0x0604
    30fa:	f0 90 05 06 	lds	r15, 0x0605
    30fe:	c8 16       	cp	r12, r24
    3100:	d9 06       	cpc	r13, r25
    3102:	ea 06       	cpc	r14, r26
    3104:	fb 06       	cpc	r15, r27
    3106:	08 f0       	brcs	.+2      	; 0x310a <paralelParkingSMF+0x168>
    3108:	c7 c2       	rjmp	.+1422   	; 0x3698 <paralelParkingSMF+0x6f6>
    310a:	10 92 8c 05 	sts	0x058C, r1
    310e:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
    3112:	80 e0       	ldi	r24, 0x00	; 0
    3114:	dc c2       	rjmp	.+1464   	; 0x36ce <paralelParkingSMF+0x72c>
    3116:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <SMPcheck>
    311a:	81 30       	cpi	r24, 0x01	; 1
    311c:	09 f0       	breq	.+2      	; 0x3120 <paralelParkingSMF+0x17e>
    311e:	be c2       	rjmp	.+1404   	; 0x369c <paralelParkingSMF+0x6fa>
    3120:	80 93 8c 05 	sts	0x058C, r24
    3124:	6c e3       	ldi	r22, 0x3C	; 60
    3126:	8e e1       	ldi	r24, 0x1E	; 30
    3128:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
    312c:	80 e0       	ldi	r24, 0x00	; 0
    312e:	cf c2       	rjmp	.+1438   	; 0x36ce <paralelParkingSMF+0x72c>
    3130:	29 e2       	ldi	r18, 0x29	; 41
    3132:	c2 1a       	sub	r12, r18
    3134:	d1 08       	sbc	r13, r1
    3136:	e1 08       	sbc	r14, r1
    3138:	f1 08       	sbc	r15, r1
    313a:	39 e5       	ldi	r19, 0x59	; 89
    313c:	c3 16       	cp	r12, r19
    313e:	d1 04       	cpc	r13, r1
    3140:	e1 04       	cpc	r14, r1
    3142:	f1 04       	cpc	r15, r1
    3144:	08 f0       	brcs	.+2      	; 0x3148 <paralelParkingSMF+0x1a6>
    3146:	ac c2       	rjmp	.+1368   	; 0x36a0 <paralelParkingSMF+0x6fe>
    3148:	82 e0       	ldi	r24, 0x02	; 2
    314a:	80 93 8c 05 	sts	0x058C, r24
    314e:	80 e0       	ldi	r24, 0x00	; 0
    3150:	be c2       	rjmp	.+1404   	; 0x36ce <paralelParkingSMF+0x72c>
    3152:	4d e2       	ldi	r20, 0x2D	; 45
    3154:	c4 16       	cp	r12, r20
    3156:	41 e0       	ldi	r20, 0x01	; 1
    3158:	d4 06       	cpc	r13, r20
    315a:	e1 04       	cpc	r14, r1
    315c:	f1 04       	cpc	r15, r1
    315e:	08 f4       	brcc	.+2      	; 0x3162 <paralelParkingSMF+0x1c0>
    3160:	a1 c2       	rjmp	.+1346   	; 0x36a4 <paralelParkingSMF+0x702>
    3162:	84 e6       	ldi	r24, 0x64	; 100
    3164:	80 93 8c 05 	sts	0x058C, r24
    3168:	6e e1       	ldi	r22, 0x1E	; 30
    316a:	8a e0       	ldi	r24, 0x0A	; 10
    316c:	0e 94 7f 05 	call	0xafe	; 0xafe <goBack>
    3170:	80 e0       	ldi	r24, 0x00	; 0
    3172:	ad c2       	rjmp	.+1370   	; 0x36ce <paralelParkingSMF+0x72c>
    3174:	59 e2       	ldi	r21, 0x29	; 41
    3176:	c5 1a       	sub	r12, r21
    3178:	d1 08       	sbc	r13, r1
    317a:	e1 08       	sbc	r14, r1
    317c:	f1 08       	sbc	r15, r1
    317e:	89 e5       	ldi	r24, 0x59	; 89
    3180:	c8 16       	cp	r12, r24
    3182:	d1 04       	cpc	r13, r1
    3184:	e1 04       	cpc	r14, r1
    3186:	f1 04       	cpc	r15, r1
    3188:	08 f0       	brcs	.+2      	; 0x318c <paralelParkingSMF+0x1ea>
    318a:	8e c2       	rjmp	.+1308   	; 0x36a8 <paralelParkingSMF+0x706>
    318c:	62 e3       	ldi	r22, 0x32	; 50
    318e:	84 e1       	ldi	r24, 0x14	; 20
    3190:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
    3194:	80 91 40 04 	lds	r24, 0x0440
    3198:	90 91 41 04 	lds	r25, 0x0441
    319c:	a0 91 42 04 	lds	r26, 0x0442
    31a0:	b0 91 43 04 	lds	r27, 0x0443
    31a4:	40 91 46 04 	lds	r20, 0x0446
    31a8:	50 91 47 04 	lds	r21, 0x0447
    31ac:	60 91 48 04 	lds	r22, 0x0448
    31b0:	70 91 49 04 	lds	r23, 0x0449
    31b4:	84 0f       	add	r24, r20
    31b6:	95 1f       	adc	r25, r21
    31b8:	a6 1f       	adc	r26, r22
    31ba:	b7 1f       	adc	r27, r23
    31bc:	b6 95       	lsr	r27
    31be:	a7 95       	ror	r26
    31c0:	97 95       	ror	r25
    31c2:	87 95       	ror	r24
    31c4:	b6 95       	lsr	r27
    31c6:	a7 95       	ror	r26
    31c8:	97 95       	ror	r25
    31ca:	87 95       	ror	r24
    31cc:	ac 01       	movw	r20, r24
    31ce:	bd 01       	movw	r22, r26
    31d0:	44 0f       	add	r20, r20
    31d2:	55 1f       	adc	r21, r21
    31d4:	66 1f       	adc	r22, r22
    31d6:	77 1f       	adc	r23, r23
    31d8:	44 0f       	add	r20, r20
    31da:	55 1f       	adc	r21, r21
    31dc:	66 1f       	adc	r22, r22
    31de:	77 1f       	adc	r23, r23
    31e0:	6a 01       	movw	r12, r20
    31e2:	7b 01       	movw	r14, r22
    31e4:	cc 0c       	add	r12, r12
    31e6:	dd 1c       	adc	r13, r13
    31e8:	ee 1c       	adc	r14, r14
    31ea:	ff 1c       	adc	r15, r15
    31ec:	cc 0c       	add	r12, r12
    31ee:	dd 1c       	adc	r13, r13
    31f0:	ee 1c       	adc	r14, r14
    31f2:	ff 1c       	adc	r15, r15
    31f4:	4c 0d       	add	r20, r12
    31f6:	5d 1d       	adc	r21, r13
    31f8:	6e 1d       	adc	r22, r14
    31fa:	7f 1d       	adc	r23, r15
    31fc:	84 0f       	add	r24, r20
    31fe:	95 1f       	adc	r25, r21
    3200:	a6 1f       	adc	r26, r22
    3202:	b7 1f       	adc	r27, r23
    3204:	82 59       	subi	r24, 0x92	; 146
    3206:	9f 4f       	sbci	r25, 0xFF	; 255
    3208:	af 4f       	sbci	r26, 0xFF	; 255
    320a:	bf 4f       	sbci	r27, 0xFF	; 255
    320c:	80 93 02 06 	sts	0x0602, r24
    3210:	90 93 03 06 	sts	0x0603, r25
    3214:	a0 93 04 06 	sts	0x0604, r26
    3218:	b0 93 05 06 	sts	0x0605, r27
    321c:	83 e0       	ldi	r24, 0x03	; 3
    321e:	80 93 8c 05 	sts	0x058C, r24
    3222:	80 e0       	ldi	r24, 0x00	; 0
    3224:	54 c2       	rjmp	.+1192   	; 0x36ce <paralelParkingSMF+0x72c>
    3226:	80 91 40 04 	lds	r24, 0x0440
    322a:	90 91 41 04 	lds	r25, 0x0441
    322e:	a0 91 42 04 	lds	r26, 0x0442
    3232:	b0 91 43 04 	lds	r27, 0x0443
    3236:	40 91 46 04 	lds	r20, 0x0446
    323a:	50 91 47 04 	lds	r21, 0x0447
    323e:	60 91 48 04 	lds	r22, 0x0448
    3242:	70 91 49 04 	lds	r23, 0x0449
    3246:	84 0f       	add	r24, r20
    3248:	95 1f       	adc	r25, r21
    324a:	a6 1f       	adc	r26, r22
    324c:	b7 1f       	adc	r27, r23
    324e:	b6 95       	lsr	r27
    3250:	a7 95       	ror	r26
    3252:	97 95       	ror	r25
    3254:	87 95       	ror	r24
    3256:	b6 95       	lsr	r27
    3258:	a7 95       	ror	r26
    325a:	97 95       	ror	r25
    325c:	87 95       	ror	r24
    325e:	ac 01       	movw	r20, r24
    3260:	bd 01       	movw	r22, r26
    3262:	44 0f       	add	r20, r20
    3264:	55 1f       	adc	r21, r21
    3266:	66 1f       	adc	r22, r22
    3268:	77 1f       	adc	r23, r23
    326a:	44 0f       	add	r20, r20
    326c:	55 1f       	adc	r21, r21
    326e:	66 1f       	adc	r22, r22
    3270:	77 1f       	adc	r23, r23
    3272:	6a 01       	movw	r12, r20
    3274:	7b 01       	movw	r14, r22
    3276:	cc 0c       	add	r12, r12
    3278:	dd 1c       	adc	r13, r13
    327a:	ee 1c       	adc	r14, r14
    327c:	ff 1c       	adc	r15, r15
    327e:	cc 0c       	add	r12, r12
    3280:	dd 1c       	adc	r13, r13
    3282:	ee 1c       	adc	r14, r14
    3284:	ff 1c       	adc	r15, r15
    3286:	4c 0d       	add	r20, r12
    3288:	5d 1d       	adc	r21, r13
    328a:	6e 1d       	adc	r22, r14
    328c:	7f 1d       	adc	r23, r15
    328e:	84 0f       	add	r24, r20
    3290:	95 1f       	adc	r25, r21
    3292:	a6 1f       	adc	r26, r22
    3294:	b7 1f       	adc	r27, r23
    3296:	c0 90 02 06 	lds	r12, 0x0602
    329a:	d0 90 03 06 	lds	r13, 0x0603
    329e:	e0 90 04 06 	lds	r14, 0x0604
    32a2:	f0 90 05 06 	lds	r15, 0x0605
    32a6:	c8 16       	cp	r12, r24
    32a8:	d9 06       	cpc	r13, r25
    32aa:	ea 06       	cpc	r14, r26
    32ac:	fb 06       	cpc	r15, r27
    32ae:	08 f0       	brcs	.+2      	; 0x32b2 <paralelParkingSMF+0x310>
    32b0:	fd c1       	rjmp	.+1018   	; 0x36ac <paralelParkingSMF+0x70a>
    32b2:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
    32b6:	84 e0       	ldi	r24, 0x04	; 4
    32b8:	80 93 8c 05 	sts	0x058C, r24
    32bc:	02 e3       	ldi	r16, 0x32	; 50
    32be:	21 e0       	ldi	r18, 0x01	; 1
    32c0:	4a ea       	ldi	r20, 0xAA	; 170
    32c2:	60 e0       	ldi	r22, 0x00	; 0
    32c4:	85 e0       	ldi	r24, 0x05	; 5
    32c6:	0e 94 70 06 	call	0xce0	; 0xce0 <rotireSmechera>
    32ca:	80 e0       	ldi	r24, 0x00	; 0
    32cc:	00 c2       	rjmp	.+1024   	; 0x36ce <paralelParkingSMF+0x72c>
    32ce:	28 ec       	ldi	r18, 0xC8	; 200
    32d0:	c2 16       	cp	r12, r18
    32d2:	d1 04       	cpc	r13, r1
    32d4:	e1 04       	cpc	r14, r1
    32d6:	f1 04       	cpc	r15, r1
    32d8:	08 f0       	brcs	.+2      	; 0x32dc <paralelParkingSMF+0x33a>
    32da:	ea c1       	rjmp	.+980    	; 0x36b0 <paralelParkingSMF+0x70e>
    32dc:	85 e0       	ldi	r24, 0x05	; 5
    32de:	80 93 8c 05 	sts	0x058C, r24
    32e2:	41 e0       	ldi	r20, 0x01	; 1
    32e4:	66 e4       	ldi	r22, 0x46	; 70
    32e6:	8a e0       	ldi	r24, 0x0A	; 10
    32e8:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
    32ec:	80 e0       	ldi	r24, 0x00	; 0
    32ee:	ef c1       	rjmp	.+990    	; 0x36ce <paralelParkingSMF+0x72c>
    32f0:	3d ed       	ldi	r19, 0xDD	; 221
    32f2:	c3 16       	cp	r12, r19
    32f4:	d1 04       	cpc	r13, r1
    32f6:	e1 04       	cpc	r14, r1
    32f8:	f1 04       	cpc	r15, r1
    32fa:	08 f4       	brcc	.+2      	; 0x32fe <paralelParkingSMF+0x35c>
    32fc:	db c1       	rjmp	.+950    	; 0x36b4 <paralelParkingSMF+0x712>
    32fe:	62 e3       	ldi	r22, 0x32	; 50
    3300:	8f e0       	ldi	r24, 0x0F	; 15
    3302:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
    3306:	86 e0       	ldi	r24, 0x06	; 6
    3308:	80 93 8c 05 	sts	0x058C, r24
    330c:	80 e0       	ldi	r24, 0x00	; 0
    330e:	df c1       	rjmp	.+958    	; 0x36ce <paralelParkingSMF+0x72c>
    3310:	4a ea       	ldi	r20, 0xAA	; 170
    3312:	84 16       	cp	r8, r20
    3314:	91 04       	cpc	r9, r1
    3316:	a1 04       	cpc	r10, r1
    3318:	b1 04       	cpc	r11, r1
    331a:	08 f0       	brcs	.+2      	; 0x331e <paralelParkingSMF+0x37c>
    331c:	cd c1       	rjmp	.+922    	; 0x36b8 <paralelParkingSMF+0x716>
    331e:	87 e0       	ldi	r24, 0x07	; 7
    3320:	80 93 8c 05 	sts	0x058C, r24
    3324:	10 92 f3 05 	sts	0x05F3, r1
    3328:	10 92 fd 05 	sts	0x05FD, r1
    332c:	10 92 fe 05 	sts	0x05FE, r1
    3330:	10 92 ff 05 	sts	0x05FF, r1
    3334:	10 92 00 06 	sts	0x0600, r1
    3338:	80 e0       	ldi	r24, 0x00	; 0
    333a:	c9 c1       	rjmp	.+914    	; 0x36ce <paralelParkingSMF+0x72c>
    333c:	0e 94 f3 16 	call	0x2de6	; 0x2de6 <checkMinim>
    3340:	88 23       	and	r24, r24
    3342:	09 f4       	brne	.+2      	; 0x3346 <paralelParkingSMF+0x3a4>
    3344:	bb c1       	rjmp	.+886    	; 0x36bc <paralelParkingSMF+0x71a>
    3346:	88 e0       	ldi	r24, 0x08	; 8
    3348:	80 93 8c 05 	sts	0x058C, r24
    334c:	68 e2       	ldi	r22, 0x28	; 40
    334e:	8f e0       	ldi	r24, 0x0F	; 15
    3350:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
    3354:	80 e0       	ldi	r24, 0x00	; 0
    3356:	bb c1       	rjmp	.+886    	; 0x36ce <paralelParkingSMF+0x72c>
    3358:	54 e6       	ldi	r21, 0x64	; 100
    335a:	85 16       	cp	r8, r21
    335c:	91 04       	cpc	r9, r1
    335e:	a1 04       	cpc	r10, r1
    3360:	b1 04       	cpc	r11, r1
    3362:	08 f0       	brcs	.+2      	; 0x3366 <paralelParkingSMF+0x3c4>
    3364:	ad c1       	rjmp	.+858    	; 0x36c0 <paralelParkingSMF+0x71e>
    3366:	80 91 40 04 	lds	r24, 0x0440
    336a:	90 91 41 04 	lds	r25, 0x0441
    336e:	a0 91 42 04 	lds	r26, 0x0442
    3372:	b0 91 43 04 	lds	r27, 0x0443
    3376:	40 91 46 04 	lds	r20, 0x0446
    337a:	50 91 47 04 	lds	r21, 0x0447
    337e:	60 91 48 04 	lds	r22, 0x0448
    3382:	70 91 49 04 	lds	r23, 0x0449
    3386:	84 0f       	add	r24, r20
    3388:	95 1f       	adc	r25, r21
    338a:	a6 1f       	adc	r26, r22
    338c:	b7 1f       	adc	r27, r23
    338e:	b6 95       	lsr	r27
    3390:	a7 95       	ror	r26
    3392:	97 95       	ror	r25
    3394:	87 95       	ror	r24
    3396:	b6 95       	lsr	r27
    3398:	a7 95       	ror	r26
    339a:	97 95       	ror	r25
    339c:	87 95       	ror	r24
    339e:	ac 01       	movw	r20, r24
    33a0:	bd 01       	movw	r22, r26
    33a2:	44 0f       	add	r20, r20
    33a4:	55 1f       	adc	r21, r21
    33a6:	66 1f       	adc	r22, r22
    33a8:	77 1f       	adc	r23, r23
    33aa:	44 0f       	add	r20, r20
    33ac:	55 1f       	adc	r21, r21
    33ae:	66 1f       	adc	r22, r22
    33b0:	77 1f       	adc	r23, r23
    33b2:	6a 01       	movw	r12, r20
    33b4:	7b 01       	movw	r14, r22
    33b6:	cc 0c       	add	r12, r12
    33b8:	dd 1c       	adc	r13, r13
    33ba:	ee 1c       	adc	r14, r14
    33bc:	ff 1c       	adc	r15, r15
    33be:	cc 0c       	add	r12, r12
    33c0:	dd 1c       	adc	r13, r13
    33c2:	ee 1c       	adc	r14, r14
    33c4:	ff 1c       	adc	r15, r15
    33c6:	4c 0d       	add	r20, r12
    33c8:	5d 1d       	adc	r21, r13
    33ca:	6e 1d       	adc	r22, r14
    33cc:	7f 1d       	adc	r23, r15
    33ce:	84 0f       	add	r24, r20
    33d0:	95 1f       	adc	r25, r21
    33d2:	a6 1f       	adc	r26, r22
    33d4:	b7 1f       	adc	r27, r23
    33d6:	8c 59       	subi	r24, 0x9C	; 156
    33d8:	9f 4f       	sbci	r25, 0xFF	; 255
    33da:	af 4f       	sbci	r26, 0xFF	; 255
    33dc:	bf 4f       	sbci	r27, 0xFF	; 255
    33de:	80 93 02 06 	sts	0x0602, r24
    33e2:	90 93 03 06 	sts	0x0603, r25
    33e6:	a0 93 04 06 	sts	0x0604, r26
    33ea:	b0 93 05 06 	sts	0x0605, r27
    33ee:	89 e0       	ldi	r24, 0x09	; 9
    33f0:	80 93 8c 05 	sts	0x058C, r24
    33f4:	62 e3       	ldi	r22, 0x32	; 50
    33f6:	8a e0       	ldi	r24, 0x0A	; 10
    33f8:	0e 94 7f 05 	call	0xafe	; 0xafe <goBack>
    33fc:	80 e0       	ldi	r24, 0x00	; 0
    33fe:	67 c1       	rjmp	.+718    	; 0x36ce <paralelParkingSMF+0x72c>
    3400:	80 91 40 04 	lds	r24, 0x0440
    3404:	90 91 41 04 	lds	r25, 0x0441
    3408:	a0 91 42 04 	lds	r26, 0x0442
    340c:	b0 91 43 04 	lds	r27, 0x0443
    3410:	40 91 46 04 	lds	r20, 0x0446
    3414:	50 91 47 04 	lds	r21, 0x0447
    3418:	60 91 48 04 	lds	r22, 0x0448
    341c:	70 91 49 04 	lds	r23, 0x0449
    3420:	84 0f       	add	r24, r20
    3422:	95 1f       	adc	r25, r21
    3424:	a6 1f       	adc	r26, r22
    3426:	b7 1f       	adc	r27, r23
    3428:	b6 95       	lsr	r27
    342a:	a7 95       	ror	r26
    342c:	97 95       	ror	r25
    342e:	87 95       	ror	r24
    3430:	b6 95       	lsr	r27
    3432:	a7 95       	ror	r26
    3434:	97 95       	ror	r25
    3436:	87 95       	ror	r24
    3438:	ac 01       	movw	r20, r24
    343a:	bd 01       	movw	r22, r26
    343c:	44 0f       	add	r20, r20
    343e:	55 1f       	adc	r21, r21
    3440:	66 1f       	adc	r22, r22
    3442:	77 1f       	adc	r23, r23
    3444:	44 0f       	add	r20, r20
    3446:	55 1f       	adc	r21, r21
    3448:	66 1f       	adc	r22, r22
    344a:	77 1f       	adc	r23, r23
    344c:	6a 01       	movw	r12, r20
    344e:	7b 01       	movw	r14, r22
    3450:	cc 0c       	add	r12, r12
    3452:	dd 1c       	adc	r13, r13
    3454:	ee 1c       	adc	r14, r14
    3456:	ff 1c       	adc	r15, r15
    3458:	cc 0c       	add	r12, r12
    345a:	dd 1c       	adc	r13, r13
    345c:	ee 1c       	adc	r14, r14
    345e:	ff 1c       	adc	r15, r15
    3460:	4c 0d       	add	r20, r12
    3462:	5d 1d       	adc	r21, r13
    3464:	6e 1d       	adc	r22, r14
    3466:	7f 1d       	adc	r23, r15
    3468:	84 0f       	add	r24, r20
    346a:	95 1f       	adc	r25, r21
    346c:	a6 1f       	adc	r26, r22
    346e:	b7 1f       	adc	r27, r23
    3470:	c0 90 02 06 	lds	r12, 0x0602
    3474:	d0 90 03 06 	lds	r13, 0x0603
    3478:	e0 90 04 06 	lds	r14, 0x0604
    347c:	f0 90 05 06 	lds	r15, 0x0605
    3480:	c8 16       	cp	r12, r24
    3482:	d9 06       	cpc	r13, r25
    3484:	ea 06       	cpc	r14, r26
    3486:	fb 06       	cpc	r15, r27
    3488:	08 f0       	brcs	.+2      	; 0x348c <paralelParkingSMF+0x4ea>
    348a:	1c c1       	rjmp	.+568    	; 0x36c4 <paralelParkingSMF+0x722>
    348c:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
    3490:	8a e0       	ldi	r24, 0x0A	; 10
    3492:	80 93 8c 05 	sts	0x058C, r24
    3496:	80 e0       	ldi	r24, 0x00	; 0
    3498:	1a c1       	rjmp	.+564    	; 0x36ce <paralelParkingSMF+0x72c>
    349a:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
    349e:	80 91 40 04 	lds	r24, 0x0440
    34a2:	90 91 41 04 	lds	r25, 0x0441
    34a6:	a0 91 42 04 	lds	r26, 0x0442
    34aa:	b0 91 43 04 	lds	r27, 0x0443
    34ae:	40 91 46 04 	lds	r20, 0x0446
    34b2:	50 91 47 04 	lds	r21, 0x0447
    34b6:	60 91 48 04 	lds	r22, 0x0448
    34ba:	70 91 49 04 	lds	r23, 0x0449
    34be:	84 0f       	add	r24, r20
    34c0:	95 1f       	adc	r25, r21
    34c2:	a6 1f       	adc	r26, r22
    34c4:	b7 1f       	adc	r27, r23
    34c6:	b6 95       	lsr	r27
    34c8:	a7 95       	ror	r26
    34ca:	97 95       	ror	r25
    34cc:	87 95       	ror	r24
    34ce:	b6 95       	lsr	r27
    34d0:	a7 95       	ror	r26
    34d2:	97 95       	ror	r25
    34d4:	87 95       	ror	r24
    34d6:	ac 01       	movw	r20, r24
    34d8:	bd 01       	movw	r22, r26
    34da:	44 0f       	add	r20, r20
    34dc:	55 1f       	adc	r21, r21
    34de:	66 1f       	adc	r22, r22
    34e0:	77 1f       	adc	r23, r23
    34e2:	44 0f       	add	r20, r20
    34e4:	55 1f       	adc	r21, r21
    34e6:	66 1f       	adc	r22, r22
    34e8:	77 1f       	adc	r23, r23
    34ea:	4a 01       	movw	r8, r20
    34ec:	5b 01       	movw	r10, r22
    34ee:	88 0c       	add	r8, r8
    34f0:	99 1c       	adc	r9, r9
    34f2:	aa 1c       	adc	r10, r10
    34f4:	bb 1c       	adc	r11, r11
    34f6:	88 0c       	add	r8, r8
    34f8:	99 1c       	adc	r9, r9
    34fa:	aa 1c       	adc	r10, r10
    34fc:	bb 1c       	adc	r11, r11
    34fe:	48 0d       	add	r20, r8
    3500:	59 1d       	adc	r21, r9
    3502:	6a 1d       	adc	r22, r10
    3504:	7b 1d       	adc	r23, r11
    3506:	84 0f       	add	r24, r20
    3508:	95 1f       	adc	r25, r21
    350a:	a6 1f       	adc	r26, r22
    350c:	b7 1f       	adc	r27, r23
    350e:	4e 96       	adiw	r24, 0x1e	; 30
    3510:	a1 1d       	adc	r26, r1
    3512:	b1 1d       	adc	r27, r1
    3514:	80 93 02 06 	sts	0x0602, r24
    3518:	90 93 03 06 	sts	0x0603, r25
    351c:	a0 93 04 06 	sts	0x0604, r26
    3520:	b0 93 05 06 	sts	0x0605, r27
    3524:	8b e0       	ldi	r24, 0x0B	; 11
    3526:	80 93 8c 05 	sts	0x058C, r24
    352a:	62 e3       	ldi	r22, 0x32	; 50
    352c:	8a e0       	ldi	r24, 0x0A	; 10
    352e:	0e 94 4f 05 	call	0xa9e	; 0xa9e <goFront>
    3532:	c0 92 f8 05 	sts	0x05F8, r12
    3536:	d0 92 f9 05 	sts	0x05F9, r13
    353a:	e0 92 fa 05 	sts	0x05FA, r14
    353e:	f0 92 fb 05 	sts	0x05FB, r15
    3542:	80 e0       	ldi	r24, 0x00	; 0
    3544:	c4 c0       	rjmp	.+392    	; 0x36ce <paralelParkingSMF+0x72c>
    3546:	80 91 40 04 	lds	r24, 0x0440
    354a:	90 91 41 04 	lds	r25, 0x0441
    354e:	a0 91 42 04 	lds	r26, 0x0442
    3552:	b0 91 43 04 	lds	r27, 0x0443
    3556:	40 91 46 04 	lds	r20, 0x0446
    355a:	50 91 47 04 	lds	r21, 0x0447
    355e:	60 91 48 04 	lds	r22, 0x0448
    3562:	70 91 49 04 	lds	r23, 0x0449
    3566:	84 0f       	add	r24, r20
    3568:	95 1f       	adc	r25, r21
    356a:	a6 1f       	adc	r26, r22
    356c:	b7 1f       	adc	r27, r23
    356e:	b6 95       	lsr	r27
    3570:	a7 95       	ror	r26
    3572:	97 95       	ror	r25
    3574:	87 95       	ror	r24
    3576:	b6 95       	lsr	r27
    3578:	a7 95       	ror	r26
    357a:	97 95       	ror	r25
    357c:	87 95       	ror	r24
    357e:	ac 01       	movw	r20, r24
    3580:	bd 01       	movw	r22, r26
    3582:	44 0f       	add	r20, r20
    3584:	55 1f       	adc	r21, r21
    3586:	66 1f       	adc	r22, r22
    3588:	77 1f       	adc	r23, r23
    358a:	44 0f       	add	r20, r20
    358c:	55 1f       	adc	r21, r21
    358e:	66 1f       	adc	r22, r22
    3590:	77 1f       	adc	r23, r23
    3592:	4a 01       	movw	r8, r20
    3594:	5b 01       	movw	r10, r22
    3596:	88 0c       	add	r8, r8
    3598:	99 1c       	adc	r9, r9
    359a:	aa 1c       	adc	r10, r10
    359c:	bb 1c       	adc	r11, r11
    359e:	88 0c       	add	r8, r8
    35a0:	99 1c       	adc	r9, r9
    35a2:	aa 1c       	adc	r10, r10
    35a4:	bb 1c       	adc	r11, r11
    35a6:	48 0d       	add	r20, r8
    35a8:	59 1d       	adc	r21, r9
    35aa:	6a 1d       	adc	r22, r10
    35ac:	7b 1d       	adc	r23, r11
    35ae:	84 0f       	add	r24, r20
    35b0:	95 1f       	adc	r25, r21
    35b2:	a6 1f       	adc	r26, r22
    35b4:	b7 1f       	adc	r27, r23
    35b6:	80 90 02 06 	lds	r8, 0x0602
    35ba:	90 90 03 06 	lds	r9, 0x0603
    35be:	a0 90 04 06 	lds	r10, 0x0604
    35c2:	b0 90 05 06 	lds	r11, 0x0605
    35c6:	88 16       	cp	r8, r24
    35c8:	99 06       	cpc	r9, r25
    35ca:	aa 06       	cpc	r10, r26
    35cc:	bb 06       	cpc	r11, r27
    35ce:	08 f0       	brcs	.+2      	; 0x35d2 <paralelParkingSMF+0x630>
    35d0:	7b c0       	rjmp	.+246    	; 0x36c8 <paralelParkingSMF+0x726>
    35d2:	80 91 f8 05 	lds	r24, 0x05F8
    35d6:	90 91 f9 05 	lds	r25, 0x05F9
    35da:	a0 91 fa 05 	lds	r26, 0x05FA
    35de:	b0 91 fb 05 	lds	r27, 0x05FB
    35e2:	46 01       	movw	r8, r12
    35e4:	57 01       	movw	r10, r14
    35e6:	25 e0       	ldi	r18, 0x05	; 5
    35e8:	82 0e       	add	r8, r18
    35ea:	91 1c       	adc	r9, r1
    35ec:	a1 1c       	adc	r10, r1
    35ee:	b1 1c       	adc	r11, r1
    35f0:	88 16       	cp	r8, r24
    35f2:	99 06       	cpc	r9, r25
    35f4:	aa 06       	cpc	r10, r26
    35f6:	bb 06       	cpc	r11, r27
    35f8:	a0 f4       	brcc	.+40     	; 0x3622 <paralelParkingSMF+0x680>
    35fa:	bc 01       	movw	r22, r24
    35fc:	cd 01       	movw	r24, r26
    35fe:	6c 19       	sub	r22, r12
    3600:	7d 09       	sbc	r23, r13
    3602:	8e 09       	sbc	r24, r14
    3604:	9f 09       	sbc	r25, r15
    3606:	2a e0       	ldi	r18, 0x0A	; 10
    3608:	30 e0       	ldi	r19, 0x00	; 0
    360a:	40 e0       	ldi	r20, 0x00	; 0
    360c:	50 e0       	ldi	r21, 0x00	; 0
    360e:	0e 94 71 1b 	call	0x36e2	; 0x36e2 <__udivmodsi4>
    3612:	60 93 8b 05 	sts	0x058B, r22
    3616:	40 e0       	ldi	r20, 0x00	; 0
    3618:	6b e4       	ldi	r22, 0x4B	; 75
    361a:	82 e0       	ldi	r24, 0x02	; 2
    361c:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
    3620:	27 c0       	rjmp	.+78     	; 0x3670 <paralelParkingSMF+0x6ce>
    3622:	4c 01       	movw	r8, r24
    3624:	5d 01       	movw	r10, r26
    3626:	35 e0       	ldi	r19, 0x05	; 5
    3628:	83 0e       	add	r8, r19
    362a:	91 1c       	adc	r9, r1
    362c:	a1 1c       	adc	r10, r1
    362e:	b1 1c       	adc	r11, r1
    3630:	8c 14       	cp	r8, r12
    3632:	9d 04       	cpc	r9, r13
    3634:	ae 04       	cpc	r10, r14
    3636:	bf 04       	cpc	r11, r15
    3638:	b0 f4       	brcc	.+44     	; 0x3666 <paralelParkingSMF+0x6c4>
    363a:	a7 01       	movw	r20, r14
    363c:	96 01       	movw	r18, r12
    363e:	28 1b       	sub	r18, r24
    3640:	39 0b       	sbc	r19, r25
    3642:	4a 0b       	sbc	r20, r26
    3644:	5b 0b       	sbc	r21, r27
    3646:	ca 01       	movw	r24, r20
    3648:	b9 01       	movw	r22, r18
    364a:	2a e0       	ldi	r18, 0x0A	; 10
    364c:	30 e0       	ldi	r19, 0x00	; 0
    364e:	40 e0       	ldi	r20, 0x00	; 0
    3650:	50 e0       	ldi	r21, 0x00	; 0
    3652:	0e 94 71 1b 	call	0x36e2	; 0x36e2 <__udivmodsi4>
    3656:	60 93 8b 05 	sts	0x058B, r22
    365a:	41 e0       	ldi	r20, 0x01	; 1
    365c:	6b e4       	ldi	r22, 0x4B	; 75
    365e:	82 e0       	ldi	r24, 0x02	; 2
    3660:	0e 94 2b 07 	call	0xe56	; 0xe56 <rotirePeLoc>
    3664:	05 c0       	rjmp	.+10     	; 0x3670 <paralelParkingSMF+0x6ce>
    3666:	81 e0       	ldi	r24, 0x01	; 1
    3668:	80 93 8b 05 	sts	0x058B, r24
    366c:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <stopEngines>
    3670:	8c e0       	ldi	r24, 0x0C	; 12
    3672:	80 93 8c 05 	sts	0x058C, r24
    3676:	80 e0       	ldi	r24, 0x00	; 0
    3678:	2a c0       	rjmp	.+84     	; 0x36ce <paralelParkingSMF+0x72c>
    367a:	80 91 8b 05 	lds	r24, 0x058B
    367e:	81 50       	subi	r24, 0x01	; 1
    3680:	80 93 8b 05 	sts	0x058B, r24
    3684:	81 11       	cpse	r24, r1
    3686:	22 c0       	rjmp	.+68     	; 0x36cc <paralelParkingSMF+0x72a>
    3688:	8d e0       	ldi	r24, 0x0D	; 13
    368a:	94 e0       	ldi	r25, 0x04	; 4
    368c:	0e 94 a8 01 	call	0x350	; 0x350 <BTTransmitStr>
    3690:	81 e0       	ldi	r24, 0x01	; 1
    3692:	1d c0       	rjmp	.+58     	; 0x36ce <paralelParkingSMF+0x72c>
    3694:	80 e0       	ldi	r24, 0x00	; 0
    3696:	1b c0       	rjmp	.+54     	; 0x36ce <paralelParkingSMF+0x72c>
    3698:	80 e0       	ldi	r24, 0x00	; 0
    369a:	19 c0       	rjmp	.+50     	; 0x36ce <paralelParkingSMF+0x72c>
    369c:	80 e0       	ldi	r24, 0x00	; 0
    369e:	17 c0       	rjmp	.+46     	; 0x36ce <paralelParkingSMF+0x72c>
    36a0:	80 e0       	ldi	r24, 0x00	; 0
    36a2:	15 c0       	rjmp	.+42     	; 0x36ce <paralelParkingSMF+0x72c>
    36a4:	80 e0       	ldi	r24, 0x00	; 0
    36a6:	13 c0       	rjmp	.+38     	; 0x36ce <paralelParkingSMF+0x72c>
    36a8:	80 e0       	ldi	r24, 0x00	; 0
    36aa:	11 c0       	rjmp	.+34     	; 0x36ce <paralelParkingSMF+0x72c>
    36ac:	80 e0       	ldi	r24, 0x00	; 0
    36ae:	0f c0       	rjmp	.+30     	; 0x36ce <paralelParkingSMF+0x72c>
    36b0:	80 e0       	ldi	r24, 0x00	; 0
    36b2:	0d c0       	rjmp	.+26     	; 0x36ce <paralelParkingSMF+0x72c>
    36b4:	80 e0       	ldi	r24, 0x00	; 0
    36b6:	0b c0       	rjmp	.+22     	; 0x36ce <paralelParkingSMF+0x72c>
    36b8:	80 e0       	ldi	r24, 0x00	; 0
    36ba:	09 c0       	rjmp	.+18     	; 0x36ce <paralelParkingSMF+0x72c>
    36bc:	80 e0       	ldi	r24, 0x00	; 0
    36be:	07 c0       	rjmp	.+14     	; 0x36ce <paralelParkingSMF+0x72c>
    36c0:	80 e0       	ldi	r24, 0x00	; 0
    36c2:	05 c0       	rjmp	.+10     	; 0x36ce <paralelParkingSMF+0x72c>
    36c4:	80 e0       	ldi	r24, 0x00	; 0
    36c6:	03 c0       	rjmp	.+6      	; 0x36ce <paralelParkingSMF+0x72c>
    36c8:	80 e0       	ldi	r24, 0x00	; 0
    36ca:	01 c0       	rjmp	.+2      	; 0x36ce <paralelParkingSMF+0x72c>
    36cc:	80 e0       	ldi	r24, 0x00	; 0
    36ce:	0f 91       	pop	r16
    36d0:	ff 90       	pop	r15
    36d2:	ef 90       	pop	r14
    36d4:	df 90       	pop	r13
    36d6:	cf 90       	pop	r12
    36d8:	bf 90       	pop	r11
    36da:	af 90       	pop	r10
    36dc:	9f 90       	pop	r9
    36de:	8f 90       	pop	r8
    36e0:	08 95       	ret

000036e2 <__udivmodsi4>:
    36e2:	a1 e2       	ldi	r26, 0x21	; 33
    36e4:	1a 2e       	mov	r1, r26
    36e6:	aa 1b       	sub	r26, r26
    36e8:	bb 1b       	sub	r27, r27
    36ea:	fd 01       	movw	r30, r26
    36ec:	0d c0       	rjmp	.+26     	; 0x3708 <__udivmodsi4_ep>

000036ee <__udivmodsi4_loop>:
    36ee:	aa 1f       	adc	r26, r26
    36f0:	bb 1f       	adc	r27, r27
    36f2:	ee 1f       	adc	r30, r30
    36f4:	ff 1f       	adc	r31, r31
    36f6:	a2 17       	cp	r26, r18
    36f8:	b3 07       	cpc	r27, r19
    36fa:	e4 07       	cpc	r30, r20
    36fc:	f5 07       	cpc	r31, r21
    36fe:	20 f0       	brcs	.+8      	; 0x3708 <__udivmodsi4_ep>
    3700:	a2 1b       	sub	r26, r18
    3702:	b3 0b       	sbc	r27, r19
    3704:	e4 0b       	sbc	r30, r20
    3706:	f5 0b       	sbc	r31, r21

00003708 <__udivmodsi4_ep>:
    3708:	66 1f       	adc	r22, r22
    370a:	77 1f       	adc	r23, r23
    370c:	88 1f       	adc	r24, r24
    370e:	99 1f       	adc	r25, r25
    3710:	1a 94       	dec	r1
    3712:	69 f7       	brne	.-38     	; 0x36ee <__udivmodsi4_loop>
    3714:	60 95       	com	r22
    3716:	70 95       	com	r23
    3718:	80 95       	com	r24
    371a:	90 95       	com	r25
    371c:	9b 01       	movw	r18, r22
    371e:	ac 01       	movw	r20, r24
    3720:	bd 01       	movw	r22, r26
    3722:	cf 01       	movw	r24, r30
    3724:	08 95       	ret

00003726 <__tablejump2__>:
    3726:	ee 0f       	add	r30, r30
    3728:	ff 1f       	adc	r31, r31

0000372a <__tablejump__>:
    372a:	05 90       	lpm	r0, Z+
    372c:	f4 91       	lpm	r31, Z
    372e:	e0 2d       	mov	r30, r0
    3730:	09 94       	ijmp

00003732 <__umulhisi3>:
    3732:	a2 9f       	mul	r26, r18
    3734:	b0 01       	movw	r22, r0
    3736:	b3 9f       	mul	r27, r19
    3738:	c0 01       	movw	r24, r0
    373a:	a3 9f       	mul	r26, r19
    373c:	70 0d       	add	r23, r0
    373e:	81 1d       	adc	r24, r1
    3740:	11 24       	eor	r1, r1
    3742:	91 1d       	adc	r25, r1
    3744:	b2 9f       	mul	r27, r18
    3746:	70 0d       	add	r23, r0
    3748:	81 1d       	adc	r24, r1
    374a:	11 24       	eor	r1, r1
    374c:	91 1d       	adc	r25, r1
    374e:	08 95       	ret

00003750 <__muluhisi3>:
    3750:	0e 94 99 1b 	call	0x3732	; 0x3732 <__umulhisi3>
    3754:	a5 9f       	mul	r26, r21
    3756:	90 0d       	add	r25, r0
    3758:	b4 9f       	mul	r27, r20
    375a:	90 0d       	add	r25, r0
    375c:	a4 9f       	mul	r26, r20
    375e:	80 0d       	add	r24, r0
    3760:	91 1d       	adc	r25, r1
    3762:	11 24       	eor	r1, r1
    3764:	08 95       	ret

00003766 <printf>:
    3766:	a0 e0       	ldi	r26, 0x00	; 0
    3768:	b0 e0       	ldi	r27, 0x00	; 0
    376a:	e9 eb       	ldi	r30, 0xB9	; 185
    376c:	fb e1       	ldi	r31, 0x1B	; 27
    376e:	0c 94 71 1e 	jmp	0x3ce2	; 0x3ce2 <__prologue_saves__+0x20>
    3772:	fe 01       	movw	r30, r28
    3774:	35 96       	adiw	r30, 0x05	; 5
    3776:	61 91       	ld	r22, Z+
    3778:	71 91       	ld	r23, Z+
    377a:	af 01       	movw	r20, r30
    377c:	80 91 08 06 	lds	r24, 0x0608
    3780:	90 91 09 06 	lds	r25, 0x0609
    3784:	0e 94 e9 1b 	call	0x37d2	; 0x37d2 <vfprintf>
    3788:	e2 e0       	ldi	r30, 0x02	; 2
    378a:	0c 94 8d 1e 	jmp	0x3d1a	; 0x3d1a <__epilogue_restores__+0x20>

0000378e <sprintf>:
    378e:	ae e0       	ldi	r26, 0x0E	; 14
    3790:	b0 e0       	ldi	r27, 0x00	; 0
    3792:	ed ec       	ldi	r30, 0xCD	; 205
    3794:	fb e1       	ldi	r31, 0x1B	; 27
    3796:	0c 94 6f 1e 	jmp	0x3cde	; 0x3cde <__prologue_saves__+0x1c>
    379a:	0d 89       	ldd	r16, Y+21	; 0x15
    379c:	1e 89       	ldd	r17, Y+22	; 0x16
    379e:	86 e0       	ldi	r24, 0x06	; 6
    37a0:	8c 83       	std	Y+4, r24	; 0x04
    37a2:	1a 83       	std	Y+2, r17	; 0x02
    37a4:	09 83       	std	Y+1, r16	; 0x01
    37a6:	8f ef       	ldi	r24, 0xFF	; 255
    37a8:	9f e7       	ldi	r25, 0x7F	; 127
    37aa:	9e 83       	std	Y+6, r25	; 0x06
    37ac:	8d 83       	std	Y+5, r24	; 0x05
    37ae:	ae 01       	movw	r20, r28
    37b0:	47 5e       	subi	r20, 0xE7	; 231
    37b2:	5f 4f       	sbci	r21, 0xFF	; 255
    37b4:	6f 89       	ldd	r22, Y+23	; 0x17
    37b6:	78 8d       	ldd	r23, Y+24	; 0x18
    37b8:	ce 01       	movw	r24, r28
    37ba:	01 96       	adiw	r24, 0x01	; 1
    37bc:	0e 94 e9 1b 	call	0x37d2	; 0x37d2 <vfprintf>
    37c0:	ef 81       	ldd	r30, Y+7	; 0x07
    37c2:	f8 85       	ldd	r31, Y+8	; 0x08
    37c4:	e0 0f       	add	r30, r16
    37c6:	f1 1f       	adc	r31, r17
    37c8:	10 82       	st	Z, r1
    37ca:	2e 96       	adiw	r28, 0x0e	; 14
    37cc:	e4 e0       	ldi	r30, 0x04	; 4
    37ce:	0c 94 8b 1e 	jmp	0x3d16	; 0x3d16 <__epilogue_restores__+0x1c>

000037d2 <vfprintf>:
    37d2:	ac e0       	ldi	r26, 0x0C	; 12
    37d4:	b0 e0       	ldi	r27, 0x00	; 0
    37d6:	ef ee       	ldi	r30, 0xEF	; 239
    37d8:	fb e1       	ldi	r31, 0x1B	; 27
    37da:	0c 94 61 1e 	jmp	0x3cc2	; 0x3cc2 <__prologue_saves__>
    37de:	7c 01       	movw	r14, r24
    37e0:	6b 01       	movw	r12, r22
    37e2:	8a 01       	movw	r16, r20
    37e4:	fc 01       	movw	r30, r24
    37e6:	17 82       	std	Z+7, r1	; 0x07
    37e8:	16 82       	std	Z+6, r1	; 0x06
    37ea:	83 81       	ldd	r24, Z+3	; 0x03
    37ec:	81 ff       	sbrs	r24, 1
    37ee:	bd c1       	rjmp	.+890    	; 0x3b6a <vfprintf+0x398>
    37f0:	ce 01       	movw	r24, r28
    37f2:	01 96       	adiw	r24, 0x01	; 1
    37f4:	4c 01       	movw	r8, r24
    37f6:	f7 01       	movw	r30, r14
    37f8:	93 81       	ldd	r25, Z+3	; 0x03
    37fa:	f6 01       	movw	r30, r12
    37fc:	93 fd       	sbrc	r25, 3
    37fe:	85 91       	lpm	r24, Z+
    3800:	93 ff       	sbrs	r25, 3
    3802:	81 91       	ld	r24, Z+
    3804:	6f 01       	movw	r12, r30
    3806:	88 23       	and	r24, r24
    3808:	09 f4       	brne	.+2      	; 0x380c <vfprintf+0x3a>
    380a:	ab c1       	rjmp	.+854    	; 0x3b62 <vfprintf+0x390>
    380c:	85 32       	cpi	r24, 0x25	; 37
    380e:	39 f4       	brne	.+14     	; 0x381e <vfprintf+0x4c>
    3810:	93 fd       	sbrc	r25, 3
    3812:	85 91       	lpm	r24, Z+
    3814:	93 ff       	sbrs	r25, 3
    3816:	81 91       	ld	r24, Z+
    3818:	6f 01       	movw	r12, r30
    381a:	85 32       	cpi	r24, 0x25	; 37
    381c:	29 f4       	brne	.+10     	; 0x3828 <vfprintf+0x56>
    381e:	b7 01       	movw	r22, r14
    3820:	90 e0       	ldi	r25, 0x00	; 0
    3822:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <fputc>
    3826:	e7 cf       	rjmp	.-50     	; 0x37f6 <vfprintf+0x24>
    3828:	51 2c       	mov	r5, r1
    382a:	31 2c       	mov	r3, r1
    382c:	20 e0       	ldi	r18, 0x00	; 0
    382e:	20 32       	cpi	r18, 0x20	; 32
    3830:	a0 f4       	brcc	.+40     	; 0x385a <vfprintf+0x88>
    3832:	8b 32       	cpi	r24, 0x2B	; 43
    3834:	69 f0       	breq	.+26     	; 0x3850 <vfprintf+0x7e>
    3836:	30 f4       	brcc	.+12     	; 0x3844 <vfprintf+0x72>
    3838:	80 32       	cpi	r24, 0x20	; 32
    383a:	59 f0       	breq	.+22     	; 0x3852 <vfprintf+0x80>
    383c:	83 32       	cpi	r24, 0x23	; 35
    383e:	69 f4       	brne	.+26     	; 0x385a <vfprintf+0x88>
    3840:	20 61       	ori	r18, 0x10	; 16
    3842:	2c c0       	rjmp	.+88     	; 0x389c <vfprintf+0xca>
    3844:	8d 32       	cpi	r24, 0x2D	; 45
    3846:	39 f0       	breq	.+14     	; 0x3856 <vfprintf+0x84>
    3848:	80 33       	cpi	r24, 0x30	; 48
    384a:	39 f4       	brne	.+14     	; 0x385a <vfprintf+0x88>
    384c:	21 60       	ori	r18, 0x01	; 1
    384e:	26 c0       	rjmp	.+76     	; 0x389c <vfprintf+0xca>
    3850:	22 60       	ori	r18, 0x02	; 2
    3852:	24 60       	ori	r18, 0x04	; 4
    3854:	23 c0       	rjmp	.+70     	; 0x389c <vfprintf+0xca>
    3856:	28 60       	ori	r18, 0x08	; 8
    3858:	21 c0       	rjmp	.+66     	; 0x389c <vfprintf+0xca>
    385a:	27 fd       	sbrc	r18, 7
    385c:	27 c0       	rjmp	.+78     	; 0x38ac <vfprintf+0xda>
    385e:	30 ed       	ldi	r19, 0xD0	; 208
    3860:	38 0f       	add	r19, r24
    3862:	3a 30       	cpi	r19, 0x0A	; 10
    3864:	78 f4       	brcc	.+30     	; 0x3884 <vfprintf+0xb2>
    3866:	26 ff       	sbrs	r18, 6
    3868:	06 c0       	rjmp	.+12     	; 0x3876 <vfprintf+0xa4>
    386a:	fa e0       	ldi	r31, 0x0A	; 10
    386c:	5f 9e       	mul	r5, r31
    386e:	30 0d       	add	r19, r0
    3870:	11 24       	eor	r1, r1
    3872:	53 2e       	mov	r5, r19
    3874:	13 c0       	rjmp	.+38     	; 0x389c <vfprintf+0xca>
    3876:	8a e0       	ldi	r24, 0x0A	; 10
    3878:	38 9e       	mul	r3, r24
    387a:	30 0d       	add	r19, r0
    387c:	11 24       	eor	r1, r1
    387e:	33 2e       	mov	r3, r19
    3880:	20 62       	ori	r18, 0x20	; 32
    3882:	0c c0       	rjmp	.+24     	; 0x389c <vfprintf+0xca>
    3884:	8e 32       	cpi	r24, 0x2E	; 46
    3886:	21 f4       	brne	.+8      	; 0x3890 <vfprintf+0xbe>
    3888:	26 fd       	sbrc	r18, 6
    388a:	6b c1       	rjmp	.+726    	; 0x3b62 <vfprintf+0x390>
    388c:	20 64       	ori	r18, 0x40	; 64
    388e:	06 c0       	rjmp	.+12     	; 0x389c <vfprintf+0xca>
    3890:	8c 36       	cpi	r24, 0x6C	; 108
    3892:	11 f4       	brne	.+4      	; 0x3898 <vfprintf+0xc6>
    3894:	20 68       	ori	r18, 0x80	; 128
    3896:	02 c0       	rjmp	.+4      	; 0x389c <vfprintf+0xca>
    3898:	88 36       	cpi	r24, 0x68	; 104
    389a:	41 f4       	brne	.+16     	; 0x38ac <vfprintf+0xda>
    389c:	f6 01       	movw	r30, r12
    389e:	93 fd       	sbrc	r25, 3
    38a0:	85 91       	lpm	r24, Z+
    38a2:	93 ff       	sbrs	r25, 3
    38a4:	81 91       	ld	r24, Z+
    38a6:	6f 01       	movw	r12, r30
    38a8:	81 11       	cpse	r24, r1
    38aa:	c1 cf       	rjmp	.-126    	; 0x382e <vfprintf+0x5c>
    38ac:	98 2f       	mov	r25, r24
    38ae:	9f 7d       	andi	r25, 0xDF	; 223
    38b0:	95 54       	subi	r25, 0x45	; 69
    38b2:	93 30       	cpi	r25, 0x03	; 3
    38b4:	28 f4       	brcc	.+10     	; 0x38c0 <vfprintf+0xee>
    38b6:	0c 5f       	subi	r16, 0xFC	; 252
    38b8:	1f 4f       	sbci	r17, 0xFF	; 255
    38ba:	ff e3       	ldi	r31, 0x3F	; 63
    38bc:	f9 83       	std	Y+1, r31	; 0x01
    38be:	0d c0       	rjmp	.+26     	; 0x38da <vfprintf+0x108>
    38c0:	83 36       	cpi	r24, 0x63	; 99
    38c2:	31 f0       	breq	.+12     	; 0x38d0 <vfprintf+0xfe>
    38c4:	83 37       	cpi	r24, 0x73	; 115
    38c6:	71 f0       	breq	.+28     	; 0x38e4 <vfprintf+0x112>
    38c8:	83 35       	cpi	r24, 0x53	; 83
    38ca:	09 f0       	breq	.+2      	; 0x38ce <vfprintf+0xfc>
    38cc:	5b c0       	rjmp	.+182    	; 0x3984 <vfprintf+0x1b2>
    38ce:	22 c0       	rjmp	.+68     	; 0x3914 <vfprintf+0x142>
    38d0:	f8 01       	movw	r30, r16
    38d2:	80 81       	ld	r24, Z
    38d4:	89 83       	std	Y+1, r24	; 0x01
    38d6:	0e 5f       	subi	r16, 0xFE	; 254
    38d8:	1f 4f       	sbci	r17, 0xFF	; 255
    38da:	44 24       	eor	r4, r4
    38dc:	43 94       	inc	r4
    38de:	51 2c       	mov	r5, r1
    38e0:	54 01       	movw	r10, r8
    38e2:	15 c0       	rjmp	.+42     	; 0x390e <vfprintf+0x13c>
    38e4:	38 01       	movw	r6, r16
    38e6:	f2 e0       	ldi	r31, 0x02	; 2
    38e8:	6f 0e       	add	r6, r31
    38ea:	71 1c       	adc	r7, r1
    38ec:	f8 01       	movw	r30, r16
    38ee:	a0 80       	ld	r10, Z
    38f0:	b1 80       	ldd	r11, Z+1	; 0x01
    38f2:	26 ff       	sbrs	r18, 6
    38f4:	03 c0       	rjmp	.+6      	; 0x38fc <vfprintf+0x12a>
    38f6:	65 2d       	mov	r22, r5
    38f8:	70 e0       	ldi	r23, 0x00	; 0
    38fa:	02 c0       	rjmp	.+4      	; 0x3900 <vfprintf+0x12e>
    38fc:	6f ef       	ldi	r22, 0xFF	; 255
    38fe:	7f ef       	ldi	r23, 0xFF	; 255
    3900:	c5 01       	movw	r24, r10
    3902:	2c 87       	std	Y+12, r18	; 0x0c
    3904:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <strnlen>
    3908:	2c 01       	movw	r4, r24
    390a:	83 01       	movw	r16, r6
    390c:	2c 85       	ldd	r18, Y+12	; 0x0c
    390e:	2f 77       	andi	r18, 0x7F	; 127
    3910:	22 2e       	mov	r2, r18
    3912:	17 c0       	rjmp	.+46     	; 0x3942 <vfprintf+0x170>
    3914:	38 01       	movw	r6, r16
    3916:	f2 e0       	ldi	r31, 0x02	; 2
    3918:	6f 0e       	add	r6, r31
    391a:	71 1c       	adc	r7, r1
    391c:	f8 01       	movw	r30, r16
    391e:	a0 80       	ld	r10, Z
    3920:	b1 80       	ldd	r11, Z+1	; 0x01
    3922:	26 ff       	sbrs	r18, 6
    3924:	03 c0       	rjmp	.+6      	; 0x392c <vfprintf+0x15a>
    3926:	65 2d       	mov	r22, r5
    3928:	70 e0       	ldi	r23, 0x00	; 0
    392a:	02 c0       	rjmp	.+4      	; 0x3930 <vfprintf+0x15e>
    392c:	6f ef       	ldi	r22, 0xFF	; 255
    392e:	7f ef       	ldi	r23, 0xFF	; 255
    3930:	c5 01       	movw	r24, r10
    3932:	2c 87       	std	Y+12, r18	; 0x0c
    3934:	0e 94 bb 1d 	call	0x3b76	; 0x3b76 <strnlen_P>
    3938:	2c 01       	movw	r4, r24
    393a:	2c 85       	ldd	r18, Y+12	; 0x0c
    393c:	20 68       	ori	r18, 0x80	; 128
    393e:	22 2e       	mov	r2, r18
    3940:	83 01       	movw	r16, r6
    3942:	23 fc       	sbrc	r2, 3
    3944:	1b c0       	rjmp	.+54     	; 0x397c <vfprintf+0x1aa>
    3946:	83 2d       	mov	r24, r3
    3948:	90 e0       	ldi	r25, 0x00	; 0
    394a:	48 16       	cp	r4, r24
    394c:	59 06       	cpc	r5, r25
    394e:	b0 f4       	brcc	.+44     	; 0x397c <vfprintf+0x1aa>
    3950:	b7 01       	movw	r22, r14
    3952:	80 e2       	ldi	r24, 0x20	; 32
    3954:	90 e0       	ldi	r25, 0x00	; 0
    3956:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <fputc>
    395a:	3a 94       	dec	r3
    395c:	f4 cf       	rjmp	.-24     	; 0x3946 <vfprintf+0x174>
    395e:	f5 01       	movw	r30, r10
    3960:	27 fc       	sbrc	r2, 7
    3962:	85 91       	lpm	r24, Z+
    3964:	27 fe       	sbrs	r2, 7
    3966:	81 91       	ld	r24, Z+
    3968:	5f 01       	movw	r10, r30
    396a:	b7 01       	movw	r22, r14
    396c:	90 e0       	ldi	r25, 0x00	; 0
    396e:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <fputc>
    3972:	31 10       	cpse	r3, r1
    3974:	3a 94       	dec	r3
    3976:	f1 e0       	ldi	r31, 0x01	; 1
    3978:	4f 1a       	sub	r4, r31
    397a:	51 08       	sbc	r5, r1
    397c:	41 14       	cp	r4, r1
    397e:	51 04       	cpc	r5, r1
    3980:	71 f7       	brne	.-36     	; 0x395e <vfprintf+0x18c>
    3982:	e5 c0       	rjmp	.+458    	; 0x3b4e <vfprintf+0x37c>
    3984:	84 36       	cpi	r24, 0x64	; 100
    3986:	11 f0       	breq	.+4      	; 0x398c <vfprintf+0x1ba>
    3988:	89 36       	cpi	r24, 0x69	; 105
    398a:	39 f5       	brne	.+78     	; 0x39da <vfprintf+0x208>
    398c:	f8 01       	movw	r30, r16
    398e:	27 ff       	sbrs	r18, 7
    3990:	07 c0       	rjmp	.+14     	; 0x39a0 <vfprintf+0x1ce>
    3992:	60 81       	ld	r22, Z
    3994:	71 81       	ldd	r23, Z+1	; 0x01
    3996:	82 81       	ldd	r24, Z+2	; 0x02
    3998:	93 81       	ldd	r25, Z+3	; 0x03
    399a:	0c 5f       	subi	r16, 0xFC	; 252
    399c:	1f 4f       	sbci	r17, 0xFF	; 255
    399e:	08 c0       	rjmp	.+16     	; 0x39b0 <vfprintf+0x1de>
    39a0:	60 81       	ld	r22, Z
    39a2:	71 81       	ldd	r23, Z+1	; 0x01
    39a4:	88 27       	eor	r24, r24
    39a6:	77 fd       	sbrc	r23, 7
    39a8:	80 95       	com	r24
    39aa:	98 2f       	mov	r25, r24
    39ac:	0e 5f       	subi	r16, 0xFE	; 254
    39ae:	1f 4f       	sbci	r17, 0xFF	; 255
    39b0:	2f 76       	andi	r18, 0x6F	; 111
    39b2:	b2 2e       	mov	r11, r18
    39b4:	97 ff       	sbrs	r25, 7
    39b6:	09 c0       	rjmp	.+18     	; 0x39ca <vfprintf+0x1f8>
    39b8:	90 95       	com	r25
    39ba:	80 95       	com	r24
    39bc:	70 95       	com	r23
    39be:	61 95       	neg	r22
    39c0:	7f 4f       	sbci	r23, 0xFF	; 255
    39c2:	8f 4f       	sbci	r24, 0xFF	; 255
    39c4:	9f 4f       	sbci	r25, 0xFF	; 255
    39c6:	20 68       	ori	r18, 0x80	; 128
    39c8:	b2 2e       	mov	r11, r18
    39ca:	2a e0       	ldi	r18, 0x0A	; 10
    39cc:	30 e0       	ldi	r19, 0x00	; 0
    39ce:	a4 01       	movw	r20, r8
    39d0:	0e 94 03 1e 	call	0x3c06	; 0x3c06 <__ultoa_invert>
    39d4:	a8 2e       	mov	r10, r24
    39d6:	a8 18       	sub	r10, r8
    39d8:	44 c0       	rjmp	.+136    	; 0x3a62 <vfprintf+0x290>
    39da:	85 37       	cpi	r24, 0x75	; 117
    39dc:	29 f4       	brne	.+10     	; 0x39e8 <vfprintf+0x216>
    39de:	2f 7e       	andi	r18, 0xEF	; 239
    39e0:	b2 2e       	mov	r11, r18
    39e2:	2a e0       	ldi	r18, 0x0A	; 10
    39e4:	30 e0       	ldi	r19, 0x00	; 0
    39e6:	25 c0       	rjmp	.+74     	; 0x3a32 <vfprintf+0x260>
    39e8:	f2 2f       	mov	r31, r18
    39ea:	f9 7f       	andi	r31, 0xF9	; 249
    39ec:	bf 2e       	mov	r11, r31
    39ee:	8f 36       	cpi	r24, 0x6F	; 111
    39f0:	c1 f0       	breq	.+48     	; 0x3a22 <vfprintf+0x250>
    39f2:	18 f4       	brcc	.+6      	; 0x39fa <vfprintf+0x228>
    39f4:	88 35       	cpi	r24, 0x58	; 88
    39f6:	79 f0       	breq	.+30     	; 0x3a16 <vfprintf+0x244>
    39f8:	b4 c0       	rjmp	.+360    	; 0x3b62 <vfprintf+0x390>
    39fa:	80 37       	cpi	r24, 0x70	; 112
    39fc:	19 f0       	breq	.+6      	; 0x3a04 <vfprintf+0x232>
    39fe:	88 37       	cpi	r24, 0x78	; 120
    3a00:	21 f0       	breq	.+8      	; 0x3a0a <vfprintf+0x238>
    3a02:	af c0       	rjmp	.+350    	; 0x3b62 <vfprintf+0x390>
    3a04:	2f 2f       	mov	r18, r31
    3a06:	20 61       	ori	r18, 0x10	; 16
    3a08:	b2 2e       	mov	r11, r18
    3a0a:	b4 fe       	sbrs	r11, 4
    3a0c:	0d c0       	rjmp	.+26     	; 0x3a28 <vfprintf+0x256>
    3a0e:	8b 2d       	mov	r24, r11
    3a10:	84 60       	ori	r24, 0x04	; 4
    3a12:	b8 2e       	mov	r11, r24
    3a14:	09 c0       	rjmp	.+18     	; 0x3a28 <vfprintf+0x256>
    3a16:	24 ff       	sbrs	r18, 4
    3a18:	0a c0       	rjmp	.+20     	; 0x3a2e <vfprintf+0x25c>
    3a1a:	9f 2f       	mov	r25, r31
    3a1c:	96 60       	ori	r25, 0x06	; 6
    3a1e:	b9 2e       	mov	r11, r25
    3a20:	06 c0       	rjmp	.+12     	; 0x3a2e <vfprintf+0x25c>
    3a22:	28 e0       	ldi	r18, 0x08	; 8
    3a24:	30 e0       	ldi	r19, 0x00	; 0
    3a26:	05 c0       	rjmp	.+10     	; 0x3a32 <vfprintf+0x260>
    3a28:	20 e1       	ldi	r18, 0x10	; 16
    3a2a:	30 e0       	ldi	r19, 0x00	; 0
    3a2c:	02 c0       	rjmp	.+4      	; 0x3a32 <vfprintf+0x260>
    3a2e:	20 e1       	ldi	r18, 0x10	; 16
    3a30:	32 e0       	ldi	r19, 0x02	; 2
    3a32:	f8 01       	movw	r30, r16
    3a34:	b7 fe       	sbrs	r11, 7
    3a36:	07 c0       	rjmp	.+14     	; 0x3a46 <vfprintf+0x274>
    3a38:	60 81       	ld	r22, Z
    3a3a:	71 81       	ldd	r23, Z+1	; 0x01
    3a3c:	82 81       	ldd	r24, Z+2	; 0x02
    3a3e:	93 81       	ldd	r25, Z+3	; 0x03
    3a40:	0c 5f       	subi	r16, 0xFC	; 252
    3a42:	1f 4f       	sbci	r17, 0xFF	; 255
    3a44:	06 c0       	rjmp	.+12     	; 0x3a52 <vfprintf+0x280>
    3a46:	60 81       	ld	r22, Z
    3a48:	71 81       	ldd	r23, Z+1	; 0x01
    3a4a:	80 e0       	ldi	r24, 0x00	; 0
    3a4c:	90 e0       	ldi	r25, 0x00	; 0
    3a4e:	0e 5f       	subi	r16, 0xFE	; 254
    3a50:	1f 4f       	sbci	r17, 0xFF	; 255
    3a52:	a4 01       	movw	r20, r8
    3a54:	0e 94 03 1e 	call	0x3c06	; 0x3c06 <__ultoa_invert>
    3a58:	a8 2e       	mov	r10, r24
    3a5a:	a8 18       	sub	r10, r8
    3a5c:	fb 2d       	mov	r31, r11
    3a5e:	ff 77       	andi	r31, 0x7F	; 127
    3a60:	bf 2e       	mov	r11, r31
    3a62:	b6 fe       	sbrs	r11, 6
    3a64:	0b c0       	rjmp	.+22     	; 0x3a7c <vfprintf+0x2aa>
    3a66:	2b 2d       	mov	r18, r11
    3a68:	2e 7f       	andi	r18, 0xFE	; 254
    3a6a:	a5 14       	cp	r10, r5
    3a6c:	50 f4       	brcc	.+20     	; 0x3a82 <vfprintf+0x2b0>
    3a6e:	b4 fe       	sbrs	r11, 4
    3a70:	0a c0       	rjmp	.+20     	; 0x3a86 <vfprintf+0x2b4>
    3a72:	b2 fc       	sbrc	r11, 2
    3a74:	08 c0       	rjmp	.+16     	; 0x3a86 <vfprintf+0x2b4>
    3a76:	2b 2d       	mov	r18, r11
    3a78:	2e 7e       	andi	r18, 0xEE	; 238
    3a7a:	05 c0       	rjmp	.+10     	; 0x3a86 <vfprintf+0x2b4>
    3a7c:	7a 2c       	mov	r7, r10
    3a7e:	2b 2d       	mov	r18, r11
    3a80:	03 c0       	rjmp	.+6      	; 0x3a88 <vfprintf+0x2b6>
    3a82:	7a 2c       	mov	r7, r10
    3a84:	01 c0       	rjmp	.+2      	; 0x3a88 <vfprintf+0x2b6>
    3a86:	75 2c       	mov	r7, r5
    3a88:	24 ff       	sbrs	r18, 4
    3a8a:	0d c0       	rjmp	.+26     	; 0x3aa6 <vfprintf+0x2d4>
    3a8c:	fe 01       	movw	r30, r28
    3a8e:	ea 0d       	add	r30, r10
    3a90:	f1 1d       	adc	r31, r1
    3a92:	80 81       	ld	r24, Z
    3a94:	80 33       	cpi	r24, 0x30	; 48
    3a96:	11 f4       	brne	.+4      	; 0x3a9c <vfprintf+0x2ca>
    3a98:	29 7e       	andi	r18, 0xE9	; 233
    3a9a:	09 c0       	rjmp	.+18     	; 0x3aae <vfprintf+0x2dc>
    3a9c:	22 ff       	sbrs	r18, 2
    3a9e:	06 c0       	rjmp	.+12     	; 0x3aac <vfprintf+0x2da>
    3aa0:	73 94       	inc	r7
    3aa2:	73 94       	inc	r7
    3aa4:	04 c0       	rjmp	.+8      	; 0x3aae <vfprintf+0x2dc>
    3aa6:	82 2f       	mov	r24, r18
    3aa8:	86 78       	andi	r24, 0x86	; 134
    3aaa:	09 f0       	breq	.+2      	; 0x3aae <vfprintf+0x2dc>
    3aac:	73 94       	inc	r7
    3aae:	23 fd       	sbrc	r18, 3
    3ab0:	13 c0       	rjmp	.+38     	; 0x3ad8 <vfprintf+0x306>
    3ab2:	20 ff       	sbrs	r18, 0
    3ab4:	06 c0       	rjmp	.+12     	; 0x3ac2 <vfprintf+0x2f0>
    3ab6:	5a 2c       	mov	r5, r10
    3ab8:	73 14       	cp	r7, r3
    3aba:	18 f4       	brcc	.+6      	; 0x3ac2 <vfprintf+0x2f0>
    3abc:	53 0c       	add	r5, r3
    3abe:	57 18       	sub	r5, r7
    3ac0:	73 2c       	mov	r7, r3
    3ac2:	73 14       	cp	r7, r3
    3ac4:	68 f4       	brcc	.+26     	; 0x3ae0 <vfprintf+0x30e>
    3ac6:	b7 01       	movw	r22, r14
    3ac8:	80 e2       	ldi	r24, 0x20	; 32
    3aca:	90 e0       	ldi	r25, 0x00	; 0
    3acc:	2c 87       	std	Y+12, r18	; 0x0c
    3ace:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <fputc>
    3ad2:	73 94       	inc	r7
    3ad4:	2c 85       	ldd	r18, Y+12	; 0x0c
    3ad6:	f5 cf       	rjmp	.-22     	; 0x3ac2 <vfprintf+0x2f0>
    3ad8:	73 14       	cp	r7, r3
    3ada:	10 f4       	brcc	.+4      	; 0x3ae0 <vfprintf+0x30e>
    3adc:	37 18       	sub	r3, r7
    3ade:	01 c0       	rjmp	.+2      	; 0x3ae2 <vfprintf+0x310>
    3ae0:	31 2c       	mov	r3, r1
    3ae2:	24 ff       	sbrs	r18, 4
    3ae4:	12 c0       	rjmp	.+36     	; 0x3b0a <vfprintf+0x338>
    3ae6:	b7 01       	movw	r22, r14
    3ae8:	80 e3       	ldi	r24, 0x30	; 48
    3aea:	90 e0       	ldi	r25, 0x00	; 0
    3aec:	2c 87       	std	Y+12, r18	; 0x0c
    3aee:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <fputc>
    3af2:	2c 85       	ldd	r18, Y+12	; 0x0c
    3af4:	22 ff       	sbrs	r18, 2
    3af6:	17 c0       	rjmp	.+46     	; 0x3b26 <vfprintf+0x354>
    3af8:	21 ff       	sbrs	r18, 1
    3afa:	03 c0       	rjmp	.+6      	; 0x3b02 <vfprintf+0x330>
    3afc:	88 e5       	ldi	r24, 0x58	; 88
    3afe:	90 e0       	ldi	r25, 0x00	; 0
    3b00:	02 c0       	rjmp	.+4      	; 0x3b06 <vfprintf+0x334>
    3b02:	88 e7       	ldi	r24, 0x78	; 120
    3b04:	90 e0       	ldi	r25, 0x00	; 0
    3b06:	b7 01       	movw	r22, r14
    3b08:	0c c0       	rjmp	.+24     	; 0x3b22 <vfprintf+0x350>
    3b0a:	82 2f       	mov	r24, r18
    3b0c:	86 78       	andi	r24, 0x86	; 134
    3b0e:	59 f0       	breq	.+22     	; 0x3b26 <vfprintf+0x354>
    3b10:	21 fd       	sbrc	r18, 1
    3b12:	02 c0       	rjmp	.+4      	; 0x3b18 <vfprintf+0x346>
    3b14:	80 e2       	ldi	r24, 0x20	; 32
    3b16:	01 c0       	rjmp	.+2      	; 0x3b1a <vfprintf+0x348>
    3b18:	8b e2       	ldi	r24, 0x2B	; 43
    3b1a:	27 fd       	sbrc	r18, 7
    3b1c:	8d e2       	ldi	r24, 0x2D	; 45
    3b1e:	b7 01       	movw	r22, r14
    3b20:	90 e0       	ldi	r25, 0x00	; 0
    3b22:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <fputc>
    3b26:	a5 14       	cp	r10, r5
    3b28:	38 f4       	brcc	.+14     	; 0x3b38 <vfprintf+0x366>
    3b2a:	b7 01       	movw	r22, r14
    3b2c:	80 e3       	ldi	r24, 0x30	; 48
    3b2e:	90 e0       	ldi	r25, 0x00	; 0
    3b30:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <fputc>
    3b34:	5a 94       	dec	r5
    3b36:	f7 cf       	rjmp	.-18     	; 0x3b26 <vfprintf+0x354>
    3b38:	aa 94       	dec	r10
    3b3a:	f4 01       	movw	r30, r8
    3b3c:	ea 0d       	add	r30, r10
    3b3e:	f1 1d       	adc	r31, r1
    3b40:	80 81       	ld	r24, Z
    3b42:	b7 01       	movw	r22, r14
    3b44:	90 e0       	ldi	r25, 0x00	; 0
    3b46:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <fputc>
    3b4a:	a1 10       	cpse	r10, r1
    3b4c:	f5 cf       	rjmp	.-22     	; 0x3b38 <vfprintf+0x366>
    3b4e:	33 20       	and	r3, r3
    3b50:	09 f4       	brne	.+2      	; 0x3b54 <vfprintf+0x382>
    3b52:	51 ce       	rjmp	.-862    	; 0x37f6 <vfprintf+0x24>
    3b54:	b7 01       	movw	r22, r14
    3b56:	80 e2       	ldi	r24, 0x20	; 32
    3b58:	90 e0       	ldi	r25, 0x00	; 0
    3b5a:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <fputc>
    3b5e:	3a 94       	dec	r3
    3b60:	f6 cf       	rjmp	.-20     	; 0x3b4e <vfprintf+0x37c>
    3b62:	f7 01       	movw	r30, r14
    3b64:	86 81       	ldd	r24, Z+6	; 0x06
    3b66:	97 81       	ldd	r25, Z+7	; 0x07
    3b68:	02 c0       	rjmp	.+4      	; 0x3b6e <vfprintf+0x39c>
    3b6a:	8f ef       	ldi	r24, 0xFF	; 255
    3b6c:	9f ef       	ldi	r25, 0xFF	; 255
    3b6e:	2c 96       	adiw	r28, 0x0c	; 12
    3b70:	e2 e1       	ldi	r30, 0x12	; 18
    3b72:	0c 94 7d 1e 	jmp	0x3cfa	; 0x3cfa <__epilogue_restores__>

00003b76 <strnlen_P>:
    3b76:	fc 01       	movw	r30, r24
    3b78:	05 90       	lpm	r0, Z+
    3b7a:	61 50       	subi	r22, 0x01	; 1
    3b7c:	70 40       	sbci	r23, 0x00	; 0
    3b7e:	01 10       	cpse	r0, r1
    3b80:	d8 f7       	brcc	.-10     	; 0x3b78 <strnlen_P+0x2>
    3b82:	80 95       	com	r24
    3b84:	90 95       	com	r25
    3b86:	8e 0f       	add	r24, r30
    3b88:	9f 1f       	adc	r25, r31
    3b8a:	08 95       	ret

00003b8c <strnlen>:
    3b8c:	fc 01       	movw	r30, r24
    3b8e:	61 50       	subi	r22, 0x01	; 1
    3b90:	70 40       	sbci	r23, 0x00	; 0
    3b92:	01 90       	ld	r0, Z+
    3b94:	01 10       	cpse	r0, r1
    3b96:	d8 f7       	brcc	.-10     	; 0x3b8e <strnlen+0x2>
    3b98:	80 95       	com	r24
    3b9a:	90 95       	com	r25
    3b9c:	8e 0f       	add	r24, r30
    3b9e:	9f 1f       	adc	r25, r31
    3ba0:	08 95       	ret

00003ba2 <fputc>:
    3ba2:	0f 93       	push	r16
    3ba4:	1f 93       	push	r17
    3ba6:	cf 93       	push	r28
    3ba8:	df 93       	push	r29
    3baa:	18 2f       	mov	r17, r24
    3bac:	09 2f       	mov	r16, r25
    3bae:	eb 01       	movw	r28, r22
    3bb0:	8b 81       	ldd	r24, Y+3	; 0x03
    3bb2:	81 fd       	sbrc	r24, 1
    3bb4:	03 c0       	rjmp	.+6      	; 0x3bbc <fputc+0x1a>
    3bb6:	8f ef       	ldi	r24, 0xFF	; 255
    3bb8:	9f ef       	ldi	r25, 0xFF	; 255
    3bba:	20 c0       	rjmp	.+64     	; 0x3bfc <fputc+0x5a>
    3bbc:	82 ff       	sbrs	r24, 2
    3bbe:	10 c0       	rjmp	.+32     	; 0x3be0 <fputc+0x3e>
    3bc0:	4e 81       	ldd	r20, Y+6	; 0x06
    3bc2:	5f 81       	ldd	r21, Y+7	; 0x07
    3bc4:	2c 81       	ldd	r18, Y+4	; 0x04
    3bc6:	3d 81       	ldd	r19, Y+5	; 0x05
    3bc8:	42 17       	cp	r20, r18
    3bca:	53 07       	cpc	r21, r19
    3bcc:	7c f4       	brge	.+30     	; 0x3bec <fputc+0x4a>
    3bce:	e8 81       	ld	r30, Y
    3bd0:	f9 81       	ldd	r31, Y+1	; 0x01
    3bd2:	9f 01       	movw	r18, r30
    3bd4:	2f 5f       	subi	r18, 0xFF	; 255
    3bd6:	3f 4f       	sbci	r19, 0xFF	; 255
    3bd8:	39 83       	std	Y+1, r19	; 0x01
    3bda:	28 83       	st	Y, r18
    3bdc:	10 83       	st	Z, r17
    3bde:	06 c0       	rjmp	.+12     	; 0x3bec <fputc+0x4a>
    3be0:	e8 85       	ldd	r30, Y+8	; 0x08
    3be2:	f9 85       	ldd	r31, Y+9	; 0x09
    3be4:	81 2f       	mov	r24, r17
    3be6:	09 95       	icall
    3be8:	89 2b       	or	r24, r25
    3bea:	29 f7       	brne	.-54     	; 0x3bb6 <fputc+0x14>
    3bec:	2e 81       	ldd	r18, Y+6	; 0x06
    3bee:	3f 81       	ldd	r19, Y+7	; 0x07
    3bf0:	2f 5f       	subi	r18, 0xFF	; 255
    3bf2:	3f 4f       	sbci	r19, 0xFF	; 255
    3bf4:	3f 83       	std	Y+7, r19	; 0x07
    3bf6:	2e 83       	std	Y+6, r18	; 0x06
    3bf8:	81 2f       	mov	r24, r17
    3bfa:	90 2f       	mov	r25, r16
    3bfc:	df 91       	pop	r29
    3bfe:	cf 91       	pop	r28
    3c00:	1f 91       	pop	r17
    3c02:	0f 91       	pop	r16
    3c04:	08 95       	ret

00003c06 <__ultoa_invert>:
    3c06:	fa 01       	movw	r30, r20
    3c08:	aa 27       	eor	r26, r26
    3c0a:	28 30       	cpi	r18, 0x08	; 8
    3c0c:	51 f1       	breq	.+84     	; 0x3c62 <__ultoa_invert+0x5c>
    3c0e:	20 31       	cpi	r18, 0x10	; 16
    3c10:	81 f1       	breq	.+96     	; 0x3c72 <__ultoa_invert+0x6c>
    3c12:	e8 94       	clt
    3c14:	6f 93       	push	r22
    3c16:	6e 7f       	andi	r22, 0xFE	; 254
    3c18:	6e 5f       	subi	r22, 0xFE	; 254
    3c1a:	7f 4f       	sbci	r23, 0xFF	; 255
    3c1c:	8f 4f       	sbci	r24, 0xFF	; 255
    3c1e:	9f 4f       	sbci	r25, 0xFF	; 255
    3c20:	af 4f       	sbci	r26, 0xFF	; 255
    3c22:	b1 e0       	ldi	r27, 0x01	; 1
    3c24:	3e d0       	rcall	.+124    	; 0x3ca2 <__ultoa_invert+0x9c>
    3c26:	b4 e0       	ldi	r27, 0x04	; 4
    3c28:	3c d0       	rcall	.+120    	; 0x3ca2 <__ultoa_invert+0x9c>
    3c2a:	67 0f       	add	r22, r23
    3c2c:	78 1f       	adc	r23, r24
    3c2e:	89 1f       	adc	r24, r25
    3c30:	9a 1f       	adc	r25, r26
    3c32:	a1 1d       	adc	r26, r1
    3c34:	68 0f       	add	r22, r24
    3c36:	79 1f       	adc	r23, r25
    3c38:	8a 1f       	adc	r24, r26
    3c3a:	91 1d       	adc	r25, r1
    3c3c:	a1 1d       	adc	r26, r1
    3c3e:	6a 0f       	add	r22, r26
    3c40:	71 1d       	adc	r23, r1
    3c42:	81 1d       	adc	r24, r1
    3c44:	91 1d       	adc	r25, r1
    3c46:	a1 1d       	adc	r26, r1
    3c48:	20 d0       	rcall	.+64     	; 0x3c8a <__ultoa_invert+0x84>
    3c4a:	09 f4       	brne	.+2      	; 0x3c4e <__ultoa_invert+0x48>
    3c4c:	68 94       	set
    3c4e:	3f 91       	pop	r19
    3c50:	2a e0       	ldi	r18, 0x0A	; 10
    3c52:	26 9f       	mul	r18, r22
    3c54:	11 24       	eor	r1, r1
    3c56:	30 19       	sub	r19, r0
    3c58:	30 5d       	subi	r19, 0xD0	; 208
    3c5a:	31 93       	st	Z+, r19
    3c5c:	de f6       	brtc	.-74     	; 0x3c14 <__ultoa_invert+0xe>
    3c5e:	cf 01       	movw	r24, r30
    3c60:	08 95       	ret
    3c62:	46 2f       	mov	r20, r22
    3c64:	47 70       	andi	r20, 0x07	; 7
    3c66:	40 5d       	subi	r20, 0xD0	; 208
    3c68:	41 93       	st	Z+, r20
    3c6a:	b3 e0       	ldi	r27, 0x03	; 3
    3c6c:	0f d0       	rcall	.+30     	; 0x3c8c <__ultoa_invert+0x86>
    3c6e:	c9 f7       	brne	.-14     	; 0x3c62 <__ultoa_invert+0x5c>
    3c70:	f6 cf       	rjmp	.-20     	; 0x3c5e <__ultoa_invert+0x58>
    3c72:	46 2f       	mov	r20, r22
    3c74:	4f 70       	andi	r20, 0x0F	; 15
    3c76:	40 5d       	subi	r20, 0xD0	; 208
    3c78:	4a 33       	cpi	r20, 0x3A	; 58
    3c7a:	18 f0       	brcs	.+6      	; 0x3c82 <__ultoa_invert+0x7c>
    3c7c:	49 5d       	subi	r20, 0xD9	; 217
    3c7e:	31 fd       	sbrc	r19, 1
    3c80:	40 52       	subi	r20, 0x20	; 32
    3c82:	41 93       	st	Z+, r20
    3c84:	02 d0       	rcall	.+4      	; 0x3c8a <__ultoa_invert+0x84>
    3c86:	a9 f7       	brne	.-22     	; 0x3c72 <__ultoa_invert+0x6c>
    3c88:	ea cf       	rjmp	.-44     	; 0x3c5e <__ultoa_invert+0x58>
    3c8a:	b4 e0       	ldi	r27, 0x04	; 4
    3c8c:	a6 95       	lsr	r26
    3c8e:	97 95       	ror	r25
    3c90:	87 95       	ror	r24
    3c92:	77 95       	ror	r23
    3c94:	67 95       	ror	r22
    3c96:	ba 95       	dec	r27
    3c98:	c9 f7       	brne	.-14     	; 0x3c8c <__ultoa_invert+0x86>
    3c9a:	00 97       	sbiw	r24, 0x00	; 0
    3c9c:	61 05       	cpc	r22, r1
    3c9e:	71 05       	cpc	r23, r1
    3ca0:	08 95       	ret
    3ca2:	9b 01       	movw	r18, r22
    3ca4:	ac 01       	movw	r20, r24
    3ca6:	0a 2e       	mov	r0, r26
    3ca8:	06 94       	lsr	r0
    3caa:	57 95       	ror	r21
    3cac:	47 95       	ror	r20
    3cae:	37 95       	ror	r19
    3cb0:	27 95       	ror	r18
    3cb2:	ba 95       	dec	r27
    3cb4:	c9 f7       	brne	.-14     	; 0x3ca8 <__ultoa_invert+0xa2>
    3cb6:	62 0f       	add	r22, r18
    3cb8:	73 1f       	adc	r23, r19
    3cba:	84 1f       	adc	r24, r20
    3cbc:	95 1f       	adc	r25, r21
    3cbe:	a0 1d       	adc	r26, r0
    3cc0:	08 95       	ret

00003cc2 <__prologue_saves__>:
    3cc2:	2f 92       	push	r2
    3cc4:	3f 92       	push	r3
    3cc6:	4f 92       	push	r4
    3cc8:	5f 92       	push	r5
    3cca:	6f 92       	push	r6
    3ccc:	7f 92       	push	r7
    3cce:	8f 92       	push	r8
    3cd0:	9f 92       	push	r9
    3cd2:	af 92       	push	r10
    3cd4:	bf 92       	push	r11
    3cd6:	cf 92       	push	r12
    3cd8:	df 92       	push	r13
    3cda:	ef 92       	push	r14
    3cdc:	ff 92       	push	r15
    3cde:	0f 93       	push	r16
    3ce0:	1f 93       	push	r17
    3ce2:	cf 93       	push	r28
    3ce4:	df 93       	push	r29
    3ce6:	cd b7       	in	r28, 0x3d	; 61
    3ce8:	de b7       	in	r29, 0x3e	; 62
    3cea:	ca 1b       	sub	r28, r26
    3cec:	db 0b       	sbc	r29, r27
    3cee:	0f b6       	in	r0, 0x3f	; 63
    3cf0:	f8 94       	cli
    3cf2:	de bf       	out	0x3e, r29	; 62
    3cf4:	0f be       	out	0x3f, r0	; 63
    3cf6:	cd bf       	out	0x3d, r28	; 61
    3cf8:	09 94       	ijmp

00003cfa <__epilogue_restores__>:
    3cfa:	2a 88       	ldd	r2, Y+18	; 0x12
    3cfc:	39 88       	ldd	r3, Y+17	; 0x11
    3cfe:	48 88       	ldd	r4, Y+16	; 0x10
    3d00:	5f 84       	ldd	r5, Y+15	; 0x0f
    3d02:	6e 84       	ldd	r6, Y+14	; 0x0e
    3d04:	7d 84       	ldd	r7, Y+13	; 0x0d
    3d06:	8c 84       	ldd	r8, Y+12	; 0x0c
    3d08:	9b 84       	ldd	r9, Y+11	; 0x0b
    3d0a:	aa 84       	ldd	r10, Y+10	; 0x0a
    3d0c:	b9 84       	ldd	r11, Y+9	; 0x09
    3d0e:	c8 84       	ldd	r12, Y+8	; 0x08
    3d10:	df 80       	ldd	r13, Y+7	; 0x07
    3d12:	ee 80       	ldd	r14, Y+6	; 0x06
    3d14:	fd 80       	ldd	r15, Y+5	; 0x05
    3d16:	0c 81       	ldd	r16, Y+4	; 0x04
    3d18:	1b 81       	ldd	r17, Y+3	; 0x03
    3d1a:	aa 81       	ldd	r26, Y+2	; 0x02
    3d1c:	b9 81       	ldd	r27, Y+1	; 0x01
    3d1e:	ce 0f       	add	r28, r30
    3d20:	d1 1d       	adc	r29, r1
    3d22:	0f b6       	in	r0, 0x3f	; 63
    3d24:	f8 94       	cli
    3d26:	de bf       	out	0x3e, r29	; 62
    3d28:	0f be       	out	0x3f, r0	; 63
    3d2a:	cd bf       	out	0x3d, r28	; 61
    3d2c:	ed 01       	movw	r28, r26
    3d2e:	08 95       	ret

00003d30 <_exit>:
    3d30:	f8 94       	cli

00003d32 <__stop_program>:
    3d32:	ff cf       	rjmp	.-2      	; 0x3d32 <__stop_program>
